{"version":3,"file":"cssp.js","sources":["../node_modules/css-tree/lib/common/List.js","../node_modules/css-tree/lib/utils/createCustomError.js","../node_modules/css-tree/lib/common/SyntaxError.js","../node_modules/css-tree/lib/tokenizer/const.js","../node_modules/css-tree/lib/tokenizer/char-code-definitions.js","../node_modules/css-tree/lib/tokenizer/utils.js","../node_modules/css-tree/lib/common/TokenStream.js","../node_modules/css-tree/lib/definition-syntax/generate.js","../node_modules/css-tree/lib/lexer/error.js","../node_modules/css-tree/lib/utils/names.js","../node_modules/css-tree/lib/common/adopt-buffer.js","../node_modules/css-tree/lib/tokenizer/index.js","../node_modules/css-tree/lib/lexer/generic-an-plus-b.js","../node_modules/css-tree/lib/lexer/generic-urange.js","../node_modules/css-tree/lib/lexer/generic.js","../node_modules/css-tree/lib/definition-syntax/SyntaxError.js","../node_modules/css-tree/lib/definition-syntax/tokenizer.js","../node_modules/css-tree/lib/definition-syntax/parse.js","../node_modules/css-tree/lib/definition-syntax/walk.js","../node_modules/css-tree/lib/lexer/prepare-tokens.js","../node_modules/css-tree/lib/lexer/match-graph.js","../node_modules/css-tree/lib/lexer/match.js","../node_modules/css-tree/lib/lexer/trace.js","../node_modules/css-tree/lib/lexer/search.js","../node_modules/css-tree/lib/lexer/structure.js","../node_modules/css-tree/lib/lexer/Lexer.js","../node_modules/css-tree/lib/definition-syntax/index.js","../node_modules/css-tree/lib/common/OffsetToLocation.js","../node_modules/css-tree/lib/parser/sequence.js","../node_modules/css-tree/lib/parser/create.js","../node_modules/source-map/lib/base64.js","../node_modules/source-map/lib/base64-vlq.js","../node_modules/source-map/lib/util.js","../node_modules/source-map/lib/array-set.js","../node_modules/source-map/lib/mapping-list.js","../node_modules/source-map/lib/source-map-generator.js","../node_modules/css-tree/lib/generator/sourceMap.js","../node_modules/css-tree/lib/generator/create.js","../node_modules/css-tree/lib/convertor/create.js","../node_modules/css-tree/lib/walker/create.js","../node_modules/css-tree/lib/utils/clone.js","../node_modules/css-tree/lib/syntax/config/mix.js","../node_modules/css-tree/lib/syntax/create.js","../node_modules/css-tree/lib/syntax/node/AnPlusB.js","../node_modules/css-tree/lib/syntax/node/Raw.js","../node_modules/css-tree/lib/syntax/node/Atrule.js","../node_modules/css-tree/lib/syntax/node/AtrulePrelude.js","../node_modules/css-tree/lib/syntax/node/AttributeSelector.js","../node_modules/css-tree/lib/syntax/node/Block.js","../node_modules/css-tree/lib/syntax/node/Brackets.js","../node_modules/css-tree/lib/syntax/node/CDC.js","../node_modules/css-tree/lib/syntax/node/CDO.js","../node_modules/css-tree/lib/syntax/node/ClassSelector.js","../node_modules/css-tree/lib/syntax/node/Combinator.js","../node_modules/css-tree/lib/syntax/node/Comment.js","../node_modules/css-tree/lib/syntax/node/Declaration.js","../node_modules/css-tree/lib/syntax/node/DeclarationList.js","../node_modules/css-tree/lib/syntax/node/Dimension.js","../node_modules/css-tree/lib/syntax/node/Function.js","../node_modules/css-tree/lib/syntax/node/HexColor.js","../node_modules/css-tree/lib/syntax/node/Identifier.js","../node_modules/css-tree/lib/syntax/node/IdSelector.js","../node_modules/css-tree/lib/syntax/node/MediaFeature.js","../node_modules/css-tree/lib/syntax/node/MediaQuery.js","../node_modules/css-tree/lib/syntax/node/MediaQueryList.js","../node_modules/css-tree/lib/syntax/node/Nth.js","../node_modules/css-tree/lib/syntax/node/Number.js","../node_modules/css-tree/lib/syntax/node/Operator.js","../node_modules/css-tree/lib/syntax/node/Parentheses.js","../node_modules/css-tree/lib/syntax/node/Percentage.js","../node_modules/css-tree/lib/syntax/node/PseudoClassSelector.js","../node_modules/css-tree/lib/syntax/node/PseudoElementSelector.js","../node_modules/css-tree/lib/syntax/node/Ratio.js","../node_modules/css-tree/lib/syntax/node/Rule.js","../node_modules/css-tree/lib/syntax/node/Selector.js","../node_modules/css-tree/lib/syntax/node/SelectorList.js","../node_modules/css-tree/lib/syntax/node/String.js","../node_modules/css-tree/lib/syntax/node/StyleSheet.js","../node_modules/css-tree/lib/syntax/node/TypeSelector.js","../node_modules/css-tree/lib/syntax/node/UnicodeRange.js","../node_modules/css-tree/lib/syntax/node/Url.js","../node_modules/css-tree/lib/syntax/node/Value.js","../node_modules/css-tree/lib/syntax/node/WhiteSpace.js","../node_modules/css-tree/lib/syntax/node/index.js","../node_modules/css-tree/lib/syntax/config/lexer.js","../node_modules/css-tree/lib/syntax/scope/default.js","../node_modules/css-tree/lib/syntax/scope/atrulePrelude.js","../node_modules/css-tree/lib/syntax/scope/selector.js","../node_modules/css-tree/lib/syntax/function/element.js","../node_modules/css-tree/lib/syntax/function/expression.js","../node_modules/css-tree/lib/syntax/function/var.js","../node_modules/css-tree/lib/syntax/scope/value.js","../node_modules/css-tree/lib/syntax/scope/index.js","../node_modules/css-tree/lib/syntax/atrule/font-face.js","../node_modules/css-tree/lib/syntax/atrule/import.js","../node_modules/css-tree/lib/syntax/atrule/media.js","../node_modules/css-tree/lib/syntax/atrule/page.js","../node_modules/css-tree/lib/syntax/atrule/supports.js","../node_modules/css-tree/lib/syntax/atrule/index.js","../node_modules/css-tree/lib/syntax/pseudo/dir.js","../node_modules/css-tree/lib/syntax/pseudo/has.js","../node_modules/css-tree/lib/syntax/pseudo/lang.js","../node_modules/css-tree/lib/syntax/pseudo/common/selectorList.js","../node_modules/css-tree/lib/syntax/pseudo/matches.js","../node_modules/css-tree/lib/syntax/pseudo/not.js","../node_modules/css-tree/lib/syntax/pseudo/common/nthWithOfClause.js","../node_modules/css-tree/lib/syntax/pseudo/nth-child.js","../node_modules/css-tree/lib/syntax/pseudo/nth-last-child.js","../node_modules/css-tree/lib/syntax/pseudo/common/nth.js","../node_modules/css-tree/lib/syntax/pseudo/nth-last-of-type.js","../node_modules/css-tree/lib/syntax/pseudo/nth-of-type.js","../node_modules/css-tree/lib/syntax/pseudo/slotted.js","../node_modules/css-tree/lib/syntax/pseudo/index.js","../node_modules/css-tree/lib/syntax/config/parser.js","../node_modules/css-tree/lib/syntax/config/walker.js","../node_modules/css-tree/lib/syntax/index.js","../node_modules/css-tree/lib/index.js","../src/nodes/assignmentExpression.js","../src/nodes/binaryExpression.js","../src/nodes/blockStatement.js","../src/nodes/callExpression.js","../src/nodes/expressionStatement.js","../src/nodes/functionDeclaration.js","../src/utils.js","../src/nodes/identifier.js","../src/nodes/ifStatement.js","../src/nodes/literal.js","../src/nodes/memberExpression.js","../src/nodes/objectExpression.js","../src/nodes/pipeExpression.js","../src/nodes/property.js","../src/nodes/returnStatement.js","../src/nodes/root.js","../src/nodes/valueExpression.js","../src/nodes/whileStatement.js","../src/nodes/index.js","../src/transform.js","../src/runtime/types.js","../src/transpile.js","../src/index.js","../src/playground.js"],"sourcesContent":["//\n//                              list\n//                            ┌──────┐\n//             ┌──────────────┼─head │\n//             │              │ tail─┼──────────────┐\n//             │              └──────┘              │\n//             ▼                                    ▼\n//            item        item        item        item\n//          ┌──────┐    ┌──────┐    ┌──────┐    ┌──────┐\n//  null ◀──┼─prev │◀───┼─prev │◀───┼─prev │◀───┼─prev │\n//          │ next─┼───▶│ next─┼───▶│ next─┼───▶│ next─┼──▶ null\n//          ├──────┤    ├──────┤    ├──────┤    ├──────┤\n//          │ data │    │ data │    │ data │    │ data │\n//          └──────┘    └──────┘    └──────┘    └──────┘\n//\n\nfunction createItem(data) {\n    return {\n        prev: null,\n        next: null,\n        data: data\n    };\n}\n\nfunction allocateCursor(node, prev, next) {\n    var cursor;\n\n    if (cursors !== null) {\n        cursor = cursors;\n        cursors = cursors.cursor;\n        cursor.prev = prev;\n        cursor.next = next;\n        cursor.cursor = node.cursor;\n    } else {\n        cursor = {\n            prev: prev,\n            next: next,\n            cursor: node.cursor\n        };\n    }\n\n    node.cursor = cursor;\n\n    return cursor;\n}\n\nfunction releaseCursor(node) {\n    var cursor = node.cursor;\n\n    node.cursor = cursor.cursor;\n    cursor.prev = null;\n    cursor.next = null;\n    cursor.cursor = cursors;\n    cursors = cursor;\n}\n\nvar cursors = null;\nvar List = function() {\n    this.cursor = null;\n    this.head = null;\n    this.tail = null;\n};\n\nList.createItem = createItem;\nList.prototype.createItem = createItem;\n\nList.prototype.updateCursors = function(prevOld, prevNew, nextOld, nextNew) {\n    var cursor = this.cursor;\n\n    while (cursor !== null) {\n        if (cursor.prev === prevOld) {\n            cursor.prev = prevNew;\n        }\n\n        if (cursor.next === nextOld) {\n            cursor.next = nextNew;\n        }\n\n        cursor = cursor.cursor;\n    }\n};\n\nList.prototype.getSize = function() {\n    var size = 0;\n    var cursor = this.head;\n\n    while (cursor) {\n        size++;\n        cursor = cursor.next;\n    }\n\n    return size;\n};\n\nList.prototype.fromArray = function(array) {\n    var cursor = null;\n\n    this.head = null;\n\n    for (var i = 0; i < array.length; i++) {\n        var item = createItem(array[i]);\n\n        if (cursor !== null) {\n            cursor.next = item;\n        } else {\n            this.head = item;\n        }\n\n        item.prev = cursor;\n        cursor = item;\n    }\n\n    this.tail = cursor;\n\n    return this;\n};\n\nList.prototype.toArray = function() {\n    var cursor = this.head;\n    var result = [];\n\n    while (cursor) {\n        result.push(cursor.data);\n        cursor = cursor.next;\n    }\n\n    return result;\n};\n\nList.prototype.toJSON = List.prototype.toArray;\n\nList.prototype.isEmpty = function() {\n    return this.head === null;\n};\n\nList.prototype.first = function() {\n    return this.head && this.head.data;\n};\n\nList.prototype.last = function() {\n    return this.tail && this.tail.data;\n};\n\nList.prototype.each = function(fn, context) {\n    var item;\n\n    if (context === undefined) {\n        context = this;\n    }\n\n    // push cursor\n    var cursor = allocateCursor(this, null, this.head);\n\n    while (cursor.next !== null) {\n        item = cursor.next;\n        cursor.next = item.next;\n\n        fn.call(context, item.data, item, this);\n    }\n\n    // pop cursor\n    releaseCursor(this);\n};\n\nList.prototype.forEach = List.prototype.each;\n\nList.prototype.eachRight = function(fn, context) {\n    var item;\n\n    if (context === undefined) {\n        context = this;\n    }\n\n    // push cursor\n    var cursor = allocateCursor(this, this.tail, null);\n\n    while (cursor.prev !== null) {\n        item = cursor.prev;\n        cursor.prev = item.prev;\n\n        fn.call(context, item.data, item, this);\n    }\n\n    // pop cursor\n    releaseCursor(this);\n};\n\nList.prototype.forEachRight = List.prototype.eachRight;\n\nList.prototype.nextUntil = function(start, fn, context) {\n    if (start === null) {\n        return;\n    }\n\n    var item;\n\n    if (context === undefined) {\n        context = this;\n    }\n\n    // push cursor\n    var cursor = allocateCursor(this, null, start);\n\n    while (cursor.next !== null) {\n        item = cursor.next;\n        cursor.next = item.next;\n\n        if (fn.call(context, item.data, item, this)) {\n            break;\n        }\n    }\n\n    // pop cursor\n    releaseCursor(this);\n};\n\nList.prototype.prevUntil = function(start, fn, context) {\n    if (start === null) {\n        return;\n    }\n\n    var item;\n\n    if (context === undefined) {\n        context = this;\n    }\n\n    // push cursor\n    var cursor = allocateCursor(this, start, null);\n\n    while (cursor.prev !== null) {\n        item = cursor.prev;\n        cursor.prev = item.prev;\n\n        if (fn.call(context, item.data, item, this)) {\n            break;\n        }\n    }\n\n    // pop cursor\n    releaseCursor(this);\n};\n\nList.prototype.some = function(fn, context) {\n    var cursor = this.head;\n\n    if (context === undefined) {\n        context = this;\n    }\n\n    while (cursor !== null) {\n        if (fn.call(context, cursor.data, cursor, this)) {\n            return true;\n        }\n\n        cursor = cursor.next;\n    }\n\n    return false;\n};\n\nList.prototype.map = function(fn, context) {\n    var result = new List();\n    var cursor = this.head;\n\n    if (context === undefined) {\n        context = this;\n    }\n\n    while (cursor !== null) {\n        result.appendData(fn.call(context, cursor.data, cursor, this));\n        cursor = cursor.next;\n    }\n\n    return result;\n};\n\nList.prototype.filter = function(fn, context) {\n    var result = new List();\n    var cursor = this.head;\n\n    if (context === undefined) {\n        context = this;\n    }\n\n    while (cursor !== null) {\n        if (fn.call(context, cursor.data, cursor, this)) {\n            result.appendData(cursor.data);\n        }\n        cursor = cursor.next;\n    }\n\n    return result;\n};\n\nList.prototype.clear = function() {\n    this.head = null;\n    this.tail = null;\n};\n\nList.prototype.copy = function() {\n    var result = new List();\n    var cursor = this.head;\n\n    while (cursor !== null) {\n        result.insert(createItem(cursor.data));\n        cursor = cursor.next;\n    }\n\n    return result;\n};\n\nList.prototype.prepend = function(item) {\n    //      head\n    //    ^\n    // item\n    this.updateCursors(null, item, this.head, item);\n\n    // insert to the beginning of the list\n    if (this.head !== null) {\n        // new item <- first item\n        this.head.prev = item;\n\n        // new item -> first item\n        item.next = this.head;\n    } else {\n        // if list has no head, then it also has no tail\n        // in this case tail points to the new item\n        this.tail = item;\n    }\n\n    // head always points to new item\n    this.head = item;\n\n    return this;\n};\n\nList.prototype.prependData = function(data) {\n    return this.prepend(createItem(data));\n};\n\nList.prototype.append = function(item) {\n    return this.insert(item);\n};\n\nList.prototype.appendData = function(data) {\n    return this.insert(createItem(data));\n};\n\nList.prototype.insert = function(item, before) {\n    if (before !== undefined && before !== null) {\n        // prev   before\n        //      ^\n        //     item\n        this.updateCursors(before.prev, item, before, item);\n\n        if (before.prev === null) {\n            // insert to the beginning of list\n            if (this.head !== before) {\n                throw new Error('before doesn\\'t belong to list');\n            }\n\n            // since head points to before therefore list doesn't empty\n            // no need to check tail\n            this.head = item;\n            before.prev = item;\n            item.next = before;\n\n            this.updateCursors(null, item);\n        } else {\n\n            // insert between two items\n            before.prev.next = item;\n            item.prev = before.prev;\n\n            before.prev = item;\n            item.next = before;\n        }\n    } else {\n        // tail\n        //      ^\n        //      item\n        this.updateCursors(this.tail, item, null, item);\n\n        // insert to the ending of the list\n        if (this.tail !== null) {\n            // last item -> new item\n            this.tail.next = item;\n\n            // last item <- new item\n            item.prev = this.tail;\n        } else {\n            // if list has no tail, then it also has no head\n            // in this case head points to new item\n            this.head = item;\n        }\n\n        // tail always points to new item\n        this.tail = item;\n    }\n\n    return this;\n};\n\nList.prototype.insertData = function(data, before) {\n    return this.insert(createItem(data), before);\n};\n\nList.prototype.remove = function(item) {\n    //      item\n    //       ^\n    // prev     next\n    this.updateCursors(item, item.prev, item, item.next);\n\n    if (item.prev !== null) {\n        item.prev.next = item.next;\n    } else {\n        if (this.head !== item) {\n            throw new Error('item doesn\\'t belong to list');\n        }\n\n        this.head = item.next;\n    }\n\n    if (item.next !== null) {\n        item.next.prev = item.prev;\n    } else {\n        if (this.tail !== item) {\n            throw new Error('item doesn\\'t belong to list');\n        }\n\n        this.tail = item.prev;\n    }\n\n    item.prev = null;\n    item.next = null;\n\n    return item;\n};\n\nList.prototype.push = function(data) {\n    this.insert(createItem(data));\n};\n\nList.prototype.pop = function() {\n    if (this.tail !== null) {\n        return this.remove(this.tail);\n    }\n};\n\nList.prototype.unshift = function(data) {\n    this.prepend(createItem(data));\n};\n\nList.prototype.shift = function() {\n    if (this.head !== null) {\n        return this.remove(this.head);\n    }\n};\n\nList.prototype.prependList = function(list) {\n    return this.insertList(list, this.head);\n};\n\nList.prototype.appendList = function(list) {\n    return this.insertList(list);\n};\n\nList.prototype.insertList = function(list, before) {\n    // ignore empty lists\n    if (list.head === null) {\n        return this;\n    }\n\n    if (before !== undefined && before !== null) {\n        this.updateCursors(before.prev, list.tail, before, list.head);\n\n        // insert in the middle of dist list\n        if (before.prev !== null) {\n            // before.prev <-> list.head\n            before.prev.next = list.head;\n            list.head.prev = before.prev;\n        } else {\n            this.head = list.head;\n        }\n\n        before.prev = list.tail;\n        list.tail.next = before;\n    } else {\n        this.updateCursors(this.tail, list.tail, null, list.head);\n\n        // insert to end of the list\n        if (this.tail !== null) {\n            // if destination list has a tail, then it also has a head,\n            // but head doesn't change\n\n            // dest tail -> source head\n            this.tail.next = list.head;\n\n            // dest tail <- source head\n            list.head.prev = this.tail;\n        } else {\n            // if list has no a tail, then it also has no a head\n            // in this case points head to new item\n            this.head = list.head;\n        }\n\n        // tail always start point to new item\n        this.tail = list.tail;\n    }\n\n    list.head = null;\n    list.tail = null;\n\n    return this;\n};\n\nList.prototype.replace = function(oldItem, newItemOrList) {\n    if ('head' in newItemOrList) {\n        this.insertList(newItemOrList, oldItem);\n    } else {\n        this.insert(newItemOrList, oldItem);\n    }\n\n    this.remove(oldItem);\n};\n\nmodule.exports = List;\n","module.exports = function createCustomError(name, message) {\n    // use Object.create(), because some VMs prevent setting line/column otherwise\n    // (iOS Safari 10 even throws an exception)\n    var error = Object.create(SyntaxError.prototype);\n    var errorStack = new Error();\n\n    error.name = name;\n    error.message = message;\n\n    Object.defineProperty(error, 'stack', {\n        get: function() {\n            return (errorStack.stack || '').replace(/^(.+\\n){1,3}/, name + ': ' + message + '\\n');\n        }\n    });\n\n    return error;\n};\n","var createCustomError = require('../utils/createCustomError');\nvar MAX_LINE_LENGTH = 100;\nvar OFFSET_CORRECTION = 60;\nvar TAB_REPLACEMENT = '    ';\n\nfunction sourceFragment(error, extraLines) {\n    function processLines(start, end) {\n        return lines.slice(start, end).map(function(line, idx) {\n            var num = String(start + idx + 1);\n\n            while (num.length < maxNumLength) {\n                num = ' ' + num;\n            }\n\n            return num + ' |' + line;\n        }).join('\\n');\n    }\n\n    var lines = error.source.split(/\\r\\n?|\\n|\\f/);\n    var line = error.line;\n    var column = error.column;\n    var startLine = Math.max(1, line - extraLines) - 1;\n    var endLine = Math.min(line + extraLines, lines.length + 1);\n    var maxNumLength = Math.max(4, String(endLine).length) + 1;\n    var cutLeft = 0;\n\n    // column correction according to replaced tab before column\n    column += (TAB_REPLACEMENT.length - 1) * (lines[line - 1].substr(0, column - 1).match(/\\t/g) || []).length;\n\n    if (column > MAX_LINE_LENGTH) {\n        cutLeft = column - OFFSET_CORRECTION + 3;\n        column = OFFSET_CORRECTION - 2;\n    }\n\n    for (var i = startLine; i <= endLine; i++) {\n        if (i >= 0 && i < lines.length) {\n            lines[i] = lines[i].replace(/\\t/g, TAB_REPLACEMENT);\n            lines[i] =\n                (cutLeft > 0 && lines[i].length > cutLeft ? '\\u2026' : '') +\n                lines[i].substr(cutLeft, MAX_LINE_LENGTH - 2) +\n                (lines[i].length > cutLeft + MAX_LINE_LENGTH - 1 ? '\\u2026' : '');\n        }\n    }\n\n    return [\n        processLines(startLine, line),\n        new Array(column + maxNumLength + 2).join('-') + '^',\n        processLines(line, endLine)\n    ].filter(Boolean).join('\\n');\n}\n\nvar SyntaxError = function(message, source, offset, line, column) {\n    var error = createCustomError('SyntaxError', message);\n\n    error.source = source;\n    error.offset = offset;\n    error.line = line;\n    error.column = column;\n\n    error.sourceFragment = function(extraLines) {\n        return sourceFragment(error, isNaN(extraLines) ? 0 : extraLines);\n    };\n    Object.defineProperty(error, 'formattedMessage', {\n        get: function() {\n            return (\n                'Parse error: ' + error.message + '\\n' +\n                sourceFragment(error, 2)\n            );\n        }\n    });\n\n    // for backward capability\n    error.parseError = {\n        offset: offset,\n        line: line,\n        column: column\n    };\n\n    return error;\n};\n\nmodule.exports = SyntaxError;\n","// CSS Syntax Module Level 3\n// https://www.w3.org/TR/css-syntax-3/\nvar TYPE = {\n    EOF: 0,                 // <EOF-token>\n    Ident: 1,               // <ident-token>\n    Function: 2,            // <function-token>\n    AtKeyword: 3,           // <at-keyword-token>\n    Hash: 4,                // <hash-token>\n    String: 5,              // <string-token>\n    BadString: 6,           // <bad-string-token>\n    Url: 7,                 // <url-token>\n    BadUrl: 8,              // <bad-url-token>\n    Delim: 9,               // <delim-token>\n    Number: 10,             // <number-token>\n    Percentage: 11,         // <percentage-token>\n    Dimension: 12,          // <dimension-token>\n    WhiteSpace: 13,         // <whitespace-token>\n    CDO: 14,                // <CDO-token>\n    CDC: 15,                // <CDC-token>\n    Colon: 16,              // <colon-token>     :\n    Semicolon: 17,          // <semicolon-token> ;\n    Comma: 18,              // <comma-token>     ,\n    LeftSquareBracket: 19,  // <[-token>\n    RightSquareBracket: 20, // <]-token>\n    LeftParenthesis: 21,    // <(-token>\n    RightParenthesis: 22,   // <)-token>\n    LeftCurlyBracket: 23,   // <{-token>\n    RightCurlyBracket: 24,  // <}-token>\n    Comment: 25\n};\n\nvar NAME = Object.keys(TYPE).reduce(function(result, key) {\n    result[TYPE[key]] = key;\n    return result;\n}, {});\n\nmodule.exports = {\n    TYPE: TYPE,\n    NAME: NAME\n};\n","var EOF = 0;\n\n// https://drafts.csswg.org/css-syntax-3/\n// § 4.2. Definitions\n\n// digit\n// A code point between U+0030 DIGIT ZERO (0) and U+0039 DIGIT NINE (9).\nfunction isDigit(code) {\n    return code >= 0x0030 && code <= 0x0039;\n}\n\n// hex digit\n// A digit, or a code point between U+0041 LATIN CAPITAL LETTER A (A) and U+0046 LATIN CAPITAL LETTER F (F),\n// or a code point between U+0061 LATIN SMALL LETTER A (a) and U+0066 LATIN SMALL LETTER F (f).\nfunction isHexDigit(code) {\n    return (\n        isDigit(code) || // 0 .. 9\n        (code >= 0x0041 && code <= 0x0046) || // A .. F\n        (code >= 0x0061 && code <= 0x0066)    // a .. f\n    );\n}\n\n// uppercase letter\n// A code point between U+0041 LATIN CAPITAL LETTER A (A) and U+005A LATIN CAPITAL LETTER Z (Z).\nfunction isUppercaseLetter(code) {\n    return code >= 0x0041 && code <= 0x005A;\n}\n\n// lowercase letter\n// A code point between U+0061 LATIN SMALL LETTER A (a) and U+007A LATIN SMALL LETTER Z (z).\nfunction isLowercaseLetter(code) {\n    return code >= 0x0061 && code <= 0x007A;\n}\n\n// letter\n// An uppercase letter or a lowercase letter.\nfunction isLetter(code) {\n    return isUppercaseLetter(code) || isLowercaseLetter(code);\n}\n\n// non-ASCII code point\n// A code point with a value equal to or greater than U+0080 <control>.\nfunction isNonAscii(code) {\n    return code >= 0x0080;\n}\n\n// name-start code point\n// A letter, a non-ASCII code point, or U+005F LOW LINE (_).\nfunction isNameStart(code) {\n    return isLetter(code) || isNonAscii(code) || code === 0x005F;\n}\n\n// name code point\n// A name-start code point, a digit, or U+002D HYPHEN-MINUS (-).\nfunction isName(code) {\n    return isNameStart(code) || isDigit(code) || code === 0x002D;\n}\n\n// non-printable code point\n// A code point between U+0000 NULL and U+0008 BACKSPACE, or U+000B LINE TABULATION,\n// or a code point between U+000E SHIFT OUT and U+001F INFORMATION SEPARATOR ONE, or U+007F DELETE.\nfunction isNonPrintable(code) {\n    return (\n        (code >= 0x0000 && code <= 0x0008) ||\n        (code === 0x000B) ||\n        (code >= 0x000E && code <= 0x001F) ||\n        (code === 0x007F)\n    );\n}\n\n// newline\n// U+000A LINE FEED. Note that U+000D CARRIAGE RETURN and U+000C FORM FEED are not included in this definition,\n// as they are converted to U+000A LINE FEED during preprocessing.\n// TODO: we doesn't do a preprocessing, so check a code point for U+000D CARRIAGE RETURN and U+000C FORM FEED\nfunction isNewline(code) {\n    return code === 0x000A || code === 0x000D || code === 0x000C;\n}\n\n// whitespace\n// A newline, U+0009 CHARACTER TABULATION, or U+0020 SPACE.\nfunction isWhiteSpace(code) {\n    return isNewline(code) || code === 0x0020 || code === 0x0009;\n}\n\n// § 4.3.8. Check if two code points are a valid escape\nfunction isValidEscape(first, second) {\n    // If the first code point is not U+005C REVERSE SOLIDUS (\\), return false.\n    if (first !== 0x005C) {\n        return false;\n    }\n\n    // Otherwise, if the second code point is a newline or EOF, return false.\n    if (isNewline(second) || second === EOF) {\n        return false;\n    }\n\n    // Otherwise, return true.\n    return true;\n}\n\n// § 4.3.9. Check if three code points would start an identifier\nfunction isIdentifierStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002D HYPHEN-MINUS\n    if (first === 0x002D) {\n        // If the second code point is a name-start code point or a U+002D HYPHEN-MINUS,\n        // or the second and third code points are a valid escape, return true. Otherwise, return false.\n        return (\n            isNameStart(second) ||\n            second === 0x002D ||\n            isValidEscape(second, third)\n        );\n    }\n\n    // name-start code point\n    if (isNameStart(first)) {\n        // Return true.\n        return true;\n    }\n\n    // U+005C REVERSE SOLIDUS (\\)\n    if (first === 0x005C) {\n        // If the first and second code points are a valid escape, return true. Otherwise, return false.\n        return isValidEscape(first, second);\n    }\n\n    // anything else\n    // Return false.\n    return false;\n}\n\n// § 4.3.10. Check if three code points would start a number\nfunction isNumberStart(first, second, third) {\n    // Look at the first code point:\n\n    // U+002B PLUS SIGN (+)\n    // U+002D HYPHEN-MINUS (-)\n    if (first === 0x002B || first === 0x002D) {\n        // If the second code point is a digit, return true.\n        if (isDigit(second)) {\n            return 2;\n        }\n\n        // Otherwise, if the second code point is a U+002E FULL STOP (.)\n        // and the third code point is a digit, return true.\n        // Otherwise, return false.\n        return second === 0x002E && isDigit(third) ? 3 : 0;\n    }\n\n    // U+002E FULL STOP (.)\n    if (first === 0x002E) {\n        // If the second code point is a digit, return true. Otherwise, return false.\n        return isDigit(second) ? 2 : 0;\n    }\n\n    // digit\n    if (isDigit(first)) {\n        // Return true.\n        return 1;\n    }\n\n    // anything else\n    // Return false.\n    return 0;\n}\n\n//\n// Misc\n//\n\n// detect BOM (https://en.wikipedia.org/wiki/Byte_order_mark)\nfunction isBOM(code) {\n    // UTF-16BE\n    if (code === 0xFEFF) {\n        return 1;\n    }\n\n    // UTF-16LE\n    if (code === 0xFFFE) {\n        return 1;\n    }\n\n    return 0;\n}\n\n// Fast code category\n//\n// https://drafts.csswg.org/css-syntax/#tokenizer-definitions\n// > non-ASCII code point\n// >   A code point with a value equal to or greater than U+0080 <control>\n// > name-start code point\n// >   A letter, a non-ASCII code point, or U+005F LOW LINE (_).\n// > name code point\n// >   A name-start code point, a digit, or U+002D HYPHEN-MINUS (-)\n// That means only ASCII code points has a special meaning and we define a maps for 0..127 codes only\nvar CATEGORY = new Array(0x80);\ncharCodeCategory.Eof = 0x80;\ncharCodeCategory.WhiteSpace = 0x82;\ncharCodeCategory.Digit = 0x83;\ncharCodeCategory.NameStart = 0x84;\ncharCodeCategory.NonPrintable = 0x85;\n\nfor (var i = 0; i < CATEGORY.length; i++) {\n    switch (true) {\n        case isWhiteSpace(i):\n            CATEGORY[i] = charCodeCategory.WhiteSpace;\n            break;\n\n        case isDigit(i):\n            CATEGORY[i] = charCodeCategory.Digit;\n            break;\n\n        case isNameStart(i):\n            CATEGORY[i] = charCodeCategory.NameStart;\n            break;\n\n        case isNonPrintable(i):\n            CATEGORY[i] = charCodeCategory.NonPrintable;\n            break;\n\n        default:\n            CATEGORY[i] = i || charCodeCategory.Eof;\n    }\n}\n\nfunction charCodeCategory(code) {\n    return code < 0x80 ? CATEGORY[code] : charCodeCategory.NameStart;\n};\n\nmodule.exports = {\n    isDigit: isDigit,\n    isHexDigit: isHexDigit,\n    isUppercaseLetter: isUppercaseLetter,\n    isLowercaseLetter: isLowercaseLetter,\n    isLetter: isLetter,\n    isNonAscii: isNonAscii,\n    isNameStart: isNameStart,\n    isName: isName,\n    isNonPrintable: isNonPrintable,\n    isNewline: isNewline,\n    isWhiteSpace: isWhiteSpace,\n    isValidEscape: isValidEscape,\n    isIdentifierStart: isIdentifierStart,\n    isNumberStart: isNumberStart,\n\n    isBOM: isBOM,\n    charCodeCategory: charCodeCategory\n};\n","var charCodeDef = require('./char-code-definitions');\nvar isDigit = charCodeDef.isDigit;\nvar isHexDigit = charCodeDef.isHexDigit;\nvar isUppercaseLetter = charCodeDef.isUppercaseLetter;\nvar isName = charCodeDef.isName;\nvar isWhiteSpace = charCodeDef.isWhiteSpace;\nvar isValidEscape = charCodeDef.isValidEscape;\n\nfunction getCharCode(source, offset) {\n    return offset < source.length ? source.charCodeAt(offset) : 0;\n}\n\nfunction getNewlineLength(source, offset, code) {\n    if (code === 13 /* \\r */ && getCharCode(source, offset + 1) === 10 /* \\n */) {\n        return 2;\n    }\n\n    return 1;\n}\n\nfunction cmpChar(testStr, offset, referenceCode) {\n    var code = testStr.charCodeAt(offset);\n\n    // code.toLowerCase() for A..Z\n    if (isUppercaseLetter(code)) {\n        code = code | 32;\n    }\n\n    return code === referenceCode;\n}\n\nfunction cmpStr(testStr, start, end, referenceStr) {\n    if (end - start !== referenceStr.length) {\n        return false;\n    }\n\n    if (start < 0 || end > testStr.length) {\n        return false;\n    }\n\n    for (var i = start; i < end; i++) {\n        var testCode = testStr.charCodeAt(i);\n        var referenceCode = referenceStr.charCodeAt(i - start);\n\n        // testCode.toLowerCase() for A..Z\n        if (isUppercaseLetter(testCode)) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction findWhiteSpaceStart(source, offset) {\n    for (; offset >= 0; offset--) {\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset + 1;\n}\n\nfunction findWhiteSpaceEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!isWhiteSpace(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\nfunction findDecimalNumberEnd(source, offset) {\n    for (; offset < source.length; offset++) {\n        if (!isDigit(source.charCodeAt(offset))) {\n            break;\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.7. Consume an escaped code point\nfunction consumeEscaped(source, offset) {\n    // It assumes that the U+005C REVERSE SOLIDUS (\\) has already been consumed and\n    // that the next input code point has already been verified to be part of a valid escape.\n    offset += 2;\n\n    // hex digit\n    if (isHexDigit(getCharCode(source, offset - 1))) {\n        // Consume as many hex digits as possible, but no more than 5.\n        // Note that this means 1-6 hex digits have been consumed in total.\n        for (var maxOffset = Math.min(source.length, offset + 5); offset < maxOffset; offset++) {\n            if (!isHexDigit(getCharCode(source, offset))) {\n                break;\n            }\n        }\n\n        // If the next input code point is whitespace, consume it as well.\n        var code = getCharCode(source, offset);\n        if (isWhiteSpace(code)) {\n            offset += getNewlineLength(source, offset, code);\n        }\n    }\n\n    return offset;\n}\n\n// §4.3.11. Consume a name\n// Note: This algorithm does not do the verification of the first few code points that are necessary\n// to ensure the returned code points would constitute an <ident-token>. If that is the intended use,\n// ensure that the stream starts with an identifier before calling this algorithm.\nfunction consumeName(source, offset) {\n    // Let result initially be an empty string.\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        var code = source.charCodeAt(offset);\n\n        // name code point\n        if (isName(code)) {\n            // Append the code point to result.\n            continue;\n        }\n\n        // the stream starts with a valid escape\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point. Append the returned code point to result.\n            offset = consumeEscaped(source, offset) - 1;\n            continue;\n        }\n\n        // anything else\n        // Reconsume the current input code point. Return result.\n        break;\n    }\n\n    return offset;\n}\n\n// §4.3.12. Consume a number\nfunction consumeNumber(source, offset) {\n    var code = source.charCodeAt(offset);\n\n    // 2. If the next input code point is U+002B PLUS SIGN (+) or U+002D HYPHEN-MINUS (-),\n    // consume it and append it to repr.\n    if (code === 0x002B || code === 0x002D) {\n        code = source.charCodeAt(offset += 1);\n    }\n\n    // 3. While the next input code point is a digit, consume it and append it to repr.\n    if (isDigit(code)) {\n        offset = findDecimalNumberEnd(source, offset + 1);\n        code = source.charCodeAt(offset);\n    }\n\n    // 4. If the next 2 input code points are U+002E FULL STOP (.) followed by a digit, then:\n    if (code === 0x002E && isDigit(source.charCodeAt(offset + 1))) {\n        // 4.1 Consume them.\n        // 4.2 Append them to repr.\n        code = source.charCodeAt(offset += 2);\n\n        // 4.3 Set type to \"number\".\n        // TODO\n\n        // 4.4 While the next input code point is a digit, consume it and append it to repr.\n\n        offset = findDecimalNumberEnd(source, offset);\n    }\n\n    // 5. If the next 2 or 3 input code points are U+0045 LATIN CAPITAL LETTER E (E)\n    // or U+0065 LATIN SMALL LETTER E (e), ... , followed by a digit, then:\n    if (cmpChar(source, offset, 101 /* e */)) {\n        var sign = 0;\n        code = source.charCodeAt(offset + 1);\n\n        // ... optionally followed by U+002D HYPHEN-MINUS (-) or U+002B PLUS SIGN (+) ...\n        if (code === 0x002D || code === 0x002B) {\n            sign = 1;\n            code = source.charCodeAt(offset + 2);\n        }\n\n        // ... followed by a digit\n        if (isDigit(code)) {\n            // 5.1 Consume them.\n            // 5.2 Append them to repr.\n\n            // 5.3 Set type to \"number\".\n            // TODO\n\n            // 5.4 While the next input code point is a digit, consume it and append it to repr.\n            offset = findDecimalNumberEnd(source, offset + 1 + sign + 1);\n        }\n    }\n\n    return offset;\n}\n\n// § 4.3.14. Consume the remnants of a bad url\n// ... its sole use is to consume enough of the input stream to reach a recovery point\n// where normal tokenizing can resume.\nfunction consumeBadUrlRemnants(source, offset) {\n    // Repeatedly consume the next input code point from the stream:\n    for (; offset < source.length; offset++) {\n        var code = source.charCodeAt(offset);\n\n        // U+0029 RIGHT PARENTHESIS ())\n        // EOF\n        if (code === 0x0029) {\n            // Return.\n            offset++;\n            break;\n        }\n\n        if (isValidEscape(code, getCharCode(source, offset + 1))) {\n            // Consume an escaped code point.\n            // Note: This allows an escaped right parenthesis (\"\\)\") to be encountered\n            // without ending the <bad-url-token>. This is otherwise identical to\n            // the \"anything else\" clause.\n            offset = consumeEscaped(source, offset);\n        }\n    }\n\n    return offset;\n}\n\nmodule.exports = {\n    consumeEscaped: consumeEscaped,\n    consumeName: consumeName,\n    consumeNumber: consumeNumber,\n    consumeBadUrlRemnants: consumeBadUrlRemnants,\n\n    cmpChar: cmpChar,\n    cmpStr: cmpStr,\n\n    getNewlineLength: getNewlineLength,\n    findWhiteSpaceStart: findWhiteSpaceStart,\n    findWhiteSpaceEnd: findWhiteSpaceEnd\n};\n","var constants = require('../tokenizer/const');\nvar TYPE = constants.TYPE;\nvar NAME = constants.NAME;\n\nvar utils = require('../tokenizer/utils');\nvar cmpStr = utils.cmpStr;\n\nvar EOF = TYPE.EOF;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\n\nvar OFFSET_MASK = 0x00FFFFFF;\nvar TYPE_SHIFT = 24;\n\nvar TokenStream = function() {\n    this.offsetAndType = null;\n    this.balance = null;\n\n    this.reset();\n};\n\nTokenStream.prototype = {\n    reset: function() {\n        this.eof = false;\n        this.tokenIndex = -1;\n        this.tokenType = 0;\n        this.tokenStart = this.firstCharOffset;\n        this.tokenEnd = this.firstCharOffset;\n    },\n\n    lookupType: function(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset] >> TYPE_SHIFT;\n        }\n\n        return EOF;\n    },\n    lookupOffset: function(offset) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return this.offsetAndType[offset - 1] & OFFSET_MASK;\n        }\n\n        return this.source.length;\n    },\n    lookupValue: function(offset, referenceStr) {\n        offset += this.tokenIndex;\n\n        if (offset < this.tokenCount) {\n            return cmpStr(\n                this.source,\n                this.offsetAndType[offset - 1] & OFFSET_MASK,\n                this.offsetAndType[offset] & OFFSET_MASK,\n                referenceStr\n            );\n        }\n\n        return false;\n    },\n    getTokenStart: function(tokenIndex) {\n        if (tokenIndex === this.tokenIndex) {\n            return this.tokenStart;\n        }\n\n        if (tokenIndex > 0) {\n            return tokenIndex < this.tokenCount\n                ? this.offsetAndType[tokenIndex - 1] & OFFSET_MASK\n                : this.offsetAndType[this.tokenCount] & OFFSET_MASK;\n        }\n\n        return this.firstCharOffset;\n    },\n\n    // TODO: -> skipUntilBalanced\n    getRawLength: function(startToken, mode) {\n        var cursor = startToken;\n        var balanceEnd;\n        var offset = this.offsetAndType[Math.max(cursor - 1, 0)] & OFFSET_MASK;\n        var type;\n\n        loop:\n        for (; cursor < this.tokenCount; cursor++) {\n            balanceEnd = this.balance[cursor];\n\n            // stop scanning on balance edge that points to offset before start token\n            if (balanceEnd < startToken) {\n                break loop;\n            }\n\n            type = this.offsetAndType[cursor] >> TYPE_SHIFT;\n\n            // check token is stop type\n            switch (mode(type, this.source, offset)) {\n                case 1:\n                    break loop;\n\n                case 2:\n                    cursor++;\n                    break loop;\n\n                default:\n                    offset = this.offsetAndType[cursor] & OFFSET_MASK;\n\n                    // fast forward to the end of balanced block\n                    if (this.balance[balanceEnd] === cursor) {\n                        cursor = balanceEnd;\n                    }\n            }\n        }\n\n        return cursor - this.tokenIndex;\n    },\n    isBalanceEdge: function(pos) {\n        return this.balance[this.tokenIndex] < pos;\n    },\n    isDelim: function(code, offset) {\n        if (offset) {\n            return (\n                this.lookupType(offset) === TYPE.Delim &&\n                this.source.charCodeAt(this.lookupOffset(offset)) === code\n            );\n        }\n\n        return (\n            this.tokenType === TYPE.Delim &&\n            this.source.charCodeAt(this.tokenStart) === code\n        );\n    },\n\n    getTokenValue: function() {\n        return this.source.substring(this.tokenStart, this.tokenEnd);\n    },\n    getTokenLength: function() {\n        return this.tokenEnd - this.tokenStart;\n    },\n    substrToCursor: function(start) {\n        return this.source.substring(start, this.tokenStart);\n    },\n\n    skipWS: function() {\n        for (var i = this.tokenIndex, skipTokenCount = 0; i < this.tokenCount; i++, skipTokenCount++) {\n            if ((this.offsetAndType[i] >> TYPE_SHIFT) !== WHITESPACE) {\n                break;\n            }\n        }\n\n        if (skipTokenCount > 0) {\n            this.skip(skipTokenCount);\n        }\n    },\n    skipSC: function() {\n        while (this.tokenType === WHITESPACE || this.tokenType === COMMENT) {\n            this.next();\n        }\n    },\n    skip: function(tokenCount) {\n        var next = this.tokenIndex + tokenCount;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.offsetAndType[next - 1] & OFFSET_MASK;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.tokenIndex = this.tokenCount;\n            this.next();\n        }\n    },\n    next: function() {\n        var next = this.tokenIndex + 1;\n\n        if (next < this.tokenCount) {\n            this.tokenIndex = next;\n            this.tokenStart = this.tokenEnd;\n            next = this.offsetAndType[next];\n            this.tokenType = next >> TYPE_SHIFT;\n            this.tokenEnd = next & OFFSET_MASK;\n        } else {\n            this.tokenIndex = this.tokenCount;\n            this.eof = true;\n            this.tokenType = EOF;\n            this.tokenStart = this.tokenEnd = this.source.length;\n        }\n    },\n\n    dump: function() {\n        var offset = this.firstCharOffset;\n\n        return Array.prototype.slice.call(this.offsetAndType, 0, this.tokenCount).map(function(item, idx) {\n            var start = offset;\n            var end = item & OFFSET_MASK;\n\n            offset = end;\n\n            return {\n                idx: idx,\n                type: NAME[item >> TYPE_SHIFT],\n                chunk: this.source.substring(start, end),\n                balance: this.balance[idx]\n            };\n        }, this);\n    }\n};\n\nmodule.exports = TokenStream;\n","function noop(value) {\n    return value;\n}\n\nfunction generateMultiplier(multiplier) {\n    if (multiplier.min === 0 && multiplier.max === 0) {\n        return '*';\n    }\n\n    if (multiplier.min === 0 && multiplier.max === 1) {\n        return '?';\n    }\n\n    if (multiplier.min === 1 && multiplier.max === 0) {\n        return multiplier.comma ? '#' : '+';\n    }\n\n    if (multiplier.min === 1 && multiplier.max === 1) {\n        return '';\n    }\n\n    return (\n        (multiplier.comma ? '#' : '') +\n        (multiplier.min === multiplier.max\n            ? '{' + multiplier.min + '}'\n            : '{' + multiplier.min + ',' + (multiplier.max !== 0 ? multiplier.max : '') + '}'\n        )\n    );\n}\n\nfunction generateTypeOpts(node) {\n    switch (node.type) {\n        case 'Range':\n            return (\n                ' [' +\n                (node.min === null ? '-∞' : node.min) +\n                ',' +\n                (node.max === null ? '∞' : node.max) +\n                ']'\n            );\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n}\n\nfunction generateSequence(node, decorate, forceBraces, compact) {\n    var combinator = node.combinator === ' ' || compact ? node.combinator : ' ' + node.combinator + ' ';\n    var result = node.terms.map(function(term) {\n        return generate(term, decorate, forceBraces, compact);\n    }).join(combinator);\n\n    if (node.explicit || forceBraces) {\n        result = (compact || result[0] === ',' ? '[' : '[ ') + result + (compact ? ']' : ' ]');\n    }\n\n    return result;\n}\n\nfunction generate(node, decorate, forceBraces, compact) {\n    var result;\n\n    switch (node.type) {\n        case 'Group':\n            result =\n                generateSequence(node, decorate, forceBraces, compact) +\n                (node.disallowEmpty ? '!' : '');\n            break;\n\n        case 'Multiplier':\n            // return since node is a composition\n            return (\n                generate(node.term, decorate, forceBraces, compact) +\n                decorate(generateMultiplier(node), node)\n            );\n\n        case 'Type':\n            result = '<' + node.name + (node.opts ? decorate(generateTypeOpts(node.opts), node.opts) : '') + '>';\n            break;\n\n        case 'Property':\n            result = '<\\'' + node.name + '\\'>';\n            break;\n\n        case 'Keyword':\n            result = node.name;\n            break;\n\n        case 'AtKeyword':\n            result = '@' + node.name;\n            break;\n\n        case 'Function':\n            result = node.name + '(';\n            break;\n\n        case 'String':\n        case 'Token':\n            result = node.value;\n            break;\n\n        case 'Comma':\n            result = ',';\n            break;\n\n        default:\n            throw new Error('Unknown node type `' + node.type + '`');\n    }\n\n    return decorate(result, node);\n}\n\nmodule.exports = function(node, options) {\n    var decorate = noop;\n    var forceBraces = false;\n    var compact = false;\n\n    if (typeof options === 'function') {\n        decorate = options;\n    } else if (options) {\n        forceBraces = Boolean(options.forceBraces);\n        compact = Boolean(options.compact);\n        if (typeof options.decorate === 'function') {\n            decorate = options.decorate;\n        }\n    }\n\n    return generate(node, decorate, forceBraces, compact);\n};\n","var createCustomError = require('../utils/createCustomError');\nvar generate = require('../definition-syntax/generate');\n\nfunction fromMatchResult(matchResult) {\n    var tokens = matchResult.tokens;\n    var longestMatch = matchResult.longestMatch;\n    var node = longestMatch < tokens.length ? tokens[longestMatch].node : null;\n    var mismatchOffset = -1;\n    var entries = 0;\n    var css = '';\n\n    for (var i = 0; i < tokens.length; i++) {\n        if (i === longestMatch) {\n            mismatchOffset = css.length;\n        }\n\n        if (node !== null && tokens[i].node === node) {\n            if (i <= longestMatch) {\n                entries++;\n            } else {\n                entries = 0;\n            }\n        }\n\n        css += tokens[i].value;\n    }\n\n    return {\n        node: node,\n        css: css,\n        mismatchOffset: mismatchOffset === -1 ? css.length : mismatchOffset,\n        last: node === null || entries > 1\n    };\n}\n\nfunction getLocation(node, point) {\n    var loc = node && node.loc && node.loc[point];\n\n    if (loc) {\n        return {\n            offset: loc.offset,\n            line: loc.line,\n            column: loc.column\n        };\n    }\n\n    return null;\n}\n\nvar SyntaxReferenceError = function(type, referenceName) {\n    var error = createCustomError(\n        'SyntaxReferenceError',\n        type + (referenceName ? ' `' + referenceName + '`' : '')\n    );\n\n    error.reference = referenceName;\n\n    return error;\n};\n\nvar MatchError = function(message, syntax, node, matchResult) {\n    var error = createCustomError('SyntaxMatchError', message);\n    var details = fromMatchResult(matchResult);\n    var mismatchOffset = details.mismatchOffset || 0;\n    var badNode = details.node || node;\n    var end = getLocation(badNode, 'end');\n    var start = details.last ? end : getLocation(badNode, 'start');\n    var css = details.css;\n\n    error.rawMessage = message;\n    error.syntax = syntax ? generate(syntax) : '<generic>';\n    error.css = css;\n    error.mismatchOffset = mismatchOffset;\n    error.loc = {\n        source: (badNode && badNode.loc && badNode.loc.source) || '<unknown>',\n        start: start,\n        end: end\n    };\n    error.line = start ? start.line : undefined;\n    error.column = start ? start.column : undefined;\n    error.offset = start ? start.offset : undefined;\n    error.message = message + '\\n' +\n        '  syntax: ' + error.syntax + '\\n' +\n        '   value: ' + (error.css || '<empty string>') + '\\n' +\n        '  --------' + new Array(error.mismatchOffset + 1).join('-') + '^';\n\n    return error;\n};\n\nmodule.exports = {\n    SyntaxReferenceError: SyntaxReferenceError,\n    MatchError: MatchError\n};\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\nvar keywords = Object.create(null);\nvar properties = Object.create(null);\nvar HYPHENMINUS = 45; // '-'.charCodeAt()\n\nfunction isCustomProperty(str, offset) {\n    offset = offset || 0;\n\n    return str.length - offset >= 2 &&\n           str.charCodeAt(offset) === HYPHENMINUS &&\n           str.charCodeAt(offset + 1) === HYPHENMINUS;\n}\n\nfunction getVendorPrefix(str, offset) {\n    offset = offset || 0;\n\n    // verdor prefix should be at least 3 chars length\n    if (str.length - offset >= 3) {\n        // vendor prefix starts with hyper minus following non-hyper minus\n        if (str.charCodeAt(offset) === HYPHENMINUS &&\n            str.charCodeAt(offset + 1) !== HYPHENMINUS) {\n            // vendor prefix should contain a hyper minus at the ending\n            var secondDashIndex = str.indexOf('-', offset + 2);\n\n            if (secondDashIndex !== -1) {\n                return str.substring(offset, secondDashIndex + 1);\n            }\n        }\n    }\n\n    return '';\n}\n\nfunction getKeywordDescriptor(keyword) {\n    if (hasOwnProperty.call(keywords, keyword)) {\n        return keywords[keyword];\n    }\n\n    var name = keyword.toLowerCase();\n\n    if (hasOwnProperty.call(keywords, name)) {\n        return keywords[keyword] = keywords[name];\n    }\n\n    var custom = isCustomProperty(name, 0);\n    var vendor = !custom ? getVendorPrefix(name, 0) : '';\n\n    return keywords[keyword] = Object.freeze({\n        basename: name.substr(vendor.length),\n        name: name,\n        vendor: vendor,\n        prefix: vendor,\n        custom: custom\n    });\n}\n\nfunction getPropertyDescriptor(property) {\n    if (hasOwnProperty.call(properties, property)) {\n        return properties[property];\n    }\n\n    var name = property;\n    var hack = property[0];\n\n    if (hack === '/') {\n        hack = property[1] === '/' ? '//' : '/';\n    } else if (hack !== '_' &&\n               hack !== '*' &&\n               hack !== '$' &&\n               hack !== '#' &&\n               hack !== '+' &&\n               hack !== '&') {\n        hack = '';\n    }\n\n    var custom = isCustomProperty(name, hack.length);\n\n    // re-use result when possible (the same as for lower case)\n    if (!custom) {\n        name = name.toLowerCase();\n        if (hasOwnProperty.call(properties, name)) {\n            return properties[property] = properties[name];\n        }\n    }\n\n    var vendor = !custom ? getVendorPrefix(name, hack.length) : '';\n    var prefix = name.substr(0, hack.length + vendor.length);\n\n    return properties[property] = Object.freeze({\n        basename: name.substr(prefix.length),\n        name: name.substr(hack.length),\n        hack: hack,\n        vendor: vendor,\n        prefix: prefix,\n        custom: custom\n    });\n}\n\nmodule.exports = {\n    keyword: getKeywordDescriptor,\n    property: getPropertyDescriptor,\n    isCustomProperty: isCustomProperty,\n    vendorPrefix: getVendorPrefix\n};\n","var MIN_SIZE = 16 * 1024;\nvar SafeUint32Array = typeof Uint32Array !== 'undefined' ? Uint32Array : Array; // fallback on Array when TypedArray is not supported\n\nmodule.exports = function adoptBuffer(buffer, size) {\n    if (buffer === null || buffer.length < size) {\n        return new SafeUint32Array(Math.max(size + 1024, MIN_SIZE));\n    }\n\n    return buffer;\n};\n","var TokenStream = require('../common/TokenStream');\nvar adoptBuffer = require('../common/adopt-buffer');\n\nvar constants = require('./const');\nvar TYPE = constants.TYPE;\n\nvar charCodeDefinitions = require('./char-code-definitions');\nvar isNewline = charCodeDefinitions.isNewline;\nvar isName = charCodeDefinitions.isName;\nvar isValidEscape = charCodeDefinitions.isValidEscape;\nvar isNumberStart = charCodeDefinitions.isNumberStart;\nvar isIdentifierStart = charCodeDefinitions.isIdentifierStart;\nvar charCodeCategory = charCodeDefinitions.charCodeCategory;\nvar isBOM = charCodeDefinitions.isBOM;\n\nvar utils = require('./utils');\nvar cmpStr = utils.cmpStr;\nvar getNewlineLength = utils.getNewlineLength;\nvar findWhiteSpaceEnd = utils.findWhiteSpaceEnd;\nvar consumeEscaped = utils.consumeEscaped;\nvar consumeName = utils.consumeName;\nvar consumeNumber = utils.consumeNumber;\nvar consumeBadUrlRemnants = utils.consumeBadUrlRemnants;\n\nvar OFFSET_MASK = 0x00FFFFFF;\nvar TYPE_SHIFT = 24;\n\nfunction tokenize(source, stream) {\n    function getCharCode(offset) {\n        return offset < sourceLength ? source.charCodeAt(offset) : 0;\n    }\n\n    // § 4.3.3. Consume a numeric token\n    function consumeNumericToken() {\n        // Consume a number and let number be the result.\n        offset = consumeNumber(source, offset);\n\n        // If the next 3 input code points would start an identifier, then:\n        if (isIdentifierStart(getCharCode(offset), getCharCode(offset + 1), getCharCode(offset + 2))) {\n            // Create a <dimension-token> with the same value and type flag as number, and a unit set initially to the empty string.\n            // Consume a name. Set the <dimension-token>’s unit to the returned value.\n            // Return the <dimension-token>.\n            type = TYPE.Dimension;\n            offset = consumeName(source, offset);\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0025 PERCENTAGE SIGN (%), consume it.\n        if (getCharCode(offset) === 0x0025) {\n            // Create a <percentage-token> with the same value as number, and return it.\n            type = TYPE.Percentage;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create a <number-token> with the same value and type flag as number, and return it.\n        type = TYPE.Number;\n    }\n\n    // § 4.3.4. Consume an ident-like token\n    function consumeIdentLikeToken() {\n        const nameStartOffset = offset;\n\n        // Consume a name, and let string be the result.\n        offset = consumeName(source, offset);\n\n        // If string’s value is an ASCII case-insensitive match for \"url\",\n        // and the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        if (cmpStr(source, nameStartOffset, offset, 'url') && getCharCode(offset) === 0x0028) {\n            // While the next two input code points are whitespace, consume the next input code point.\n            offset = findWhiteSpaceEnd(source, offset + 1);\n\n            // If the next one or two input code points are U+0022 QUOTATION MARK (\"), U+0027 APOSTROPHE ('),\n            // or whitespace followed by U+0022 QUOTATION MARK (\") or U+0027 APOSTROPHE ('),\n            // then create a <function-token> with its value set to string and return it.\n            if (getCharCode(offset) === 0x0022 ||\n                getCharCode(offset) === 0x0027) {\n                type = TYPE.Function;\n                offset = nameStartOffset + 4;\n                return;\n            }\n\n            // Otherwise, consume a url token, and return it.\n            consumeUrlToken();\n            return;\n        }\n\n        // Otherwise, if the next input code point is U+0028 LEFT PARENTHESIS ((), consume it.\n        // Create a <function-token> with its value set to string and return it.\n        if (getCharCode(offset) === 0x0028) {\n            type = TYPE.Function;\n            offset++;\n            return;\n        }\n\n        // Otherwise, create an <ident-token> with its value set to string and return it.\n        type = TYPE.Ident;\n    }\n\n    // § 4.3.5. Consume a string token\n    function consumeStringToken(endingCodePoint) {\n        // This algorithm may be called with an ending code point, which denotes the code point\n        // that ends the string. If an ending code point is not specified,\n        // the current input code point is used.\n        if (!endingCodePoint) {\n            endingCodePoint = getCharCode(offset++);\n        }\n\n        // Initially create a <string-token> with its value set to the empty string.\n        type = TYPE.String;\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            var code = source.charCodeAt(offset);\n\n            switch (charCodeCategory(code)) {\n                // ending code point\n                case endingCodePoint:\n                    // Return the <string-token>.\n                    offset++;\n                    return;\n\n                // EOF\n                case charCodeCategory.Eof:\n                    // This is a parse error. Return the <string-token>.\n                    return;\n\n                // newline\n                case charCodeCategory.WhiteSpace:\n                    if (isNewline(code)) {\n                        // This is a parse error. Reconsume the current input code point,\n                        // create a <bad-string-token>, and return it.\n                        offset += getNewlineLength(source, offset, code);\n                        type = TYPE.BadString;\n                        return;\n                    }\n                    break;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the next input code point is EOF, do nothing.\n                    if (offset === source.length - 1) {\n                        break;\n                    }\n\n                    var nextCode = getCharCode(offset + 1);\n\n                    // Otherwise, if the next input code point is a newline, consume it.\n                    if (isNewline(nextCode)) {\n                        offset += getNewlineLength(source, offset + 1, nextCode);\n                    } else if (isValidEscape(code, nextCode)) {\n                        // Otherwise, (the stream starts with a valid escape) consume\n                        // an escaped code point and append the returned code point to\n                        // the <string-token>’s value.\n                        offset = consumeEscaped(source, offset) - 1;\n                    }\n                    break;\n\n                // anything else\n                // Append the current input code point to the <string-token>’s value.\n            }\n        }\n    }\n\n    // § 4.3.6. Consume a url token\n    // Note: This algorithm assumes that the initial \"url(\" has already been consumed.\n    // This algorithm also assumes that it’s being called to consume an \"unquoted\" value, like url(foo).\n    // A quoted value, like url(\"foo\"), is parsed as a <function-token>. Consume an ident-like token\n    // automatically handles this distinction; this algorithm shouldn’t be called directly otherwise.\n    function consumeUrlToken() {\n        // Initially create a <url-token> with its value set to the empty string.\n        type = TYPE.Url;\n\n        // Consume as much whitespace as possible.\n        offset = findWhiteSpaceEnd(source, offset);\n\n        // Repeatedly consume the next input code point from the stream:\n        for (; offset < source.length; offset++) {\n            var code = source.charCodeAt(offset);\n\n            switch (charCodeCategory(code)) {\n                // U+0029 RIGHT PARENTHESIS ())\n                case 0x0029:\n                    // Return the <url-token>.\n                    offset++;\n                    return;\n\n                // EOF\n                case charCodeCategory.Eof:\n                    // This is a parse error. Return the <url-token>.\n                    return;\n\n                // whitespace\n                case charCodeCategory.WhiteSpace:\n                    // Consume as much whitespace as possible.\n                    offset = findWhiteSpaceEnd(source, offset);\n\n                    // If the next input code point is U+0029 RIGHT PARENTHESIS ()) or EOF,\n                    // consume it and return the <url-token>\n                    // (if EOF was encountered, this is a parse error);\n                    if (getCharCode(offset) === 0x0029 || offset >= source.length) {\n                        if (offset < source.length) {\n                            offset++;\n                        }\n                        return;\n                    }\n\n                    // otherwise, consume the remnants of a bad url, create a <bad-url-token>,\n                    // and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // U+0022 QUOTATION MARK (\")\n                // U+0027 APOSTROPHE (')\n                // U+0028 LEFT PARENTHESIS (()\n                // non-printable code point\n                case 0x0022:\n                case 0x0027:\n                case 0x0028:\n                case charCodeCategory.NonPrintable:\n                    // This is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // U+005C REVERSE SOLIDUS (\\)\n                case 0x005C:\n                    // If the stream starts with a valid escape, consume an escaped code point and\n                    // append the returned code point to the <url-token>’s value.\n                    if (isValidEscape(code, getCharCode(offset + 1))) {\n                        offset = consumeEscaped(source, offset) - 1;\n                        break;\n                    }\n\n                    // Otherwise, this is a parse error. Consume the remnants of a bad url,\n                    // create a <bad-url-token>, and return it.\n                    offset = consumeBadUrlRemnants(source, offset);\n                    type = TYPE.BadUrl;\n                    return;\n\n                // anything else\n                // Append the current input code point to the <url-token>’s value.\n            }\n        }\n    }\n\n    if (!stream) {\n        stream = new TokenStream();\n    }\n\n    // ensure source is a string\n    source = String(source || '');\n\n    var sourceLength = source.length;\n    var offsetAndType = adoptBuffer(stream.offsetAndType, sourceLength + 1); // +1 because of eof-token\n    var balance = adoptBuffer(stream.balance, sourceLength + 1);\n    var tokenCount = 0;\n    var start = isBOM(getCharCode(0));\n    var offset = start;\n    var balanceCloseType = 0;\n    var balanceStart = 0;\n    var balancePrev = 0;\n\n    // https://drafts.csswg.org/css-syntax-3/#consume-token\n    // § 4.3.1. Consume a token\n    while (offset < sourceLength) {\n        var code = source.charCodeAt(offset);\n        var type = 0;\n\n        balance[tokenCount] = sourceLength;\n\n        switch (charCodeCategory(code)) {\n            // whitespace\n            case charCodeCategory.WhiteSpace:\n                // Consume as much whitespace as possible. Return a <whitespace-token>.\n                type = TYPE.WhiteSpace;\n                offset = findWhiteSpaceEnd(source, offset + 1);\n                break;\n\n            // U+0022 QUOTATION MARK (\")\n            case 0x0022:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0023 NUMBER SIGN (#)\n            case 0x0023:\n                // If the next input code point is a name code point or the next two input code points are a valid escape, then:\n                if (isName(getCharCode(offset + 1)) || isValidEscape(getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // Create a <hash-token>.\n                    type = TYPE.Hash;\n\n                    // If the next 3 input code points would start an identifier, set the <hash-token>’s type flag to \"id\".\n                    // if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    //     // TODO: set id flag\n                    // }\n\n                    // Consume a name, and set the <hash-token>’s value to the returned string.\n                    offset = consumeName(source, offset + 1);\n\n                    // Return the <hash-token>.\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0027 APOSTROPHE (')\n            case 0x0027:\n                // Consume a string token and return it.\n                consumeStringToken();\n                break;\n\n            // U+0028 LEFT PARENTHESIS (()\n            case 0x0028:\n                // Return a <(-token>.\n                type = TYPE.LeftParenthesis;\n                offset++;\n                break;\n\n            // U+0029 RIGHT PARENTHESIS ())\n            case 0x0029:\n                // Return a <)-token>.\n                type = TYPE.RightParenthesis;\n                offset++;\n                break;\n\n            // U+002B PLUS SIGN (+)\n            case 0x002B:\n                // If the input stream starts with a number, ...\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+002C COMMA (,)\n            case 0x002C:\n                // Return a <comma-token>.\n                type = TYPE.Comma;\n                offset++;\n                break;\n\n            // U+002D HYPHEN-MINUS (-)\n            case 0x002D:\n                // If the input stream starts with a number, reconsume the current input code point, consume a numeric token, and return it.\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, if the next 2 input code points are U+002D HYPHEN-MINUS U+003E GREATER-THAN SIGN (->), consume them and return a <CDC-token>.\n                    if (getCharCode(offset + 1) === 0x002D &&\n                        getCharCode(offset + 2) === 0x003E) {\n                        type = TYPE.CDC;\n                        offset = offset + 3;\n                    } else {\n                        // Otherwise, if the input stream starts with an identifier, ...\n                        if (isIdentifierStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                            // ... reconsume the current input code point, consume an ident-like token, and return it.\n                            consumeIdentLikeToken();\n                        } else {\n                            // Otherwise, return a <delim-token> with its value set to the current input code point.\n                            type = TYPE.Delim;\n                            offset++;\n                        }\n                    }\n                }\n                break;\n\n            // U+002E FULL STOP (.)\n            case 0x002E:\n                // If the input stream starts with a number, ...\n                if (isNumberStart(code, getCharCode(offset + 1), getCharCode(offset + 2))) {\n                    // ... reconsume the current input code point, consume a numeric token, and return it.\n                    consumeNumericToken();\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+002F SOLIDUS (/)\n            case 0x002F:\n                // If the next two input code point are U+002F SOLIDUS (/) followed by a U+002A ASTERISK (*),\n                if (getCharCode(offset + 1) === 0x002A) {\n                    // ... consume them and all following code points up to and including the first U+002A ASTERISK (*)\n                    // followed by a U+002F SOLIDUS (/), or up to an EOF code point.\n                    type = TYPE.Comment;\n                    offset = source.indexOf('*/', offset + 2) + 2;\n                    if (offset === 1) {\n                        offset = source.length;\n                    }\n                } else {\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+003A COLON (:)\n            case 0x003A:\n                // Return a <colon-token>.\n                type = TYPE.Colon;\n                offset++;\n                break;\n\n            // U+003B SEMICOLON (;)\n            case 0x003B:\n                // Return a <semicolon-token>.\n                type = TYPE.Semicolon;\n                offset++;\n                break;\n\n            // U+003C LESS-THAN SIGN (<)\n            case 0x003C:\n                // If the next 3 input code points are U+0021 EXCLAMATION MARK U+002D HYPHEN-MINUS U+002D HYPHEN-MINUS (!--), ...\n                if (getCharCode(offset + 1) === 0x0021 &&\n                    getCharCode(offset + 2) === 0x002D &&\n                    getCharCode(offset + 3) === 0x002D) {\n                    // ... consume them and return a <CDO-token>.\n                    type = TYPE.CDO;\n                    offset = offset + 4;\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+0040 COMMERCIAL AT (@)\n            case 0x0040:\n                // If the next 3 input code points would start an identifier, ...\n                if (isIdentifierStart(getCharCode(offset + 1), getCharCode(offset + 2), getCharCode(offset + 3))) {\n                    // ... consume a name, create an <at-keyword-token> with its value set to the returned value, and return it.\n                    type = TYPE.AtKeyword;\n                    offset = consumeName(source, offset + 1);\n                } else {\n                    // Otherwise, return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n\n                break;\n\n            // U+005B LEFT SQUARE BRACKET ([)\n            case 0x005B:\n                // Return a <[-token>.\n                type = TYPE.LeftSquareBracket;\n                offset++;\n                break;\n\n            // U+005C REVERSE SOLIDUS (\\)\n            case 0x005C:\n                // If the input stream starts with a valid escape, ...\n                if (isValidEscape(code, getCharCode(offset + 1))) {\n                    // ... reconsume the current input code point, consume an ident-like token, and return it.\n                    consumeIdentLikeToken();\n                } else {\n                    // Otherwise, this is a parse error. Return a <delim-token> with its value set to the current input code point.\n                    type = TYPE.Delim;\n                    offset++;\n                }\n                break;\n\n            // U+005D RIGHT SQUARE BRACKET (])\n            case 0x005D:\n                // Return a <]-token>.\n                type = TYPE.RightSquareBracket;\n                offset++;\n                break;\n\n            // U+007B LEFT CURLY BRACKET ({)\n            case 0x007B:\n                // Return a <{-token>.\n                type = TYPE.LeftCurlyBracket;\n                offset++;\n                break;\n\n            // U+007D RIGHT CURLY BRACKET (})\n            case 0x007D:\n                // Return a <}-token>.\n                type = TYPE.RightCurlyBracket;\n                offset++;\n                break;\n\n            // digit\n            case charCodeCategory.Digit:\n                // Reconsume the current input code point, consume a numeric token, and return it.\n                consumeNumericToken();\n                break;\n\n            // name-start code point\n            case charCodeCategory.NameStart:\n                // Reconsume the current input code point, consume an ident-like token, and return it.\n                consumeIdentLikeToken();\n                break;\n\n            // EOF\n            case charCodeCategory.Eof:\n                // Return an <EOF-token>.\n                break;\n\n            // anything else\n            default:\n                // Return a <delim-token> with its value set to the current input code point.\n                type = TYPE.Delim;\n                offset++;\n        }\n\n        switch (type) {\n            case balanceCloseType:\n                balancePrev = balanceStart & OFFSET_MASK;\n                balanceStart = balance[balancePrev];\n                balanceCloseType = balanceStart >> TYPE_SHIFT;\n                balance[tokenCount] = balancePrev;\n                balance[balancePrev++] = tokenCount;\n                for (; balancePrev < tokenCount; balancePrev++) {\n                    if (balance[balancePrev] === sourceLength) {\n                        balance[balancePrev] = tokenCount;\n                    }\n                }\n                break;\n\n            case TYPE.LeftParenthesis:\n            case TYPE.Function:\n                balance[tokenCount] = balanceStart;\n                balanceCloseType = TYPE.RightParenthesis;\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\n                break;\n\n            case TYPE.LeftSquareBracket:\n                balance[tokenCount] = balanceStart;\n                balanceCloseType = TYPE.RightSquareBracket;\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\n                break;\n\n            case TYPE.LeftCurlyBracket:\n                balance[tokenCount] = balanceStart;\n                balanceCloseType = TYPE.RightCurlyBracket;\n                balanceStart = (balanceCloseType << TYPE_SHIFT) | tokenCount;\n                break;\n        }\n\n        offsetAndType[tokenCount++] = (type << TYPE_SHIFT) | offset;\n    }\n\n    // finalize buffers\n    offsetAndType[tokenCount] = (TYPE.EOF << TYPE_SHIFT) | offset; // <EOF-token>\n    balance[tokenCount] = sourceLength;\n    balance[sourceLength] = sourceLength; // prevents false positive balance match with any token\n    while (balanceStart !== 0) {\n        balancePrev = balanceStart & OFFSET_MASK;\n        balanceStart = balance[balancePrev];\n        balance[balancePrev] = sourceLength;\n    }\n\n    // update stream\n    stream.source = source;\n    stream.firstCharOffset = start;\n    stream.offsetAndType = offsetAndType;\n    stream.tokenCount = tokenCount;\n    stream.balance = balance;\n    stream.reset();\n    stream.next();\n\n    return stream;\n}\n\n// extend tokenizer with constants\nObject.keys(constants).forEach(function(key) {\n    tokenize[key] = constants[key];\n});\n\n// extend tokenizer with static methods from utils\nObject.keys(charCodeDefinitions).forEach(function(key) {\n    tokenize[key] = charCodeDefinitions[key];\n});\nObject.keys(utils).forEach(function(key) {\n    tokenize[key] = utils[key];\n});\n\nmodule.exports = tokenize;\n","var isDigit = require('../tokenizer').isDigit;\nvar cmpChar = require('../tokenizer').cmpChar;\nvar TYPE = require('../tokenizer').TYPE;\n\nvar DELIM = TYPE.Delim;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar IDENT = TYPE.Ident;\nvar NUMBER = TYPE.Number;\nvar DIMENSION = TYPE.Dimension;\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nvar N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nvar DISALLOW_SIGN = true;\nvar ALLOW_SIGN = false;\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\n}\n\nfunction skipSC(token, offset, getNextToken) {\n    while (token !== null && (token.type === WHITESPACE || token.type === COMMENT)) {\n        token = getNextToken(++offset);\n    }\n\n    return offset;\n}\n\nfunction checkInteger(token, valueOffset, disallowSign, offset) {\n    if (!token) {\n        return 0;\n    }\n\n    var code = token.value.charCodeAt(valueOffset);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            // Number sign is not allowed\n            return 0;\n        }\n        valueOffset++;\n    }\n\n    for (; valueOffset < token.value.length; valueOffset++) {\n        if (!isDigit(token.value.charCodeAt(valueOffset))) {\n            // Integer is expected\n            return 0;\n        }\n    }\n\n    return offset + 1;\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB(token, offset_, getNextToken) {\n    var sign = false;\n    var offset = skipSC(token, offset_, getNextToken);\n\n    token = getNextToken(offset);\n\n    if (token === null) {\n        return offset_;\n    }\n\n    if (token.type !== NUMBER) {\n        if (isDelim(token, PLUSSIGN) || isDelim(token, HYPHENMINUS)) {\n            sign = true;\n            offset = skipSC(getNextToken(++offset), offset, getNextToken);\n            token = getNextToken(offset);\n\n            if (token === null && token.type !== NUMBER) {\n                return 0;\n            }\n        } else {\n            return offset_;\n        }\n    }\n\n    if (!sign) {\n        var code = token.value.charCodeAt(0);\n        if (code !== PLUSSIGN && code !== HYPHENMINUS) {\n            // Number sign is expected\n            return 0;\n        }\n    }\n\n    return checkInteger(token, sign ? 0 : 1, sign, offset);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nmodule.exports = function anPlusB(token, getNextToken) {\n    /* eslint-disable brace-style*/\n    var offset = 0;\n\n    if (!token) {\n        return 0;\n    }\n\n    // <integer>\n    if (token.type === NUMBER) {\n        return checkInteger(token, 0, ALLOW_SIGN, offset); // b\n    }\n\n    // -n\n    // -n <signed-integer>\n    // -n ['+' | '-'] <signless-integer>\n    // -n- <signless-integer>\n    // <dashndashdigit-ident>\n    else if (token.type === IDENT && token.value.charCodeAt(0) === HYPHENMINUS) {\n        // expect 1st char is N\n        if (!cmpChar(token.value, 1, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // -n\n            // -n <signed-integer>\n            // -n ['+' | '-'] <signless-integer>\n            case 2:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // -n- <signless-integer>\n            case 3:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // <dashndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(2) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 3, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // '+'? n\n    // '+'? n <signed-integer>\n    // '+'? n ['+' | '-'] <signless-integer>\n    // '+'? n- <signless-integer>\n    // '+'? <ndashdigit-ident>\n    else if (token.type === IDENT || (isDelim(token, PLUSSIGN) && getNextToken(offset + 1).type === IDENT)) {\n        // just ignore a plus\n        if (token.type !== IDENT) {\n            token = getNextToken(++offset);\n        }\n\n        if (token === null || !cmpChar(token.value, 0, N)) {\n            return 0;\n        }\n\n        switch (token.value.length) {\n            // '+'? n\n            // '+'? n <signed-integer>\n            // '+'? n ['+' | '-'] <signless-integer>\n            case 1:\n                return consumeB(getNextToken(++offset), offset, getNextToken);\n\n            // '+'? n- <signless-integer>\n            case 2:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n\n            // '+'? <ndashdigit-ident>\n            default:\n                if (token.value.charCodeAt(1) !== HYPHENMINUS) {\n                    return 0;\n                }\n\n                return checkInteger(token, 2, DISALLOW_SIGN, offset);\n        }\n    }\n\n    // <ndashdigit-dimension>\n    // <ndash-dimension> <signless-integer>\n    // <n-dimension>\n    // <n-dimension> <signed-integer>\n    // <n-dimension> ['+' | '-'] <signless-integer>\n    else if (token.type === DIMENSION) {\n        var code = token.value.charCodeAt(0);\n        var sign = code === PLUSSIGN || code === HYPHENMINUS ? 1 : 0;\n\n        for (var i = sign; i < token.value.length; i++) {\n            if (!isDigit(token.value.charCodeAt(i))) {\n                break;\n            }\n        }\n\n        if (i === sign) {\n            // Integer is expected\n            return 0;\n        }\n\n        if (!cmpChar(token.value, i, N)) {\n            return 0;\n        }\n\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        if (i + 1 === token.value.length) {\n            return consumeB(getNextToken(++offset), offset, getNextToken);\n        } else {\n            if (token.value.charCodeAt(i + 1) !== HYPHENMINUS) {\n                return 0;\n            }\n\n            // <ndash-dimension> <signless-integer>\n            if (i + 2 === token.value.length) {\n                offset = skipSC(getNextToken(++offset), offset, getNextToken);\n                token = getNextToken(offset);\n\n                return checkInteger(token, 0, DISALLOW_SIGN, offset);\n            }\n            // <ndashdigit-dimension>\n            else {\n                return checkInteger(token, i + 2, DISALLOW_SIGN, offset);\n            }\n        }\n    }\n\n    return 0;\n};\n","var isHexDigit = require('../tokenizer').isHexDigit;\nvar cmpChar = require('../tokenizer').cmpChar;\nvar TYPE = require('../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar DELIM = TYPE.Delim;\nvar NUMBER = TYPE.Number;\nvar DIMENSION = TYPE.Dimension;\nvar PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nvar HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nvar QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\nvar U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\n\nfunction isDelim(token, code) {\n    return token !== null && token.type === DELIM && token.value.charCodeAt(0) === code;\n}\n\nfunction startsWith(token, code) {\n    return token.value.charCodeAt(0) === code;\n}\n\nfunction hexSequence(token, offset, allowDash) {\n    for (var pos = offset, hexlen = 0; pos < token.value.length; pos++) {\n        var code = token.value.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && hexlen !== 0) {\n            if (hexSequence(token, offset + hexlen + 1, false) > 0) {\n                return 6; // dissallow following question marks\n            }\n\n            return 0; // dash at the ending of a hex sequence is not allowed\n        }\n\n        if (!isHexDigit(code)) {\n            return 0; // not a hex digit\n        }\n\n        if (++hexlen > 6) {\n            return 0; // too many hex digits\n        };\n    }\n\n    return hexlen;\n}\n\nfunction withQuestionMarkSequence(consumed, length, getNextToken) {\n    if (!consumed) {\n        return 0; // nothing consumed\n    }\n\n    while (isDelim(getNextToken(length), QUESTIONMARK)) {\n        if (++consumed > 6) {\n            return 0; // too many question marks\n        }\n\n        length++;\n    }\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nmodule.exports = function urange(token, getNextToken) {\n    var length = 0;\n\n    // should start with `u` or `U`\n    if (token === null || token.type !== IDENT || !cmpChar(token.value, 0, U)) {\n        return 0;\n    }\n\n    token = getNextToken(++length);\n    if (token === null) {\n        return 0;\n    }\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (isDelim(token, PLUSSIGN)) {\n        token = getNextToken(++length);\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === IDENT) {\n            // u '+' <ident-token> '?'*\n            return withQuestionMarkSequence(hexSequence(token, 0, true), ++length, getNextToken);\n        }\n\n        if (isDelim(token, QUESTIONMARK)) {\n            // u '+' '?'+\n            return withQuestionMarkSequence(1, ++length, getNextToken);\n        }\n\n        // Hex digit or question mark is expected\n        return 0;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (token.type === NUMBER) {\n        if (!startsWith(token, PLUSSIGN)) {\n            return 0;\n        }\n\n        var consumedHexLength = hexSequence(token, 1, true);\n        if (consumedHexLength === 0) {\n            return 0;\n        }\n\n        token = getNextToken(++length);\n        if (token === null) {\n            // u <number-token> <eof>\n            return length;\n        }\n\n        if (token.type === DIMENSION || token.type === NUMBER) {\n            // u <number-token> <dimension-token>\n            // u <number-token> <number-token>\n            if (!startsWith(token, HYPHENMINUS) || !hexSequence(token, 1, false)) {\n                return 0;\n            }\n\n            return length + 1;\n        }\n\n        // u <number-token> '?'*\n        return withQuestionMarkSequence(consumedHexLength, length, getNextToken);\n    }\n\n    // u <dimension-token> '?'*\n    if (token.type === DIMENSION) {\n        if (!startsWith(token, PLUSSIGN)) {\n            return 0;\n        }\n\n        return withQuestionMarkSequence(hexSequence(token, 1, true), ++length, getNextToken);\n    }\n\n    return 0;\n};\n","var tokenizer = require('../tokenizer');\nvar isIdentifierStart = tokenizer.isIdentifierStart;\nvar isHexDigit = tokenizer.isHexDigit;\nvar isDigit = tokenizer.isDigit;\nvar cmpStr = tokenizer.cmpStr;\nvar consumeNumber = tokenizer.consumeNumber;\nvar TYPE = tokenizer.TYPE;\nvar anPlusB = require('./generic-an-plus-b');\nvar urange = require('./generic-urange');\n\nvar cssWideKeywords = ['unset', 'initial', 'inherit'];\nvar calcFunctionNames = ['calc(', '-moz-calc(', '-webkit-calc('];\n\n// https://www.w3.org/TR/css-values-3/#lengths\nvar LENGTH = {\n    // absolute length units\n    'px': true,\n    'mm': true,\n    'cm': true,\n    'in': true,\n    'pt': true,\n    'pc': true,\n    'q': true,\n\n    // relative length units\n    'em': true,\n    'ex': true,\n    'ch': true,\n    'rem': true,\n\n    // viewport-percentage lengths\n    'vh': true,\n    'vw': true,\n    'vmin': true,\n    'vmax': true,\n    'vm': true\n};\n\nvar ANGLE = {\n    'deg': true,\n    'grad': true,\n    'rad': true,\n    'turn': true\n};\n\nvar TIME = {\n    's': true,\n    'ms': true\n};\n\nvar FREQUENCY = {\n    'hz': true,\n    'khz': true\n};\n\n// https://www.w3.org/TR/css-values-3/#resolution (https://drafts.csswg.org/css-values/#resolution)\nvar RESOLUTION = {\n    'dpi': true,\n    'dpcm': true,\n    'dppx': true,\n    'x': true      // https://github.com/w3c/csswg-drafts/issues/461\n};\n\n// https://drafts.csswg.org/css-grid/#fr-unit\nvar FLEX = {\n    'fr': true\n};\n\n// https://www.w3.org/TR/css3-speech/#mixing-props-voice-volume\nvar DECIBEL = {\n    'db': true\n};\n\n// https://www.w3.org/TR/css3-speech/#voice-props-voice-pitch\nvar SEMITONES = {\n    'st': true\n};\n\n// safe char code getter\nfunction charCode(str, index) {\n    return index < str.length ? str.charCodeAt(index) : 0;\n}\n\nfunction eqStr(actual, expected) {\n    return cmpStr(actual, 0, actual.length, expected);\n}\n\nfunction eqStrAny(actual, expected) {\n    for (var i = 0; i < expected.length; i++) {\n        if (eqStr(actual, expected[i])) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\n// IE postfix hack, i.e. 123\\0 or 123px\\9\nfunction isPostfixIeHack(str, offset) {\n    if (offset !== str.length - 2) {\n        return false;\n    }\n\n    return (\n        str.charCodeAt(offset) === 0x005C &&  // U+005C REVERSE SOLIDUS (\\)\n        isDigit(str.charCodeAt(offset + 1))\n    );\n}\n\nfunction outOfRange(opts, value, numEnd) {\n    if (opts && opts.type === 'Range') {\n        var num = Number(\n            numEnd !== undefined && numEnd !== value.length\n                ? value.substr(0, numEnd)\n                : value\n        );\n\n        if (isNaN(num)) {\n            return true;\n        }\n\n        if (opts.min !== null && num < opts.min) {\n            return true;\n        }\n\n        if (opts.max !== null && num > opts.max) {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction consumeFunction(token, getNextToken) {\n    var startIdx = token.index;\n    var length = 0;\n\n    // balanced token consuming\n    do {\n        length++;\n\n        if (token.balance <= startIdx) {\n            break;\n        }\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// TODO: implement\n// can be used wherever <length>, <frequency>, <angle>, <time>, <percentage>, <number>, or <integer> values are allowed\n// https://drafts.csswg.org/css-values/#calc-notation\nfunction calc(next) {\n    return function(token, getNextToken, opts) {\n        if (token === null) {\n            return 0;\n        }\n\n        if (token.type === TYPE.Function && eqStrAny(token.value, calcFunctionNames)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\nfunction tokenType(expectedTokenType) {\n    return function(token) {\n        if (token === null || token.type !== expectedTokenType) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\nfunction func(name) {\n    name = name + '(';\n\n    return function(token, getNextToken) {\n        if (token !== null && eqStr(token.value, name)) {\n            return consumeFunction(token, getNextToken);\n        }\n\n        return 0;\n    };\n}\n\n// =========================\n// Complex types\n//\n\n// https://drafts.csswg.org/css-values-4/#custom-idents\n// 4.2. Author-defined Identifiers: the <custom-ident> type\n// Some properties accept arbitrary author-defined identifiers as a component value.\n// This generic data type is denoted by <custom-ident>, and represents any valid CSS identifier\n// that would not be misinterpreted as a pre-defined keyword in that property’s value definition.\n//\n// See also: https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident\nfunction customIdent(token) {\n    if (token === null || token.type !== TYPE.Ident) {\n        return 0;\n    }\n\n    var name = token.value.toLowerCase();\n\n    // The CSS-wide keywords are not valid <custom-ident>s\n    if (eqStrAny(name, cssWideKeywords)) {\n        return 0;\n    }\n\n    // The default keyword is reserved and is also not a valid <custom-ident>\n    if (eqStr(name, 'default')) {\n        return 0;\n    }\n\n    // TODO: ignore property specific keywords (as described https://developer.mozilla.org/en-US/docs/Web/CSS/custom-ident)\n    // Specifications using <custom-ident> must specify clearly what other keywords\n    // are excluded from <custom-ident>, if any—for example by saying that any pre-defined keywords\n    // in that property’s value definition are excluded. Excluded keywords are excluded\n    // in all ASCII case permutations.\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-variables/#typedef-custom-property-name\n// A custom property is any property whose name starts with two dashes (U+002D HYPHEN-MINUS), like --foo.\n// The <custom-property-name> production corresponds to this: it’s defined as any valid identifier\n// that starts with two dashes, except -- itself, which is reserved for future use by CSS.\n// NOTE: Current implementation treat `--` as a valid name since most (all?) major browsers treat it as valid.\nfunction customPropertyName(token) {\n    // ... defined as any valid identifier\n    if (token === null || token.type !== TYPE.Ident) {\n        return 0;\n    }\n\n    // ... that starts with two dashes (U+002D HYPHEN-MINUS)\n    if (charCode(token.value, 0) !== 0x002D || charCode(token.value, 1) !== 0x002D) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-color-4/#hex-notation\n// The syntax of a <hex-color> is a <hash-token> token whose value consists of 3, 4, 6, or 8 hexadecimal digits.\n// In other words, a hex color is written as a hash character, \"#\", followed by some number of digits 0-9 or\n// letters a-f (the case of the letters doesn’t matter - #00ff00 is identical to #00FF00).\nfunction hexColor(token) {\n    if (token === null || token.type !== TYPE.Hash) {\n        return 0;\n    }\n\n    var length = token.value.length;\n\n    // valid values (length): #rgb (4), #rgba (5), #rrggbb (7), #rrggbbaa (9)\n    if (length !== 4 && length !== 5 && length !== 7 && length !== 9) {\n        return 0;\n    }\n\n    for (var i = 1; i < length; i++) {\n        if (!isHexDigit(token.value.charCodeAt(i))) {\n            return 0;\n        }\n    }\n\n    return 1;\n}\n\nfunction idSelector(token) {\n    if (token === null || token.type !== TYPE.Hash) {\n        return 0;\n    }\n\n    if (!isIdentifierStart(charCode(token.value, 1), charCode(token.value, 2), charCode(token.value, 3))) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// It represents the entirety of what a valid declaration can have as its value.\nfunction declarationValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    var length = 0;\n    var level = 0;\n    var startIdx = token.index;\n\n    // The <declaration-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case TYPE.BadString:\n            case TYPE.BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case TYPE.RightCurlyBracket:\n            case TYPE.RightParenthesis:\n            case TYPE.RightSquareBracket:\n                if (token.balance > token.index || token.balance < startIdx) {\n                    break scan;\n                }\n\n                level--;\n                break;\n\n            // ... or top-level <semicolon-token> tokens\n            case TYPE.Semicolon:\n                if (level === 0) {\n                    break scan;\n                }\n\n                break;\n\n            // ... or <delim-token> tokens with a value of \"!\"\n            case TYPE.Delim:\n                if (token.value === '!' && level === 0) {\n                    break scan;\n                }\n\n                break;\n\n            case TYPE.Function:\n            case TYPE.LeftParenthesis:\n            case TYPE.LeftSquareBracket:\n            case TYPE.LeftCurlyBracket:\n                level++;\n                break;\n        }\n\n        length++;\n\n        // until balance closing\n        if (token.balance <= startIdx) {\n            break;\n        }\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// https://drafts.csswg.org/css-syntax/#any-value\n// The <any-value> production is identical to <declaration-value>, but also\n// allows top-level <semicolon-token> tokens and <delim-token> tokens\n// with a value of \"!\". It represents the entirety of what valid CSS can be in any context.\nfunction anyValue(token, getNextToken) {\n    if (!token) {\n        return 0;\n    }\n\n    var startIdx = token.index;\n    var length = 0;\n\n    // The <any-value> production matches any sequence of one or more tokens,\n    // so long as the sequence ...\n    scan:\n    do {\n        switch (token.type) {\n            // ... does not contain <bad-string-token>, <bad-url-token>,\n            case TYPE.BadString:\n            case TYPE.BadUrl:\n                break scan;\n\n            // ... unmatched <)-token>, <]-token>, or <}-token>,\n            case TYPE.RightCurlyBracket:\n            case TYPE.RightParenthesis:\n            case TYPE.RightSquareBracket:\n                if (token.balance > token.index || token.balance < startIdx) {\n                    break scan;\n                }\n\n                break;\n        }\n\n        length++;\n\n        // until balance closing\n        if (token.balance <= startIdx) {\n            break;\n        }\n    } while (token = getNextToken(length));\n\n    return length;\n}\n\n// =========================\n// Dimensions\n//\n\nfunction dimension(type) {\n    return function(token, getNextToken, opts) {\n        if (token === null || token.type !== TYPE.Dimension) {\n            return 0;\n        }\n\n        var numberEnd = consumeNumber(token.value, 0);\n\n        // check unit\n        if (type !== null) {\n            // check for IE postfix hack, i.e. 123px\\0 or 123px\\9\n            var reverseSolidusOffset = token.value.indexOf('\\\\', numberEnd);\n            var unit = reverseSolidusOffset === -1 || !isPostfixIeHack(token.value, reverseSolidusOffset)\n                ? token.value.substr(numberEnd)\n                : token.value.substring(numberEnd, reverseSolidusOffset);\n\n            if (type.hasOwnProperty(unit.toLowerCase()) === false) {\n                return 0;\n            }\n        }\n\n        // check range if specified\n        if (outOfRange(opts, token.value, numberEnd)) {\n            return 0;\n        }\n\n        return 1;\n    };\n}\n\n// =========================\n// Percentage\n//\n\n// §5.5. Percentages: the <percentage> type\n// https://drafts.csswg.org/css-values-4/#percentages\nfunction percentage(token, getNextToken, opts) {\n    // ... corresponds to the <percentage-token> production\n    if (token === null || token.type !== TYPE.Percentage) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, token.value.length - 1)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// =========================\n// Numeric\n//\n\n// https://drafts.csswg.org/css-values-4/#numbers\n// The value <zero> represents a literal number with the value 0. Expressions that merely\n// evaluate to a <number> with the value 0 (for example, calc(0)) do not match <zero>;\n// only literal <number-token>s do.\nfunction zero(next) {\n    if (typeof next !== 'function') {\n        next = function() {\n            return 0;\n        };\n    }\n\n    return function(token, getNextToken, opts) {\n        if (token !== null && token.type === TYPE.Number) {\n            if (Number(token.value) === 0) {\n                return 1;\n            }\n        }\n\n        return next(token, getNextToken, opts);\n    };\n}\n\n// § 5.3. Real Numbers: the <number> type\n// https://drafts.csswg.org/css-values-4/#numbers\n// Number values are denoted by <number>, and represent real numbers, possibly with a fractional component.\n// ... It corresponds to the <number-token> production\nfunction number(token, getNextToken, opts) {\n    if (token === null) {\n        return 0;\n    }\n\n    var numberEnd = consumeNumber(token.value, 0);\n    var isNumber = numberEnd === token.value.length;\n    if (!isNumber && !isPostfixIeHack(token.value, numberEnd)) {\n        return 0;\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, numberEnd)) {\n        return 0;\n    }\n\n    return 1;\n}\n\n// §5.2. Integers: the <integer> type\n// https://drafts.csswg.org/css-values-4/#integers\nfunction integer(token, getNextToken, opts) {\n    // ... corresponds to a subset of the <number-token> production\n    if (token === null || token.type !== TYPE.Number) {\n        return 0;\n    }\n\n    // The first digit of an integer may be immediately preceded by `-` or `+` to indicate the integer’s sign.\n    var i = token.value.charCodeAt(0) === 0x002B ||       // U+002B PLUS SIGN (+)\n            token.value.charCodeAt(0) === 0x002D ? 1 : 0; // U+002D HYPHEN-MINUS (-)\n\n    // When written literally, an integer is one or more decimal digits 0 through 9 ...\n    for (; i < token.value.length; i++) {\n        if (!isDigit(token.value.charCodeAt(i))) {\n            return 0;\n        }\n    }\n\n    // check range if specified\n    if (outOfRange(opts, token.value, i)) {\n        return 0;\n    }\n\n    return 1;\n}\n\nmodule.exports = {\n    // token types\n    'ident-token': tokenType(TYPE.Ident),\n    'function-token': tokenType(TYPE.Function),\n    'at-keyword-token': tokenType(TYPE.AtKeyword),\n    'hash-token': tokenType(TYPE.Hash),\n    'string-token': tokenType(TYPE.String),\n    'bad-string-token': tokenType(TYPE.BadString),\n    'url-token': tokenType(TYPE.Url),\n    'bad-url-token': tokenType(TYPE.BadUrl),\n    'delim-token': tokenType(TYPE.Delim),\n    'number-token': tokenType(TYPE.Number),\n    'percentage-token': tokenType(TYPE.Percentage),\n    'dimension-token': tokenType(TYPE.Dimension),\n    'whitespace-token': tokenType(TYPE.WhiteSpace),\n    'CDO-token': tokenType(TYPE.CDO),\n    'CDC-token': tokenType(TYPE.CDC),\n    'colon-token': tokenType(TYPE.Colon),\n    'semicolon-token': tokenType(TYPE.Semicolon),\n    'comma-token': tokenType(TYPE.Comma),\n    '[-token': tokenType(TYPE.LeftSquareBracket),\n    ']-token': tokenType(TYPE.RightSquareBracket),\n    '(-token': tokenType(TYPE.LeftParenthesis),\n    ')-token': tokenType(TYPE.RightParenthesis),\n    '{-token': tokenType(TYPE.LeftCurlyBracket),\n    '}-token': tokenType(TYPE.RightCurlyBracket),\n\n    // token type aliases\n    'string': tokenType(TYPE.String),\n    'ident': tokenType(TYPE.Ident),\n\n    // complex types\n    'custom-ident': customIdent,\n    'custom-property-name': customPropertyName,\n    'hex-color': hexColor,\n    'id-selector': idSelector, // element( <id-selector> )\n    'an-plus-b': anPlusB,\n    'urange': urange,\n    'declaration-value': declarationValue,\n    'any-value': anyValue,\n\n    // dimensions\n    'dimension': calc(dimension(null)),\n    'angle': calc(dimension(ANGLE)),\n    'decibel': calc(dimension(DECIBEL)),\n    'frequency': calc(dimension(FREQUENCY)),\n    'flex': calc(dimension(FLEX)),\n    'length': calc(zero(dimension(LENGTH))),\n    'resolution': calc(dimension(RESOLUTION)),\n    'semitones': calc(dimension(SEMITONES)),\n    'time': calc(dimension(TIME)),\n\n    // percentage\n    'percentage': calc(percentage),\n\n    // numeric\n    'zero': zero(),\n    'number': calc(number),\n    'integer': calc(integer),\n\n    // old IE stuff\n    '-ms-legacy-expression': func('expression')\n};\n","var createCustomError = require('../utils/createCustomError');\n\nmodule.exports = function SyntaxError(message, input, offset) {\n    var error = createCustomError('SyntaxError', message);\n\n    error.input = input;\n    error.offset = offset;\n    error.rawMessage = message;\n    error.message = error.rawMessage + '\\n' +\n        '  ' + error.input + '\\n' +\n        '--' + new Array((error.offset || error.input.length) + 1).join('-') + '^';\n\n    return error;\n};\n","var SyntaxError = require('./SyntaxError');\n\nvar TAB = 9;\nvar N = 10;\nvar F = 12;\nvar R = 13;\nvar SPACE = 32;\n\nvar Tokenizer = function(str) {\n    this.str = str;\n    this.pos = 0;\n};\n\nTokenizer.prototype = {\n    charCodeAt: function(pos) {\n        return pos < this.str.length ? this.str.charCodeAt(pos) : 0;\n    },\n    charCode: function() {\n        return this.charCodeAt(this.pos);\n    },\n    nextCharCode: function() {\n        return this.charCodeAt(this.pos + 1);\n    },\n    nextNonWsCode: function(pos) {\n        return this.charCodeAt(this.findWsEnd(pos));\n    },\n    findWsEnd: function(pos) {\n        for (; pos < this.str.length; pos++) {\n            var code = this.str.charCodeAt(pos);\n            if (code !== R && code !== N && code !== F && code !== SPACE && code !== TAB) {\n                break;\n            }\n        }\n\n        return pos;\n    },\n    substringToPos: function(end) {\n        return this.str.substring(this.pos, this.pos = end);\n    },\n    eat: function(code) {\n        if (this.charCode() !== code) {\n            this.error('Expect `' + String.fromCharCode(code) + '`');\n        }\n\n        this.pos++;\n    },\n    peek: function() {\n        return this.pos < this.str.length ? this.str.charAt(this.pos++) : '';\n    },\n    error: function(message) {\n        throw new SyntaxError(message, this.str, this.pos);\n    }\n};\n\nmodule.exports = Tokenizer;\n","var Tokenizer = require('./tokenizer');\nvar TAB = 9;\nvar N = 10;\nvar F = 12;\nvar R = 13;\nvar SPACE = 32;\nvar EXCLAMATIONMARK = 33;    // !\nvar NUMBERSIGN = 35;         // #\nvar AMPERSAND = 38;          // &\nvar APOSTROPHE = 39;         // '\nvar LEFTPARENTHESIS = 40;    // (\nvar RIGHTPARENTHESIS = 41;   // )\nvar ASTERISK = 42;           // *\nvar PLUSSIGN = 43;           // +\nvar COMMA = 44;              // ,\nvar HYPERMINUS = 45;         // -\nvar LESSTHANSIGN = 60;       // <\nvar GREATERTHANSIGN = 62;    // >\nvar QUESTIONMARK = 63;       // ?\nvar COMMERCIALAT = 64;       // @\nvar LEFTSQUAREBRACKET = 91;  // [\nvar RIGHTSQUAREBRACKET = 93; // ]\nvar LEFTCURLYBRACKET = 123;  // {\nvar VERTICALLINE = 124;      // |\nvar RIGHTCURLYBRACKET = 125; // }\nvar INFINITY = 8734;         // ∞\nvar NAME_CHAR = createCharMap(function(ch) {\n    return /[a-zA-Z0-9\\-]/.test(ch);\n});\nvar COMBINATOR_PRECEDENCE = {\n    ' ': 1,\n    '&&': 2,\n    '||': 3,\n    '|': 4\n};\n\nfunction createCharMap(fn) {\n    var array = typeof Uint32Array === 'function' ? new Uint32Array(128) : new Array(128);\n    for (var i = 0; i < 128; i++) {\n        array[i] = fn(String.fromCharCode(i)) ? 1 : 0;\n    }\n    return array;\n}\n\nfunction scanSpaces(tokenizer) {\n    return tokenizer.substringToPos(\n        tokenizer.findWsEnd(tokenizer.pos)\n    );\n}\n\nfunction scanWord(tokenizer) {\n    var end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        var code = tokenizer.str.charCodeAt(end);\n        if (code >= 128 || NAME_CHAR[code] === 0) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a keyword');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanNumber(tokenizer) {\n    var end = tokenizer.pos;\n\n    for (; end < tokenizer.str.length; end++) {\n        var code = tokenizer.str.charCodeAt(end);\n        if (code < 48 || code > 57) {\n            break;\n        }\n    }\n\n    if (tokenizer.pos === end) {\n        tokenizer.error('Expect a number');\n    }\n\n    return tokenizer.substringToPos(end);\n}\n\nfunction scanString(tokenizer) {\n    var end = tokenizer.str.indexOf('\\'', tokenizer.pos + 1);\n\n    if (end === -1) {\n        tokenizer.pos = tokenizer.str.length;\n        tokenizer.error('Expect an apostrophe');\n    }\n\n    return tokenizer.substringToPos(end + 1);\n}\n\nfunction readMultiplierRange(tokenizer) {\n    var min = null;\n    var max = null;\n\n    tokenizer.eat(LEFTCURLYBRACKET);\n\n    min = scanNumber(tokenizer);\n\n    if (tokenizer.charCode() === COMMA) {\n        tokenizer.pos++;\n        if (tokenizer.charCode() !== RIGHTCURLYBRACKET) {\n            max = scanNumber(tokenizer);\n        }\n    } else {\n        max = min;\n    }\n\n    tokenizer.eat(RIGHTCURLYBRACKET);\n\n    return {\n        min: Number(min),\n        max: max ? Number(max) : 0\n    };\n}\n\nfunction readMultiplier(tokenizer) {\n    var range = null;\n    var comma = false;\n\n    switch (tokenizer.charCode()) {\n        case ASTERISK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 0\n            };\n\n            break;\n\n        case PLUSSIGN:\n            tokenizer.pos++;\n\n            range = {\n                min: 1,\n                max: 0\n            };\n\n            break;\n\n        case QUESTIONMARK:\n            tokenizer.pos++;\n\n            range = {\n                min: 0,\n                max: 1\n            };\n\n            break;\n\n        case NUMBERSIGN:\n            tokenizer.pos++;\n\n            comma = true;\n\n            if (tokenizer.charCode() === LEFTCURLYBRACKET) {\n                range = readMultiplierRange(tokenizer);\n            } else {\n                range = {\n                    min: 1,\n                    max: 0\n                };\n            }\n\n            break;\n\n        case LEFTCURLYBRACKET:\n            range = readMultiplierRange(tokenizer);\n            break;\n\n        default:\n            return null;\n    }\n\n    return {\n        type: 'Multiplier',\n        comma: comma,\n        min: range.min,\n        max: range.max,\n        term: null\n    };\n}\n\nfunction maybeMultiplied(tokenizer, node) {\n    var multiplier = readMultiplier(tokenizer);\n\n    if (multiplier !== null) {\n        multiplier.term = node;\n        return multiplier;\n    }\n\n    return node;\n}\n\nfunction maybeToken(tokenizer) {\n    var ch = tokenizer.peek();\n\n    if (ch === '') {\n        return null;\n    }\n\n    return {\n        type: 'Token',\n        value: ch\n    };\n}\n\nfunction readProperty(tokenizer) {\n    var name;\n\n    tokenizer.eat(LESSTHANSIGN);\n    tokenizer.eat(APOSTROPHE);\n\n    name = scanWord(tokenizer);\n\n    tokenizer.eat(APOSTROPHE);\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Property',\n        name: name\n    });\n}\n\n// https://drafts.csswg.org/css-values-3/#numeric-ranges\n// 4.1. Range Restrictions and Range Definition Notation\n//\n// Range restrictions can be annotated in the numeric type notation using CSS bracketed\n// range notation—[min,max]—within the angle brackets, after the identifying keyword,\n// indicating a closed range between (and including) min and max.\n// For example, <integer [0, 10]> indicates an integer between 0 and 10, inclusive.\nfunction readTypeRange(tokenizer) {\n    // use null for Infinity to make AST format JSON serializable/deserializable\n    var min = null; // -Infinity\n    var max = null; // Infinity\n    var sign = 1;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n\n    if (tokenizer.charCode() === HYPERMINUS) {\n        tokenizer.peek();\n        sign = -1;\n    }\n\n    if (sign == -1 && tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        min = sign * Number(scanNumber(tokenizer));\n    }\n\n    scanSpaces(tokenizer);\n    tokenizer.eat(COMMA);\n    scanSpaces(tokenizer);\n\n    if (tokenizer.charCode() === INFINITY) {\n        tokenizer.peek();\n    } else {\n        sign = 1;\n\n        if (tokenizer.charCode() === HYPERMINUS) {\n            tokenizer.peek();\n            sign = -1;\n        }\n\n        max = sign * Number(scanNumber(tokenizer));\n    }\n\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    // If no range is indicated, either by using the bracketed range notation\n    // or in the property description, then [−∞,∞] is assumed.\n    if (min === null && max === null) {\n        return null;\n    }\n\n    return {\n        type: 'Range',\n        min: min,\n        max: max\n    };\n}\n\nfunction readType(tokenizer) {\n    var name;\n    var opts = null;\n\n    tokenizer.eat(LESSTHANSIGN);\n    name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS &&\n        tokenizer.nextCharCode() === RIGHTPARENTHESIS) {\n        tokenizer.pos += 2;\n        name += '()';\n    }\n\n    if (tokenizer.charCodeAt(tokenizer.findWsEnd(tokenizer.pos)) === LEFTSQUAREBRACKET) {\n        scanSpaces(tokenizer);\n        opts = readTypeRange(tokenizer);\n    }\n\n    tokenizer.eat(GREATERTHANSIGN);\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Type',\n        name: name,\n        opts: opts\n    });\n}\n\nfunction readKeywordOrFunction(tokenizer) {\n    var name;\n\n    name = scanWord(tokenizer);\n\n    if (tokenizer.charCode() === LEFTPARENTHESIS) {\n        tokenizer.pos++;\n\n        return {\n            type: 'Function',\n            name: name\n        };\n    }\n\n    return maybeMultiplied(tokenizer, {\n        type: 'Keyword',\n        name: name\n    });\n}\n\nfunction regroupTerms(terms, combinators) {\n    function createGroup(terms, combinator) {\n        return {\n            type: 'Group',\n            terms: terms,\n            combinator: combinator,\n            disallowEmpty: false,\n            explicit: false\n        };\n    }\n\n    combinators = Object.keys(combinators).sort(function(a, b) {\n        return COMBINATOR_PRECEDENCE[a] - COMBINATOR_PRECEDENCE[b];\n    });\n\n    while (combinators.length > 0) {\n        var combinator = combinators.shift();\n        for (var i = 0, subgroupStart = 0; i < terms.length; i++) {\n            var term = terms[i];\n            if (term.type === 'Combinator') {\n                if (term.value === combinator) {\n                    if (subgroupStart === -1) {\n                        subgroupStart = i - 1;\n                    }\n                    terms.splice(i, 1);\n                    i--;\n                } else {\n                    if (subgroupStart !== -1 && i - subgroupStart > 1) {\n                        terms.splice(\n                            subgroupStart,\n                            i - subgroupStart,\n                            createGroup(terms.slice(subgroupStart, i), combinator)\n                        );\n                        i = subgroupStart + 1;\n                    }\n                    subgroupStart = -1;\n                }\n            }\n        }\n\n        if (subgroupStart !== -1 && combinators.length) {\n            terms.splice(\n                subgroupStart,\n                i - subgroupStart,\n                createGroup(terms.slice(subgroupStart, i), combinator)\n            );\n        }\n    }\n\n    return combinator;\n}\n\nfunction readImplicitGroup(tokenizer) {\n    var terms = [];\n    var combinators = {};\n    var token;\n    var prevToken = null;\n    var prevTokenPos = tokenizer.pos;\n\n    while (token = peek(tokenizer)) {\n        if (token.type !== 'Spaces') {\n            if (token.type === 'Combinator') {\n                // check for combinator in group beginning and double combinator sequence\n                if (prevToken === null || prevToken.type === 'Combinator') {\n                    tokenizer.pos = prevTokenPos;\n                    tokenizer.error('Unexpected combinator');\n                }\n\n                combinators[token.value] = true;\n            } else if (prevToken !== null && prevToken.type !== 'Combinator') {\n                combinators[' '] = true;  // a b\n                terms.push({\n                    type: 'Combinator',\n                    value: ' '\n                });\n            }\n\n            terms.push(token);\n            prevToken = token;\n            prevTokenPos = tokenizer.pos;\n        }\n    }\n\n    // check for combinator in group ending\n    if (prevToken !== null && prevToken.type === 'Combinator') {\n        tokenizer.pos -= prevTokenPos;\n        tokenizer.error('Unexpected combinator');\n    }\n\n    return {\n        type: 'Group',\n        terms: terms,\n        combinator: regroupTerms(terms, combinators) || ' ',\n        disallowEmpty: false,\n        explicit: false\n    };\n}\n\nfunction readGroup(tokenizer) {\n    var result;\n\n    tokenizer.eat(LEFTSQUAREBRACKET);\n    result = readImplicitGroup(tokenizer);\n    tokenizer.eat(RIGHTSQUAREBRACKET);\n\n    result.explicit = true;\n\n    if (tokenizer.charCode() === EXCLAMATIONMARK) {\n        tokenizer.pos++;\n        result.disallowEmpty = true;\n    }\n\n    return result;\n}\n\nfunction peek(tokenizer) {\n    var code = tokenizer.charCode();\n\n    if (code < 128 && NAME_CHAR[code] === 1) {\n        return readKeywordOrFunction(tokenizer);\n    }\n\n    switch (code) {\n        case RIGHTSQUAREBRACKET:\n            // don't eat, stop scan a group\n            break;\n\n        case LEFTSQUAREBRACKET:\n            return maybeMultiplied(tokenizer, readGroup(tokenizer));\n\n        case LESSTHANSIGN:\n            return tokenizer.nextCharCode() === APOSTROPHE\n                ? readProperty(tokenizer)\n                : readType(tokenizer);\n\n        case VERTICALLINE:\n            return {\n                type: 'Combinator',\n                value: tokenizer.substringToPos(\n                    tokenizer.nextCharCode() === VERTICALLINE\n                        ? tokenizer.pos + 2\n                        : tokenizer.pos + 1\n                )\n            };\n\n        case AMPERSAND:\n            tokenizer.pos++;\n            tokenizer.eat(AMPERSAND);\n\n            return {\n                type: 'Combinator',\n                value: '&&'\n            };\n\n        case COMMA:\n            tokenizer.pos++;\n            return {\n                type: 'Comma'\n            };\n\n        case APOSTROPHE:\n            return maybeMultiplied(tokenizer, {\n                type: 'String',\n                value: scanString(tokenizer)\n            });\n\n        case SPACE:\n        case TAB:\n        case N:\n        case R:\n        case F:\n            return {\n                type: 'Spaces',\n                value: scanSpaces(tokenizer)\n            };\n\n        case COMMERCIALAT:\n            code = tokenizer.nextCharCode();\n\n            if (code < 128 && NAME_CHAR[code] === 1) {\n                tokenizer.pos++;\n                return {\n                    type: 'AtKeyword',\n                    name: scanWord(tokenizer)\n                };\n            }\n\n            return maybeToken(tokenizer);\n\n        case ASTERISK:\n        case PLUSSIGN:\n        case QUESTIONMARK:\n        case NUMBERSIGN:\n        case EXCLAMATIONMARK:\n            // prohibited tokens (used as a multiplier start)\n            break;\n\n        case LEFTCURLYBRACKET:\n            // LEFTCURLYBRACKET is allowed since mdn/data uses it w/o quoting\n            // check next char isn't a number, because it's likely a disjoined multiplier\n            code = tokenizer.nextCharCode();\n\n            if (code < 48 || code > 57) {\n                return maybeToken(tokenizer);\n            }\n\n            break;\n\n        default:\n            return maybeToken(tokenizer);\n    }\n}\n\nfunction parse(source) {\n    var tokenizer = new Tokenizer(source);\n    var result = readImplicitGroup(tokenizer);\n\n    if (tokenizer.pos !== source.length) {\n        tokenizer.error('Unexpected input');\n    }\n\n    // reduce redundant groups with single group term\n    if (result.terms.length === 1 && result.terms[0].type === 'Group') {\n        result = result.terms[0];\n    }\n\n    return result;\n}\n\n// warm up parse to elimitate code branches that never execute\n// fix soft deoptimizations (insufficient type feedback)\nparse('[a&&<b>#|<\\'c\\'>*||e() f{2} /,(% g#{1,2} h{2,})]!');\n\nmodule.exports = parse;\n","var noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nmodule.exports = function(node, options, context) {\n    function walk(node) {\n        enter.call(context, node);\n\n        switch (node.type) {\n            case 'Group':\n                node.terms.forEach(walk);\n                break;\n\n            case 'Multiplier':\n                walk(node.term);\n                break;\n\n            case 'Type':\n            case 'Property':\n            case 'Keyword':\n            case 'AtKeyword':\n            case 'Function':\n            case 'String':\n            case 'Token':\n            case 'Comma':\n                break;\n\n            default:\n                throw new Error('Unknown type: ' + node.type);\n        }\n\n        leave.call(context, node);\n    }\n\n    var enter = noop;\n    var leave = noop;\n\n    if (typeof options === 'function') {\n        enter = options;\n    } else if (options) {\n        enter = ensureFunction(options.enter);\n        leave = ensureFunction(options.leave);\n    }\n\n    if (enter === noop && leave === noop) {\n        throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n    }\n\n    walk(node, context);\n};\n","var tokenize = require('../tokenizer');\nvar TokenStream = require('../common/TokenStream');\nvar tokenStream = new TokenStream();\nvar astToTokens = {\n    decorator: function(handlers) {\n        var curNode = null;\n        var prev = { len: 0, node: null };\n        var nodes = [prev];\n        var buffer = '';\n\n        return {\n            children: handlers.children,\n            node: function(node) {\n                var tmp = curNode;\n                curNode = node;\n                handlers.node.call(this, node);\n                curNode = tmp;\n            },\n            chunk: function(chunk) {\n                buffer += chunk;\n                if (prev.node !== curNode) {\n                    nodes.push({\n                        len: chunk.length,\n                        node: curNode\n                    });\n                } else {\n                    prev.len += chunk.length;\n                }\n            },\n            result: function() {\n                return prepareTokens(buffer, nodes);\n            }\n        };\n    }\n};\n\nfunction prepareTokens(str, nodes) {\n    var tokens = [];\n    var nodesOffset = 0;\n    var nodesIndex = 0;\n    var currentNode = nodes ? nodes[nodesIndex].node : null;\n\n    tokenize(str, tokenStream);\n\n    while (!tokenStream.eof) {\n        if (nodes) {\n            while (nodesIndex < nodes.length && nodesOffset + nodes[nodesIndex].len <= tokenStream.tokenStart) {\n                nodesOffset += nodes[nodesIndex++].len;\n                currentNode = nodes[nodesIndex].node;\n            }\n        }\n\n        tokens.push({\n            type: tokenStream.tokenType,\n            value: tokenStream.getTokenValue(),\n            index: tokenStream.tokenIndex, // TODO: remove it, temporary solution\n            balance: tokenStream.balance[tokenStream.tokenIndex], // TODO: remove it, temporary solution\n            node: currentNode\n        });\n        tokenStream.next();\n        // console.log({ ...tokens[tokens.length - 1], node: undefined });\n    }\n\n    return tokens;\n}\n\nmodule.exports = function(value, syntax) {\n    if (typeof value === 'string') {\n        return prepareTokens(value, null);\n    }\n\n    return syntax.generate(value, astToTokens);\n};\n","var parse = require('../definition-syntax/parse');\n\nvar MATCH = { type: 'Match' };\nvar MISMATCH = { type: 'Mismatch' };\nvar DISALLOW_EMPTY = { type: 'DisallowEmpty' };\nvar LEFTPARENTHESIS = 40;  // (\nvar RIGHTPARENTHESIS = 41; // )\n\nfunction createCondition(match, thenBranch, elseBranch) {\n    // reduce node count\n    if (thenBranch === MATCH && elseBranch === MISMATCH) {\n        return match;\n    }\n\n    if (match === MATCH && thenBranch === MATCH && elseBranch === MATCH) {\n        return match;\n    }\n\n    if (match.type === 'If' && match.else === MISMATCH && thenBranch === MATCH) {\n        thenBranch = match.then;\n        match = match.match;\n    }\n\n    return {\n        type: 'If',\n        match: match,\n        then: thenBranch,\n        else: elseBranch\n    };\n}\n\nfunction isFunctionType(name) {\n    return (\n        name.length > 2 &&\n        name.charCodeAt(name.length - 2) === LEFTPARENTHESIS &&\n        name.charCodeAt(name.length - 1) === RIGHTPARENTHESIS\n    );\n}\n\nfunction isEnumCapatible(term) {\n    return (\n        term.type === 'Keyword' ||\n        term.type === 'AtKeyword' ||\n        term.type === 'Function' ||\n        term.type === 'Type' && isFunctionType(term.name)\n    );\n}\n\nfunction buildGroupMatchGraph(combinator, terms, atLeastOneTermMatched) {\n    switch (combinator) {\n        case ' ':\n            // Juxtaposing components means that all of them must occur, in the given order.\n            //\n            // a b c\n            // =\n            // match a\n            //   then match b\n            //     then match c\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            //   else MISMATCH\n            var result = MATCH;\n\n            for (var i = terms.length - 1; i >= 0; i--) {\n                var term = terms[i];\n\n                result = createCondition(\n                    term,\n                    result,\n                    MISMATCH\n                );\n            };\n\n            return result;\n\n        case '|':\n            // A bar (|) separates two or more alternatives: exactly one of them must occur.\n            //\n            // a | b | c\n            // =\n            // match a\n            //   then MATCH\n            //   else match b\n            //     then MATCH\n            //     else match c\n            //       then MATCH\n            //       else MISMATCH\n\n            var result = MISMATCH;\n            var map = null;\n\n            for (var i = terms.length - 1; i >= 0; i--) {\n                var term = terms[i];\n\n                // reduce sequence of keywords into a Enum\n                if (isEnumCapatible(term)) {\n                    if (map === null && i > 0 && isEnumCapatible(terms[i - 1])) {\n                        map = Object.create(null);\n                        result = createCondition(\n                            {\n                                type: 'Enum',\n                                map: map\n                            },\n                            MATCH,\n                            result\n                        );\n                    }\n\n                    if (map !== null) {\n                        var key = (isFunctionType(term.name) ? term.name.slice(0, -1) : term.name).toLowerCase();\n                        if (key in map === false) {\n                            map[key] = term;\n                            continue;\n                        }\n                    }\n                }\n\n                map = null;\n\n                // create a new conditonal node\n                result = createCondition(\n                    term,\n                    MATCH,\n                    result\n                );\n            };\n\n            return result;\n\n        case '&&':\n            // A double ampersand (&&) separates two or more components,\n            // all of which must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since &&-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms: terms,\n                    all: true\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a && b && c\n            // =\n            // match a\n            //   then [b && c]\n            //   else match b\n            //     then [a && c]\n            //     else match c\n            //       then [a && b]\n            //       else MISMATCH\n            //\n            // a && b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MISMATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MISMATCH\n            //     else MISMATCH\n            var result = MISMATCH;\n\n            for (var i = terms.length - 1; i >= 0; i--) {\n                var term = terms[i];\n                var thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        false\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n\n        case '||':\n            // A double bar (||) separates two or more options:\n            // one or more of them must occur, in any order.\n\n            // Use MatchOnce for groups with a large number of terms,\n            // since ||-groups produces at least N!-node trees\n            if (terms.length > 5) {\n                return {\n                    type: 'MatchOnce',\n                    terms: terms,\n                    all: false\n                };\n            }\n\n            // Use a combination tree for groups with small number of terms\n            //\n            // a || b || c\n            // =\n            // match a\n            //   then [b || c]\n            //   else match b\n            //     then [a || c]\n            //     else match c\n            //       then [a || b]\n            //       else MISMATCH\n            //\n            // a || b\n            // =\n            // match a\n            //   then match b\n            //     then MATCH\n            //     else MATCH\n            //   else match b\n            //     then match a\n            //       then MATCH\n            //       else MATCH\n            //     else MISMATCH\n            var result = atLeastOneTermMatched ? MATCH : MISMATCH;\n\n            for (var i = terms.length - 1; i >= 0; i--) {\n                var term = terms[i];\n                var thenClause;\n\n                if (terms.length > 1) {\n                    thenClause = buildGroupMatchGraph(\n                        combinator,\n                        terms.filter(function(newGroupTerm) {\n                            return newGroupTerm !== term;\n                        }),\n                        true\n                    );\n                } else {\n                    thenClause = MATCH;\n                }\n\n                result = createCondition(\n                    term,\n                    thenClause,\n                    result\n                );\n            };\n\n            return result;\n    }\n}\n\nfunction buildMultiplierMatchGraph(node) {\n    var result = MATCH;\n    var matchTerm = buildMatchGraph(node.term);\n\n    if (node.max === 0) {\n        // disable repeating of empty match to prevent infinite loop\n        matchTerm = createCondition(\n            matchTerm,\n            DISALLOW_EMPTY,\n            MISMATCH\n        );\n\n        // an occurrence count is not limited, make a cycle;\n        // to collect more terms on each following matching mismatch\n        result = createCondition(\n            matchTerm,\n            null, // will be a loop\n            MISMATCH\n        );\n\n        result.then = createCondition(\n            MATCH,\n            MATCH,\n            result // make a loop\n        );\n\n        if (node.comma) {\n            result.then.else = createCondition(\n                { type: 'Comma', syntax: node },\n                result,\n                MISMATCH\n            );\n        }\n    } else {\n        // create a match node chain for [min .. max] interval with optional matches\n        for (var i = node.min || 1; i <= node.max; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                createCondition(\n                    MATCH,\n                    MATCH,\n                    result\n                ),\n                MISMATCH\n            );\n        }\n    }\n\n    if (node.min === 0) {\n        // allow zero match\n        result = createCondition(\n            MATCH,\n            MATCH,\n            result\n        );\n    } else {\n        // create a match node chain to collect [0 ... min - 1] required matches\n        for (var i = 0; i < node.min - 1; i++) {\n            if (node.comma && result !== MATCH) {\n                result = createCondition(\n                    { type: 'Comma', syntax: node },\n                    result,\n                    MISMATCH\n                );\n            }\n\n            result = createCondition(\n                matchTerm,\n                result,\n                MISMATCH\n            );\n        }\n    }\n\n    return result;\n}\n\nfunction buildMatchGraph(node) {\n    if (typeof node === 'function') {\n        return {\n            type: 'Generic',\n            fn: node\n        };\n    }\n\n    switch (node.type) {\n        case 'Group':\n            var result = buildGroupMatchGraph(\n                node.combinator,\n                node.terms.map(buildMatchGraph),\n                false\n            );\n\n            if (node.disallowEmpty) {\n                result = createCondition(\n                    result,\n                    DISALLOW_EMPTY,\n                    MISMATCH\n                );\n            }\n\n            return result;\n\n        case 'Multiplier':\n            return buildMultiplierMatchGraph(node);\n\n        case 'Type':\n        case 'Property':\n            return {\n                type: node.type,\n                name: node.name,\n                syntax: node\n            };\n\n        case 'Keyword':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'AtKeyword':\n            return {\n                type: node.type,\n                name: '@' + node.name.toLowerCase(),\n                syntax: node\n            };\n\n        case 'Function':\n            return {\n                type: node.type,\n                name: node.name.toLowerCase() + '(',\n                syntax: node\n            };\n\n        case 'String':\n            // convert a one char length String to a Token\n            if (node.value.length === 3) {\n                return {\n                    type: 'Token',\n                    value: node.value.charAt(1),\n                    syntax: node\n                };\n            }\n\n            // otherwise use it as is\n            return {\n                type: node.type,\n                value: node.value.substr(1, node.value.length - 2).replace(/\\\\'/g, '\\''),\n                syntax: node\n            };\n\n        case 'Token':\n            return {\n                type: node.type,\n                value: node.value,\n                syntax: node\n            };\n\n        case 'Comma':\n            return {\n                type: node.type,\n                syntax: node\n            };\n\n        default:\n            throw new Error('Unknown node type:', node.type);\n    }\n}\n\nmodule.exports = {\n    MATCH: MATCH,\n    MISMATCH: MISMATCH,\n    DISALLOW_EMPTY: DISALLOW_EMPTY,\n    buildMatchGraph: function(syntaxTree, ref) {\n        if (typeof syntaxTree === 'string') {\n            syntaxTree = parse(syntaxTree);\n        }\n\n        return {\n            type: 'MatchGraph',\n            match: buildMatchGraph(syntaxTree),\n            syntax: ref || null,\n            source: syntaxTree\n        };\n    }\n};\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\nvar matchGraph = require('./match-graph');\nvar MATCH = matchGraph.MATCH;\nvar MISMATCH = matchGraph.MISMATCH;\nvar DISALLOW_EMPTY = matchGraph.DISALLOW_EMPTY;\nvar TYPE = require('../tokenizer/const').TYPE;\n\nvar STUB = 0;\nvar TOKEN = 1;\nvar OPEN_SYNTAX = 2;\nvar CLOSE_SYNTAX = 3;\n\nvar EXIT_REASON_MATCH = 'Match';\nvar EXIT_REASON_MISMATCH = 'Mismatch';\nvar EXIT_REASON_ITERATION_LIMIT = 'Maximum iteration number exceeded (please fill an issue on https://github.com/csstree/csstree/issues)';\n\nvar ITERATION_LIMIT = 15000;\nvar totalIterationCount = 0;\n\nfunction reverseList(list) {\n    var prev = null;\n    var next = null;\n    var item = list;\n\n    while (item !== null) {\n        next = item.prev;\n        item.prev = prev;\n        prev = item;\n        item = next;\n    }\n\n    return prev;\n}\n\nfunction areStringsEqualCaseInsensitive(testStr, referenceStr) {\n    if (testStr.length !== referenceStr.length) {\n        return false;\n    }\n\n    for (var i = 0; i < testStr.length; i++) {\n        var testCode = testStr.charCodeAt(i);\n        var referenceCode = referenceStr.charCodeAt(i);\n\n        // testCode.toLowerCase() for U+0041 LATIN CAPITAL LETTER A (A) .. U+005A LATIN CAPITAL LETTER Z (Z).\n        if (testCode >= 0x0041 && testCode <= 0x005A) {\n            testCode = testCode | 32;\n        }\n\n        if (testCode !== referenceCode) {\n            return false;\n        }\n    }\n\n    return true;\n}\n\nfunction isCommaContextStart(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.Comma ||\n        token.type === TYPE.Function ||\n        token.type === TYPE.LeftParenthesis ||\n        token.type === TYPE.LeftSquareBracket ||\n        token.type === TYPE.LeftCurlyBracket ||\n        token.type === TYPE.Delim\n    );\n}\n\nfunction isCommaContextEnd(token) {\n    if (token === null) {\n        return true;\n    }\n\n    return (\n        token.type === TYPE.RightParenthesis ||\n        token.type === TYPE.RightSquareBracket ||\n        token.type === TYPE.RightCurlyBracket ||\n        token.type === TYPE.Delim\n    );\n}\n\nfunction internalMatch(tokens, state, syntaxes) {\n    function moveToNextToken() {\n        do {\n            tokenIndex++;\n            token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n        } while (token !== null && (token.type === TYPE.WhiteSpace || token.type === TYPE.Comment));\n    }\n\n    function getNextToken(offset) {\n        var nextIndex = tokenIndex + offset;\n\n        return nextIndex < tokens.length ? tokens[nextIndex] : null;\n    }\n\n    function stateSnapshotFromSyntax(nextState, prev) {\n        return {\n            nextState: nextState,\n            matchStack: matchStack,\n            syntaxStack: syntaxStack,\n            thenStack: thenStack,\n            tokenIndex: tokenIndex,\n            prev: prev\n        };\n    }\n\n    function pushThenStack(nextState) {\n        thenStack = {\n            nextState: nextState,\n            matchStack: matchStack,\n            syntaxStack: syntaxStack,\n            prev: thenStack\n        };\n    }\n\n    function pushElseStack(nextState) {\n        elseStack = stateSnapshotFromSyntax(nextState, elseStack);\n    }\n\n    function addTokenToMatch() {\n        matchStack = {\n            type: TOKEN,\n            syntax: state.syntax,\n            token: token,\n            prev: matchStack\n        };\n\n        moveToNextToken();\n        syntaxStash = null;\n\n        if (tokenIndex > longestMatch) {\n            longestMatch = tokenIndex;\n        }\n    }\n\n    function openSyntax() {\n        syntaxStack = {\n            syntax: state.syntax,\n            opts: state.syntax.opts || (syntaxStack !== null && syntaxStack.opts) || null,\n            prev: syntaxStack\n        };\n\n        matchStack = {\n            type: OPEN_SYNTAX,\n            syntax: state.syntax,\n            token: matchStack.token,\n            prev: matchStack\n        };\n    }\n\n    function closeSyntax() {\n        if (matchStack.type === OPEN_SYNTAX) {\n            matchStack = matchStack.prev;\n        } else {\n            matchStack = {\n                type: CLOSE_SYNTAX,\n                syntax: syntaxStack.syntax,\n                token: matchStack.token,\n                prev: matchStack\n            };\n        }\n\n        syntaxStack = syntaxStack.prev;\n    }\n\n    var syntaxStack = null;\n    var thenStack = null;\n    var elseStack = null;\n\n    // null – stashing allowed, nothing stashed\n    // false – stashing disabled, nothing stashed\n    // anithing else – fail stashable syntaxes, some syntax stashed\n    var syntaxStash = null;\n\n    var iterationCount = 0; // count iterations and prevent infinite loop\n    var exitReason = null;\n\n    var token = null;\n    var tokenIndex = -1;\n    var longestMatch = 0;\n    var matchStack = {\n        type: STUB,\n        syntax: null,\n        token: null,\n        prev: null\n    };\n\n    moveToNextToken();\n\n    while (exitReason === null && ++iterationCount < ITERATION_LIMIT) {\n        // function mapList(list, fn) {\n        //     var result = [];\n        //     while (list) {\n        //         result.unshift(fn(list));\n        //         list = list.prev;\n        //     }\n        //     return result;\n        // }\n        // console.log('--\\n',\n        //     '#' + iterationCount,\n        //     require('util').inspect({\n        //         match: mapList(matchStack, x => x.type === TOKEN ? x.token && x.token.value : x.syntax ? ({ [OPEN_SYNTAX]: '<', [CLOSE_SYNTAX]: '</' }[x.type] || x.type) + '!' + x.syntax.name : null),\n        //         token: token && token.value,\n        //         tokenIndex,\n        //         syntax: syntax.type + (syntax.id ? ' #' + syntax.id : '')\n        //     }, { depth: null })\n        // );\n        switch (state.type) {\n            case 'Match':\n                if (thenStack === null) {\n                    // turn to MISMATCH when some tokens left unmatched\n                    if (token !== null) {\n                        // doesn't mismatch if just one token left and it's an IE hack\n                        if (tokenIndex !== tokens.length - 1 || (token.value !== '\\\\0' && token.value !== '\\\\9')) {\n                            state = MISMATCH;\n                            break;\n                        }\n                    }\n\n                    // break the main loop, return a result - MATCH\n                    exitReason = EXIT_REASON_MATCH;\n                    break;\n                }\n\n                // go to next syntax (`then` branch)\n                state = thenStack.nextState;\n\n                // check match is not empty\n                if (state === DISALLOW_EMPTY) {\n                    if (thenStack.matchStack === matchStack) {\n                        state = MISMATCH;\n                        break;\n                    } else {\n                        state = MATCH;\n                    }\n                }\n\n                // close syntax if needed\n                while (thenStack.syntaxStack !== syntaxStack) {\n                    closeSyntax();\n                }\n\n                // pop stack\n                thenStack = thenStack.prev;\n                break;\n\n            case 'Mismatch':\n                // when some syntax is stashed\n                if (syntaxStash !== null && syntaxStash !== false) {\n                    // there is no else branches or a branch reduce match stack\n                    if (elseStack === null || tokenIndex > elseStack.tokenIndex) {\n                        // restore state from the stash\n                        elseStack = syntaxStash;\n                        syntaxStash = false; // disable stashing\n                    }\n                } else if (elseStack === null) {\n                    // no else branches -> break the main loop\n                    // return a result - MISMATCH\n                    exitReason = EXIT_REASON_MISMATCH;\n                    break;\n                }\n\n                // go to next syntax (`else` branch)\n                state = elseStack.nextState;\n\n                // restore all the rest stack states\n                thenStack = elseStack.thenStack;\n                syntaxStack = elseStack.syntaxStack;\n                matchStack = elseStack.matchStack;\n                tokenIndex = elseStack.tokenIndex;\n                token = tokenIndex < tokens.length ? tokens[tokenIndex] : null;\n\n                // pop stack\n                elseStack = elseStack.prev;\n                break;\n\n            case 'MatchGraph':\n                state = state.match;\n                break;\n\n            case 'If':\n                // IMPORTANT: else stack push must go first,\n                // since it stores the state of thenStack before changes\n                if (state.else !== MISMATCH) {\n                    pushElseStack(state.else);\n                }\n\n                if (state.then !== MATCH) {\n                    pushThenStack(state.then);\n                }\n\n                state = state.match;\n                break;\n\n            case 'MatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state,\n                    index: 0,\n                    mask: 0\n                };\n                break;\n\n            case 'MatchOnceBuffer':\n                var terms = state.syntax.terms;\n\n                if (state.index === terms.length) {\n                    // no matches at all or it's required all terms to be matched\n                    if (state.mask === 0 || state.syntax.all) {\n                        state = MISMATCH;\n                        break;\n                    }\n\n                    // a partial match is ok\n                    state = MATCH;\n                    break;\n                }\n\n                // all terms are matched\n                if (state.mask === (1 << terms.length) - 1) {\n                    state = MATCH;\n                    break;\n                }\n\n                for (; state.index < terms.length; state.index++) {\n                    var matchFlag = 1 << state.index;\n\n                    if ((state.mask & matchFlag) === 0) {\n                        // IMPORTANT: else stack push must go first,\n                        // since it stores the state of thenStack before changes\n                        pushElseStack(state);\n                        pushThenStack({\n                            type: 'AddMatchOnce',\n                            syntax: state.syntax,\n                            mask: state.mask | matchFlag\n                        });\n\n                        // match\n                        state = terms[state.index++];\n                        break;\n                    }\n                }\n                break;\n\n            case 'AddMatchOnce':\n                state = {\n                    type: 'MatchOnceBuffer',\n                    syntax: state.syntax,\n                    index: 0,\n                    mask: state.mask\n                };\n                break;\n\n            case 'Enum':\n                if (token !== null) {\n                    var name = token.value.toLowerCase();\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (name.indexOf('\\\\') !== -1) {\n                        name = name.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (hasOwnProperty.call(state.map, name)) {\n                        state = state.map[name];\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Generic':\n                var opts = syntaxStack !== null ? syntaxStack.opts : null;\n                var lastTokenIndex = tokenIndex + Math.floor(state.fn(token, getNextToken, opts));\n\n                if (!isNaN(lastTokenIndex) && lastTokenIndex > tokenIndex) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n\n            case 'Type':\n            case 'Property':\n                var syntaxDict = state.type === 'Type' ? 'types' : 'properties';\n                var dictSyntax = hasOwnProperty.call(syntaxes, syntaxDict) ? syntaxes[syntaxDict][state.name] : null;\n\n                if (!dictSyntax || !dictSyntax.match) {\n                    throw new Error(\n                        'Bad syntax reference: ' +\n                        (state.type === 'Type'\n                            ? '<' + state.name + '>'\n                            : '<\\'' + state.name + '\\'>')\n                    );\n                }\n\n                // stash a syntax for types with low priority\n                if (syntaxStash !== false && token !== null && state.type === 'Type') {\n                    var lowPriorityMatching =\n                        // https://drafts.csswg.org/css-values-4/#custom-idents\n                        // When parsing positionally-ambiguous keywords in a property value, a <custom-ident> production\n                        // can only claim the keyword if no other unfulfilled production can claim it.\n                        (state.name === 'custom-ident' && token.type === TYPE.Ident) ||\n\n                        // https://drafts.csswg.org/css-values-4/#lengths\n                        // ... if a `0` could be parsed as either a <number> or a <length> in a property (such as line-height),\n                        // it must parse as a <number>\n                        (state.name === 'length' && token.value === '0');\n\n                    if (lowPriorityMatching) {\n                        if (syntaxStash === null) {\n                            syntaxStash = stateSnapshotFromSyntax(state, elseStack);\n                        }\n\n                        state = MISMATCH;\n                        break;\n                    }\n                }\n\n                openSyntax();\n                state = dictSyntax.match;\n                break;\n\n            case 'Keyword':\n                var name = state.name;\n\n                if (token !== null) {\n                    var keywordName = token.value;\n\n                    // drop \\0 and \\9 hack from keyword name\n                    if (keywordName.indexOf('\\\\') !== -1) {\n                        keywordName = keywordName.replace(/\\\\[09].*$/, '');\n                    }\n\n                    if (areStringsEqualCaseInsensitive(keywordName, name)) {\n                        addTokenToMatch();\n                        state = MATCH;\n                        break;\n                    }\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'AtKeyword':\n            case 'Function':\n                if (token !== null && areStringsEqualCaseInsensitive(token.value, state.name)) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Token':\n                if (token !== null && token.value === state.value) {\n                    addTokenToMatch();\n                    state = MATCH;\n                    break;\n                }\n\n                state = MISMATCH;\n                break;\n\n            case 'Comma':\n                if (token !== null && token.type === TYPE.Comma) {\n                    if (isCommaContextStart(matchStack.token)) {\n                        state = MISMATCH;\n                    } else {\n                        addTokenToMatch();\n                        state = isCommaContextEnd(token) ? MISMATCH : MATCH;\n                    }\n                } else {\n                    state = isCommaContextStart(matchStack.token) || isCommaContextEnd(token) ? MATCH : MISMATCH;\n                }\n\n                break;\n\n            case 'String':\n                var string = '';\n\n                for (var lastTokenIndex = tokenIndex; lastTokenIndex < tokens.length && string.length < state.value.length; lastTokenIndex++) {\n                    string += tokens[lastTokenIndex].value;\n                }\n\n                if (areStringsEqualCaseInsensitive(string, state.value)) {\n                    while (tokenIndex < lastTokenIndex) {\n                        addTokenToMatch();\n                    }\n\n                    state = MATCH;\n                } else {\n                    state = MISMATCH;\n                }\n\n                break;\n\n            default:\n                throw new Error('Unknown node type: ' + state.type);\n        }\n    }\n\n    totalIterationCount += iterationCount;\n\n    switch (exitReason) {\n        case null:\n            console.warn('[csstree-match] BREAK after ' + ITERATION_LIMIT + ' iterations');\n            exitReason = EXIT_REASON_ITERATION_LIMIT;\n            matchStack = null;\n            break;\n\n        case EXIT_REASON_MATCH:\n            while (syntaxStack !== null) {\n                closeSyntax();\n            }\n            break;\n\n        default:\n            matchStack = null;\n    }\n\n    return {\n        tokens: tokens,\n        reason: exitReason,\n        iterations: iterationCount,\n        match: matchStack,\n        longestMatch: longestMatch\n    };\n}\n\nfunction matchAsList(tokens, matchGraph, syntaxes) {\n    var matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match !== null) {\n        var item = reverseList(matchResult.match).prev;\n\n        matchResult.match = [];\n\n        while (item !== null) {\n            switch (item.type) {\n                case STUB:\n                    break;\n\n                case OPEN_SYNTAX:\n                case CLOSE_SYNTAX:\n                    matchResult.match.push({\n                        type: item.type,\n                        syntax: item.syntax\n                    });\n                    break;\n\n                default:\n                    matchResult.match.push({\n                        token: item.token.value,\n                        node: item.token.node\n                    });\n                    break;\n            }\n\n            item = item.prev;\n        }\n    }\n\n    return matchResult;\n}\n\nfunction matchAsTree(tokens, matchGraph, syntaxes) {\n    var matchResult = internalMatch(tokens, matchGraph, syntaxes || {});\n\n    if (matchResult.match === null) {\n        return matchResult;\n    }\n\n    var item = matchResult.match;\n    var host = matchResult.match = {\n        syntax: matchGraph.syntax || null,\n        match: []\n    };\n    var hostStack = [host];\n\n    // revert a list and start with 2nd item since 1st is a stub item\n    item = reverseList(item).prev;\n\n    // build a tree\n    while (item !== null) {\n        switch (item.type) {\n            case OPEN_SYNTAX:\n                host.match.push(host = {\n                    syntax: item.syntax,\n                    match: []\n                });\n                hostStack.push(host);\n                break;\n\n            case CLOSE_SYNTAX:\n                hostStack.pop();\n                host = hostStack[hostStack.length - 1];\n                break;\n\n            default:\n                host.match.push({\n                    syntax: item.syntax || null,\n                    token: item.token.value,\n                    node: item.token.node\n                });\n        }\n\n        item = item.prev;\n    }\n\n    return matchResult;\n}\n\nmodule.exports = {\n    matchAsList: matchAsList,\n    matchAsTree: matchAsTree,\n    getTotalIterationCount: function() {\n        return totalIterationCount;\n    }\n};\n","function getTrace(node) {\n    function shouldPutToTrace(syntax) {\n        if (syntax === null) {\n            return false;\n        }\n\n        return (\n            syntax.type === 'Type' ||\n            syntax.type === 'Property' ||\n            syntax.type === 'Keyword'\n        );\n    }\n\n    function hasMatch(matchNode) {\n        if (Array.isArray(matchNode.match)) {\n            // use for-loop for better perfomance\n            for (var i = 0; i < matchNode.match.length; i++) {\n                if (hasMatch(matchNode.match[i])) {\n                    if (shouldPutToTrace(matchNode.syntax)) {\n                        result.unshift(matchNode.syntax);\n                    }\n\n                    return true;\n                }\n            }\n        } else if (matchNode.node === node) {\n            result = shouldPutToTrace(matchNode.syntax)\n                ? [matchNode.syntax]\n                : [];\n\n            return true;\n        }\n\n        return false;\n    }\n\n    var result = null;\n\n    if (this.matched !== null) {\n        hasMatch(this.matched);\n    }\n\n    return result;\n}\n\nfunction testNode(match, node, fn) {\n    var trace = getTrace.call(match, node);\n\n    if (trace === null) {\n        return false;\n    }\n\n    return trace.some(fn);\n}\n\nfunction isType(node, type) {\n    return testNode(this, node, function(matchNode) {\n        return matchNode.type === 'Type' && matchNode.name === type;\n    });\n}\n\nfunction isProperty(node, property) {\n    return testNode(this, node, function(matchNode) {\n        return matchNode.type === 'Property' && matchNode.name === property;\n    });\n}\n\nfunction isKeyword(node) {\n    return testNode(this, node, function(matchNode) {\n        return matchNode.type === 'Keyword';\n    });\n}\n\nmodule.exports = {\n    getTrace: getTrace,\n    isType: isType,\n    isProperty: isProperty,\n    isKeyword: isKeyword\n};\n","var List = require('../common/List');\n\nfunction getFirstMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getFirstMatchNode(matchNode.match[0]);\n}\n\nfunction getLastMatchNode(matchNode) {\n    if ('node' in matchNode) {\n        return matchNode.node;\n    }\n\n    return getLastMatchNode(matchNode.match[matchNode.match.length - 1]);\n}\n\nfunction matchFragments(lexer, ast, match, type, name) {\n    function findFragments(matchNode) {\n        if (matchNode.syntax !== null &&\n            matchNode.syntax.type === type &&\n            matchNode.syntax.name === name) {\n            var start = getFirstMatchNode(matchNode);\n            var end = getLastMatchNode(matchNode);\n\n            lexer.syntax.walk(ast, function(node, item, list) {\n                if (node === start) {\n                    var nodes = new List();\n\n                    do {\n                        nodes.appendData(item.data);\n\n                        if (item.data === end) {\n                            break;\n                        }\n\n                        item = item.next;\n                    } while (item !== null);\n\n                    fragments.push({\n                        parent: list,\n                        nodes: nodes\n                    });\n                }\n            });\n        }\n\n        if (Array.isArray(matchNode.match)) {\n            matchNode.match.forEach(findFragments);\n        }\n    }\n\n    var fragments = [];\n\n    if (match.matched !== null) {\n        findFragments(match.matched);\n    }\n\n    return fragments;\n}\n\nmodule.exports = {\n    matchFragments: matchFragments\n};\n","var List = require('../common/List');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction isValidNumber(value) {\n    // Number.isInteger(value) && value >= 0\n    return (\n        typeof value === 'number' &&\n        isFinite(value) &&\n        Math.floor(value) === value &&\n        value >= 0\n    );\n}\n\nfunction isValidLocation(loc) {\n    return (\n        Boolean(loc) &&\n        isValidNumber(loc.offset) &&\n        isValidNumber(loc.line) &&\n        isValidNumber(loc.column)\n    );\n}\n\nfunction createNodeStructureChecker(type, fields) {\n    return function checkNode(node, warn) {\n        if (!node || node.constructor !== Object) {\n            return warn(node, 'Type of node should be an Object');\n        }\n\n        for (var key in node) {\n            var valid = true;\n\n            if (hasOwnProperty.call(node, key) === false) {\n                continue;\n            }\n\n            if (key === 'type') {\n                if (node.type !== type) {\n                    warn(node, 'Wrong node type `' + node.type + '`, expected `' + type + '`');\n                }\n            } else if (key === 'loc') {\n                if (node.loc === null) {\n                    continue;\n                } else if (node.loc && node.loc.constructor === Object) {\n                    if (typeof node.loc.source !== 'string') {\n                        key += '.source';\n                    } else if (!isValidLocation(node.loc.start)) {\n                        key += '.start';\n                    } else if (!isValidLocation(node.loc.end)) {\n                        key += '.end';\n                    } else {\n                        continue;\n                    }\n                }\n\n                valid = false;\n            } else if (fields.hasOwnProperty(key)) {\n                for (var i = 0, valid = false; !valid && i < fields[key].length; i++) {\n                    var fieldType = fields[key][i];\n\n                    switch (fieldType) {\n                        case String:\n                            valid = typeof node[key] === 'string';\n                            break;\n\n                        case Boolean:\n                            valid = typeof node[key] === 'boolean';\n                            break;\n\n                        case null:\n                            valid = node[key] === null;\n                            break;\n\n                        default:\n                            if (typeof fieldType === 'string') {\n                                valid = node[key] && node[key].type === fieldType;\n                            } else if (Array.isArray(fieldType)) {\n                                valid = node[key] instanceof List;\n                            }\n                    }\n                }\n            } else {\n                warn(node, 'Unknown field `' + key + '` for ' + type + ' node type');\n            }\n\n            if (!valid) {\n                warn(node, 'Bad value for `' + type + '.' + key + '`');\n            }\n        }\n\n        for (var key in fields) {\n            if (hasOwnProperty.call(fields, key) &&\n                hasOwnProperty.call(node, key) === false) {\n                warn(node, 'Field `' + type + '.' + key + '` is missed');\n            }\n        }\n    };\n}\n\nfunction processStructure(name, nodeType) {\n    var structure = nodeType.structure;\n    var fields = {\n        type: String,\n        loc: true\n    };\n    var docs = {\n        type: '\"' + name + '\"'\n    };\n\n    for (var key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        var docsTypes = [];\n        var fieldTypes = fields[key] = Array.isArray(structure[key])\n            ? structure[key].slice()\n            : [structure[key]];\n\n        for (var i = 0; i < fieldTypes.length; i++) {\n            var fieldType = fieldTypes[i];\n            if (fieldType === String || fieldType === Boolean) {\n                docsTypes.push(fieldType.name);\n            } else if (fieldType === null) {\n                docsTypes.push('null');\n            } else if (typeof fieldType === 'string') {\n                docsTypes.push('<' + fieldType + '>');\n            } else if (Array.isArray(fieldType)) {\n                docsTypes.push('List'); // TODO: use type enum\n            } else {\n                throw new Error('Wrong value `' + fieldType + '` in `' + name + '.' + key + '` structure definition');\n            }\n        }\n\n        docs[key] = docsTypes.join(' | ');\n    }\n\n    return {\n        docs: docs,\n        check: createNodeStructureChecker(name, fields)\n    };\n}\n\nmodule.exports = {\n    getStructureFromConfig: function(config) {\n        var structure = {};\n\n        if (config.node) {\n            for (var name in config.node) {\n                if (hasOwnProperty.call(config.node, name)) {\n                    var nodeType = config.node[name];\n\n                    if (nodeType.structure) {\n                        structure[name] = processStructure(name, nodeType);\n                    } else {\n                        throw new Error('Missed `structure` field in `' + name + '` node type definition');\n                    }\n                }\n            }\n        }\n\n        return structure;\n    }\n};\n","var SyntaxReferenceError = require('./error').SyntaxReferenceError;\nvar MatchError = require('./error').MatchError;\nvar names = require('../utils/names');\nvar generic = require('./generic');\nvar parse = require('../definition-syntax/parse');\nvar generate = require('../definition-syntax/generate');\nvar walk = require('../definition-syntax/walk');\nvar prepareTokens = require('./prepare-tokens');\nvar buildMatchGraph = require('./match-graph').buildMatchGraph;\nvar matchAsTree = require('./match').matchAsTree;\nvar trace = require('./trace');\nvar search = require('./search');\nvar getStructureFromConfig = require('./structure').getStructureFromConfig;\nvar cssWideKeywords = buildMatchGraph('inherit | initial | unset');\nvar cssWideKeywordsWithExpression = buildMatchGraph('inherit | initial | unset | <-ms-legacy-expression>');\n\nfunction dumpMapSyntax(map, compact, syntaxAsAst) {\n    var result = {};\n\n    for (var name in map) {\n        if (map[name].syntax) {\n            result[name] = syntaxAsAst\n                ? map[name].syntax\n                : generate(map[name].syntax, { compact: compact });\n        }\n    }\n\n    return result;\n}\n\nfunction valueHasVar(tokens) {\n    for (var i = 0; i < tokens.length; i++) {\n        if (tokens[i].value.toLowerCase() === 'var(') {\n            return true;\n        }\n    }\n\n    return false;\n}\n\nfunction buildMatchResult(match, error, iterations) {\n    return {\n        matched: match,\n        iterations: iterations,\n        error: error,\n        getTrace: trace.getTrace,\n        isType: trace.isType,\n        isProperty: trace.isProperty,\n        isKeyword: trace.isKeyword\n    };\n}\n\nfunction matchSyntax(lexer, syntax, value, useCommon) {\n    var tokens = prepareTokens(value, lexer.syntax);\n    var result;\n\n    if (valueHasVar(tokens)) {\n        return buildMatchResult(null, new Error('Matching for a tree with var() is not supported'));\n    }\n\n    if (useCommon) {\n        result = matchAsTree(tokens, lexer.valueCommonSyntax, lexer);\n    }\n\n    if (!useCommon || !result.match) {\n        result = matchAsTree(tokens, syntax.match, lexer);\n        if (!result.match) {\n            return buildMatchResult(\n                null,\n                new MatchError(result.reason, syntax.syntax, value, result),\n                result.iterations\n            );\n        }\n    }\n\n    return buildMatchResult(result.match, null, result.iterations);\n}\n\nvar Lexer = function(config, syntax, structure) {\n    this.valueCommonSyntax = cssWideKeywords;\n    this.syntax = syntax;\n    this.generic = false;\n    this.atrules = {};\n    this.properties = {};\n    this.types = {};\n    this.structure = structure || getStructureFromConfig(config);\n\n    if (config) {\n        if (config.types) {\n            for (var name in config.types) {\n                this.addType_(name, config.types[name]);\n            }\n        }\n\n        if (config.generic) {\n            this.generic = true;\n            for (var name in generic) {\n                this.addType_(name, generic[name]);\n            }\n        }\n\n        if (config.atrules) {\n            for (var name in config.atrules) {\n                this.addAtrule_(name, config.atrules[name]);\n            }\n        }\n\n        if (config.properties) {\n            for (var name in config.properties) {\n                this.addProperty_(name, config.properties[name]);\n            }\n        }\n    }\n};\n\nLexer.prototype = {\n    structure: {},\n    checkStructure: function(ast) {\n        function collectWarning(node, message) {\n            warns.push({\n                node: node,\n                message: message\n            });\n        }\n\n        var structure = this.structure;\n        var warns = [];\n\n        this.syntax.walk(ast, function(node) {\n            if (structure.hasOwnProperty(node.type)) {\n                structure[node.type].check(node, collectWarning);\n            } else {\n                collectWarning(node, 'Unknown node type `' + node.type + '`');\n            }\n        });\n\n        return warns.length ? warns : false;\n    },\n\n    createDescriptor: function(syntax, type, name) {\n        var ref = {\n            type: type,\n            name: name\n        };\n        var descriptor = {\n            type: type,\n            name: name,\n            syntax: null,\n            match: null\n        };\n\n        if (typeof syntax === 'function') {\n            descriptor.match = buildMatchGraph(syntax, ref);\n        } else {\n            if (typeof syntax === 'string') {\n                // lazy parsing on first access\n                Object.defineProperty(descriptor, 'syntax', {\n                    get: function() {\n                        Object.defineProperty(descriptor, 'syntax', {\n                            value: parse(syntax)\n                        });\n\n                        return descriptor.syntax;\n                    }\n                });\n            } else {\n                descriptor.syntax = syntax;\n            }\n\n            // lazy graph build on first access\n            Object.defineProperty(descriptor, 'match', {\n                get: function() {\n                    Object.defineProperty(descriptor, 'match', {\n                        value: buildMatchGraph(descriptor.syntax, ref)\n                    });\n\n                    return descriptor.match;\n                }\n            });\n        }\n\n        return descriptor;\n    },\n    addAtrule_: function(name, syntax) {\n        this.atrules[name] = {\n            prelude: syntax.prelude ? this.createDescriptor(syntax.prelude, 'AtrulePrelude', name) : null,\n            descriptors: syntax.descriptors\n                ? Object.keys(syntax.descriptors).reduce((res, name) => {\n                    res[name] = this.createDescriptor(syntax.descriptors[name], 'AtruleDescriptor', name);\n                    return res;\n                }, {})\n                : null\n        };\n    },\n    addProperty_: function(name, syntax) {\n        this.properties[name] = this.createDescriptor(syntax, 'Property', name);\n    },\n    addType_: function(name, syntax) {\n        this.types[name] = this.createDescriptor(syntax, 'Type', name);\n\n        if (syntax === generic['-ms-legacy-expression']) {\n            this.valueCommonSyntax = cssWideKeywordsWithExpression;\n        }\n    },\n\n    matchAtrulePrelude: function(atruleName, prelude) {\n        var atrule = names.keyword(atruleName);\n\n        var atrulePreludeSyntax = atrule.vendor\n            ? this.getAtrulePrelude(atrule.name) || this.getAtrulePrelude(atrule.basename)\n            : this.getAtrulePrelude(atrule.name);\n\n        if (!atrulePreludeSyntax) {\n            if (atrule.basename in this.atrules) {\n                return buildMatchResult(null, new Error('At-rule `' + atruleName + '` should not contain a prelude'));\n            }\n\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule', atruleName));\n        }\n\n        return matchSyntax(this, atrulePreludeSyntax, prelude, true);\n    },\n    matchAtruleDescriptor: function(atruleName, descriptorName, value) {\n        var atrule = names.keyword(atruleName);\n        var descriptor = names.keyword(descriptorName);\n\n        var atruleEntry = atrule.vendor\n            ? this.atrules[atrule.name] || this.atrules[atrule.basename]\n            : this.atrules[atrule.name];\n\n        if (!atruleEntry) {\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule', atruleName));\n        }\n\n        if (!atruleEntry.descriptors) {\n            return buildMatchResult(null, new Error('At-rule `' + atruleName + '` has no known descriptors'));\n        }\n\n        var atruleDescriptorSyntax = descriptor.vendor\n            ? atruleEntry.descriptors[descriptor.name] || atruleEntry.descriptors[descriptor.basename]\n            : atruleEntry.descriptors[descriptor.name];\n\n        if (!atruleDescriptorSyntax) {\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown at-rule descriptor', descriptorName));\n        }\n\n        return matchSyntax(this, atruleDescriptorSyntax, value, true);\n    },\n    matchDeclaration: function(node) {\n        if (node.type !== 'Declaration') {\n            return buildMatchResult(null, new Error('Not a Declaration node'));\n        }\n\n        return this.matchProperty(node.property, node.value);\n    },\n    matchProperty: function(propertyName, value) {\n        var property = names.property(propertyName);\n\n        // don't match syntax for a custom property\n        if (property.custom) {\n            return buildMatchResult(null, new Error('Lexer matching doesn\\'t applicable for custom properties'));\n        }\n\n        var propertySyntax = property.vendor\n            ? this.getProperty(property.name) || this.getProperty(property.basename)\n            : this.getProperty(property.name);\n\n        if (!propertySyntax) {\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown property', propertyName));\n        }\n\n        return matchSyntax(this, propertySyntax, value, true);\n    },\n    matchType: function(typeName, value) {\n        var typeSyntax = this.getType(typeName);\n\n        if (!typeSyntax) {\n            return buildMatchResult(null, new SyntaxReferenceError('Unknown type', typeName));\n        }\n\n        return matchSyntax(this, typeSyntax, value, false);\n    },\n    match: function(syntax, value) {\n        if (typeof syntax !== 'string' && (!syntax || !syntax.type)) {\n            return buildMatchResult(null, new SyntaxReferenceError('Bad syntax'));\n        }\n\n        if (typeof syntax === 'string' || !syntax.match) {\n            syntax = this.createDescriptor(syntax, 'Type', 'anonymous');\n        }\n\n        return matchSyntax(this, syntax, value, false);\n    },\n\n    findValueFragments: function(propertyName, value, type, name) {\n        return search.matchFragments(this, value, this.matchProperty(propertyName, value), type, name);\n    },\n    findDeclarationValueFragments: function(declaration, type, name) {\n        return search.matchFragments(this, declaration.value, this.matchDeclaration(declaration), type, name);\n    },\n    findAllFragments: function(ast, type, name) {\n        var result = [];\n\n        this.syntax.walk(ast, {\n            visit: 'Declaration',\n            enter: function(declaration) {\n                result.push.apply(result, this.findDeclarationValueFragments(declaration, type, name));\n            }.bind(this)\n        });\n\n        return result;\n    },\n\n    getAtrulePrelude: function(atruleName) {\n        return this.atrules.hasOwnProperty(atruleName) ? this.atrules[atruleName].prelude : null;\n    },\n    getAtruleDescriptor: function(atruleName, name) {\n        return this.atrules.hasOwnProperty(atruleName) && this.atrules.declarators\n            ? this.atrules[atruleName].declarators[name] || null\n            : null;\n    },\n    getProperty: function(name) {\n        return this.properties.hasOwnProperty(name) ? this.properties[name] : null;\n    },\n    getType: function(name) {\n        return this.types.hasOwnProperty(name) ? this.types[name] : null;\n    },\n\n    validate: function() {\n        function validate(syntax, name, broken, descriptor) {\n            if (broken.hasOwnProperty(name)) {\n                return broken[name];\n            }\n\n            broken[name] = false;\n            if (descriptor.syntax !== null) {\n                walk(descriptor.syntax, function(node) {\n                    if (node.type !== 'Type' && node.type !== 'Property') {\n                        return;\n                    }\n\n                    var map = node.type === 'Type' ? syntax.types : syntax.properties;\n                    var brokenMap = node.type === 'Type' ? brokenTypes : brokenProperties;\n\n                    if (!map.hasOwnProperty(node.name) || validate(syntax, node.name, brokenMap, map[node.name])) {\n                        broken[name] = true;\n                    }\n                }, this);\n            }\n        }\n\n        var brokenTypes = {};\n        var brokenProperties = {};\n\n        for (var key in this.types) {\n            validate(this, key, brokenTypes, this.types[key]);\n        }\n\n        for (var key in this.properties) {\n            validate(this, key, brokenProperties, this.properties[key]);\n        }\n\n        brokenTypes = Object.keys(brokenTypes).filter(function(name) {\n            return brokenTypes[name];\n        });\n        brokenProperties = Object.keys(brokenProperties).filter(function(name) {\n            return brokenProperties[name];\n        });\n\n        if (brokenTypes.length || brokenProperties.length) {\n            return {\n                types: brokenTypes,\n                properties: brokenProperties\n            };\n        }\n\n        return null;\n    },\n    dump: function(syntaxAsAst, pretty) {\n        return {\n            generic: this.generic,\n            types: dumpMapSyntax(this.types, !pretty, syntaxAsAst),\n            properties: dumpMapSyntax(this.properties, !pretty, syntaxAsAst)\n        };\n    },\n    toString: function() {\n        return JSON.stringify(this.dump());\n    }\n};\n\nmodule.exports = Lexer;\n","module.exports = {\n    SyntaxError: require('./SyntaxError'),\n    parse: require('./parse'),\n    generate: require('./generate'),\n    walk: require('./walk')\n};\n","var adoptBuffer = require('./adopt-buffer');\nvar isBOM = require('../tokenizer').isBOM;\n\nvar N = 10;\nvar F = 12;\nvar R = 13;\n\nfunction computeLinesAndColumns(host, source) {\n    var sourceLength = source.length;\n    var lines = adoptBuffer(host.lines, sourceLength); // +1\n    var line = host.startLine;\n    var columns = adoptBuffer(host.columns, sourceLength);\n    var column = host.startColumn;\n    var startOffset = source.length > 0 ? isBOM(source.charCodeAt(0)) : 0;\n\n    for (var i = startOffset; i < sourceLength; i++) { // -1\n        var code = source.charCodeAt(i);\n\n        lines[i] = line;\n        columns[i] = column++;\n\n        if (code === N || code === R || code === F) {\n            if (code === R && i + 1 < sourceLength && source.charCodeAt(i + 1) === N) {\n                i++;\n                lines[i] = line;\n                columns[i] = column;\n            }\n\n            line++;\n            column = 1;\n        }\n    }\n\n    lines[i] = line;\n    columns[i] = column;\n\n    host.lines = lines;\n    host.columns = columns;\n}\n\nvar OffsetToLocation = function() {\n    this.lines = null;\n    this.columns = null;\n    this.linesAndColumnsComputed = false;\n};\n\nOffsetToLocation.prototype = {\n    setSource: function(source, startOffset, startLine, startColumn) {\n        this.source = source;\n        this.startOffset = typeof startOffset === 'undefined' ? 0 : startOffset;\n        this.startLine = typeof startLine === 'undefined' ? 1 : startLine;\n        this.startColumn = typeof startColumn === 'undefined' ? 1 : startColumn;\n        this.linesAndColumnsComputed = false;\n    },\n\n    ensureLinesAndColumnsComputed: function() {\n        if (!this.linesAndColumnsComputed) {\n            computeLinesAndColumns(this, this.source);\n            this.linesAndColumnsComputed = true;\n        }\n    },\n    getLocation: function(offset, filename) {\n        this.ensureLinesAndColumnsComputed();\n\n        return {\n            source: filename,\n            offset: this.startOffset + offset,\n            line: this.lines[offset],\n            column: this.columns[offset]\n        };\n    },\n    getLocationRange: function(start, end, filename) {\n        this.ensureLinesAndColumnsComputed();\n\n        return {\n            source: filename,\n            start: {\n                offset: this.startOffset + start,\n                line: this.lines[start],\n                column: this.columns[start]\n            },\n            end: {\n                offset: this.startOffset + end,\n                line: this.lines[end],\n                column: this.columns[end]\n            }\n        };\n    }\n};\n\nmodule.exports = OffsetToLocation;\n","var TYPE = require('../tokenizer').TYPE;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\n\nmodule.exports = function readSequence(recognizer) {\n    var children = this.createList();\n    var child = null;\n    var context = {\n        recognizer: recognizer,\n        space: null,\n        ignoreWS: false,\n        ignoreWSAfter: false\n    };\n\n    this.scanner.skipSC();\n\n    while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n            case COMMENT:\n                this.scanner.next();\n                continue;\n\n            case WHITESPACE:\n                if (context.ignoreWS) {\n                    this.scanner.next();\n                } else {\n                    context.space = this.WhiteSpace();\n                }\n                continue;\n        }\n\n        child = recognizer.getNode.call(this, context);\n\n        if (child === undefined) {\n            break;\n        }\n\n        if (context.space !== null) {\n            children.push(context.space);\n            context.space = null;\n        }\n\n        children.push(child);\n\n        if (context.ignoreWSAfter) {\n            context.ignoreWSAfter = false;\n            context.ignoreWS = true;\n        } else {\n            context.ignoreWS = false;\n        }\n    }\n\n    return children;\n};\n","var OffsetToLocation = require('../common/OffsetToLocation');\nvar SyntaxError = require('../common/SyntaxError');\nvar TokenStream = require('../common/TokenStream');\nvar List = require('../common/List');\nvar tokenize = require('../tokenizer');\nvar constants = require('../tokenizer/const');\nvar findWhiteSpaceStart = require('../tokenizer/utils').findWhiteSpaceStart;\nvar sequence = require('./sequence');\nvar noop = function() {};\n\nvar TYPE = constants.TYPE;\nvar NAME = constants.NAME;\nvar WHITESPACE = TYPE.WhiteSpace;\nvar IDENT = TYPE.Ident;\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar HASH = TYPE.Hash;\nvar PERCENTAGE = TYPE.Percentage;\nvar NUMBER = TYPE.Number;\nvar NUMBERSIGN = 0x0023; // U+0023 NUMBER SIGN (#)\nvar NULL = 0;\n\nfunction createParseContext(name) {\n    return function() {\n        return this[name]();\n    };\n}\n\nfunction processConfig(config) {\n    var parserConfig = {\n        context: {},\n        scope: {},\n        atrule: {},\n        pseudo: {}\n    };\n\n    if (config.parseContext) {\n        for (var name in config.parseContext) {\n            switch (typeof config.parseContext[name]) {\n                case 'function':\n                    parserConfig.context[name] = config.parseContext[name];\n                    break;\n\n                case 'string':\n                    parserConfig.context[name] = createParseContext(config.parseContext[name]);\n                    break;\n            }\n        }\n    }\n\n    if (config.scope) {\n        for (var name in config.scope) {\n            parserConfig.scope[name] = config.scope[name];\n        }\n    }\n\n    if (config.atrule) {\n        for (var name in config.atrule) {\n            var atrule = config.atrule[name];\n\n            if (atrule.parse) {\n                parserConfig.atrule[name] = atrule.parse;\n            }\n        }\n    }\n\n    if (config.pseudo) {\n        for (var name in config.pseudo) {\n            var pseudo = config.pseudo[name];\n\n            if (pseudo.parse) {\n                parserConfig.pseudo[name] = pseudo.parse;\n            }\n        }\n    }\n\n    if (config.node) {\n        for (var name in config.node) {\n            parserConfig[name] = config.node[name].parse;\n        }\n    }\n\n    return parserConfig;\n}\n\nmodule.exports = function createParser(config) {\n    var parser = {\n        scanner: new TokenStream(),\n        locationMap: new OffsetToLocation(),\n\n        filename: '<unknown>',\n        needPositions: false,\n        onParseError: noop,\n        onParseErrorThrow: false,\n        parseAtrulePrelude: true,\n        parseRulePrelude: true,\n        parseValue: true,\n        parseCustomProperty: false,\n\n        readSequence: sequence,\n\n        createList: function() {\n            return new List();\n        },\n        createSingleNodeList: function(node) {\n            return new List().appendData(node);\n        },\n        getFirstListNode: function(list) {\n            return list && list.first();\n        },\n        getLastListNode: function(list) {\n            return list.last();\n        },\n\n        parseWithFallback: function(consumer, fallback) {\n            var startToken = this.scanner.tokenIndex;\n\n            try {\n                return consumer.call(this);\n            } catch (e) {\n                if (this.onParseErrorThrow) {\n                    throw e;\n                }\n\n                var fallbackNode = fallback.call(this, startToken);\n\n                this.onParseErrorThrow = true;\n                this.onParseError(e, fallbackNode);\n                this.onParseErrorThrow = false;\n\n                return fallbackNode;\n            }\n        },\n\n        lookupNonWSType: function(offset) {\n            do {\n                var type = this.scanner.lookupType(offset++);\n                if (type !== WHITESPACE) {\n                    return type;\n                }\n            } while (type !== NULL);\n\n            return NULL;\n        },\n\n        eat: function(tokenType) {\n            if (this.scanner.tokenType !== tokenType) {\n                var offset = this.scanner.tokenStart;\n                var message = NAME[tokenType] + ' is expected';\n\n                // tweak message and offset\n                switch (tokenType) {\n                    case IDENT:\n                        // when identifier is expected but there is a function or url\n                        if (this.scanner.tokenType === FUNCTION || this.scanner.tokenType === URL) {\n                            offset = this.scanner.tokenEnd - 1;\n                            message = 'Identifier is expected but function found';\n                        } else {\n                            message = 'Identifier is expected';\n                        }\n                        break;\n\n                    case HASH:\n                        if (this.scanner.isDelim(NUMBERSIGN)) {\n                            this.scanner.next();\n                            offset++;\n                            message = 'Name is expected';\n                        }\n                        break;\n\n                    case PERCENTAGE:\n                        if (this.scanner.tokenType === NUMBER) {\n                            offset = this.scanner.tokenEnd;\n                            message = 'Percent sign is expected';\n                        }\n                        break;\n\n                    default:\n                        // when test type is part of another token show error for current position + 1\n                        // e.g. eat(HYPHENMINUS) will fail on \"-foo\", but pointing on \"-\" is odd\n                        if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === tokenType) {\n                            offset = offset + 1;\n                        }\n                }\n\n                this.error(message, offset);\n            }\n\n            this.scanner.next();\n        },\n\n        consume: function(tokenType) {\n            var value = this.scanner.getTokenValue();\n\n            this.eat(tokenType);\n\n            return value;\n        },\n        consumeFunctionName: function() {\n            var name = this.scanner.source.substring(this.scanner.tokenStart, this.scanner.tokenEnd - 1);\n\n            this.eat(FUNCTION);\n\n            return name;\n        },\n\n        getLocation: function(start, end) {\n            if (this.needPositions) {\n                return this.locationMap.getLocationRange(\n                    start,\n                    end,\n                    this.filename\n                );\n            }\n\n            return null;\n        },\n        getLocationFromList: function(list) {\n            if (this.needPositions) {\n                var head = this.getFirstListNode(list);\n                var tail = this.getLastListNode(list);\n                return this.locationMap.getLocationRange(\n                    head !== null ? head.loc.start.offset - this.locationMap.startOffset : this.scanner.tokenStart,\n                    tail !== null ? tail.loc.end.offset - this.locationMap.startOffset : this.scanner.tokenStart,\n                    this.filename\n                );\n            }\n\n            return null;\n        },\n\n        error: function(message, offset) {\n            var location = typeof offset !== 'undefined' && offset < this.scanner.source.length\n                ? this.locationMap.getLocation(offset)\n                : this.scanner.eof\n                    ? this.locationMap.getLocation(findWhiteSpaceStart(this.scanner.source, this.scanner.source.length - 1))\n                    : this.locationMap.getLocation(this.scanner.tokenStart);\n\n            throw new SyntaxError(\n                message || 'Unexpected input',\n                this.scanner.source,\n                location.offset,\n                location.line,\n                location.column\n            );\n        }\n    };\n\n    config = processConfig(config || {});\n    for (var key in config) {\n        parser[key] = config[key];\n    }\n\n    return function(source, options) {\n        options = options || {};\n\n        var context = options.context || 'default';\n        var ast;\n\n        tokenize(source, parser.scanner);\n        parser.locationMap.setSource(\n            source,\n            options.offset,\n            options.line,\n            options.column\n        );\n\n        parser.filename = options.filename || '<unknown>';\n        parser.needPositions = Boolean(options.positions);\n        parser.onParseError = typeof options.onParseError === 'function' ? options.onParseError : noop;\n        parser.onParseErrorThrow = false;\n        parser.parseAtrulePrelude = 'parseAtrulePrelude' in options ? Boolean(options.parseAtrulePrelude) : true;\n        parser.parseRulePrelude = 'parseRulePrelude' in options ? Boolean(options.parseRulePrelude) : true;\n        parser.parseValue = 'parseValue' in options ? Boolean(options.parseValue) : true;\n        parser.parseCustomProperty = 'parseCustomProperty' in options ? Boolean(options.parseCustomProperty) : false;\n\n        if (!parser.context.hasOwnProperty(context)) {\n            throw new Error('Unknown context `' + context + '`');\n        }\n\n        ast = parser.context[context].call(parser, options);\n\n        if (!parser.scanner.eof) {\n            parser.error();\n        }\n\n        return ast;\n    };\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar intToCharMap = 'ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/'.split('');\n\n/**\n * Encode an integer in the range of 0 to 63 to a single base 64 digit.\n */\nexports.encode = function (number) {\n  if (0 <= number && number < intToCharMap.length) {\n    return intToCharMap[number];\n  }\n  throw new TypeError(\"Must be between 0 and 63: \" + number);\n};\n\n/**\n * Decode a single base 64 character code digit to an integer. Returns -1 on\n * failure.\n */\nexports.decode = function (charCode) {\n  var bigA = 65;     // 'A'\n  var bigZ = 90;     // 'Z'\n\n  var littleA = 97;  // 'a'\n  var littleZ = 122; // 'z'\n\n  var zero = 48;     // '0'\n  var nine = 57;     // '9'\n\n  var plus = 43;     // '+'\n  var slash = 47;    // '/'\n\n  var littleOffset = 26;\n  var numberOffset = 52;\n\n  // 0 - 25: ABCDEFGHIJKLMNOPQRSTUVWXYZ\n  if (bigA <= charCode && charCode <= bigZ) {\n    return (charCode - bigA);\n  }\n\n  // 26 - 51: abcdefghijklmnopqrstuvwxyz\n  if (littleA <= charCode && charCode <= littleZ) {\n    return (charCode - littleA + littleOffset);\n  }\n\n  // 52 - 61: 0123456789\n  if (zero <= charCode && charCode <= nine) {\n    return (charCode - zero + numberOffset);\n  }\n\n  // 62: +\n  if (charCode == plus) {\n    return 62;\n  }\n\n  // 63: /\n  if (charCode == slash) {\n    return 63;\n  }\n\n  // Invalid base64 digit.\n  return -1;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n *\n * Based on the Base 64 VLQ implementation in Closure Compiler:\n * https://code.google.com/p/closure-compiler/source/browse/trunk/src/com/google/debugging/sourcemap/Base64VLQ.java\n *\n * Copyright 2011 The Closure Compiler Authors. All rights reserved.\n * Redistribution and use in source and binary forms, with or without\n * modification, are permitted provided that the following conditions are\n * met:\n *\n *  * Redistributions of source code must retain the above copyright\n *    notice, this list of conditions and the following disclaimer.\n *  * Redistributions in binary form must reproduce the above\n *    copyright notice, this list of conditions and the following\n *    disclaimer in the documentation and/or other materials provided\n *    with the distribution.\n *  * Neither the name of Google Inc. nor the names of its\n *    contributors may be used to endorse or promote products derived\n *    from this software without specific prior written permission.\n *\n * THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS\n * \"AS IS\" AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT\n * LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR\n * A PARTICULAR PURPOSE ARE DISCLAIMED. IN NO EVENT SHALL THE COPYRIGHT\n * OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL,\n * SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT\n * LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE,\n * DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY\n * THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT\n * (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE\n * OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.\n */\n\nvar base64 = require('./base64');\n\n// A single base 64 digit can contain 6 bits of data. For the base 64 variable\n// length quantities we use in the source map spec, the first bit is the sign,\n// the next four bits are the actual value, and the 6th bit is the\n// continuation bit. The continuation bit tells us whether there are more\n// digits in this value following this digit.\n//\n//   Continuation\n//   |    Sign\n//   |    |\n//   V    V\n//   101011\n\nvar VLQ_BASE_SHIFT = 5;\n\n// binary: 100000\nvar VLQ_BASE = 1 << VLQ_BASE_SHIFT;\n\n// binary: 011111\nvar VLQ_BASE_MASK = VLQ_BASE - 1;\n\n// binary: 100000\nvar VLQ_CONTINUATION_BIT = VLQ_BASE;\n\n/**\n * Converts from a two-complement value to a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   1 becomes 2 (10 binary), -1 becomes 3 (11 binary)\n *   2 becomes 4 (100 binary), -2 becomes 5 (101 binary)\n */\nfunction toVLQSigned(aValue) {\n  return aValue < 0\n    ? ((-aValue) << 1) + 1\n    : (aValue << 1) + 0;\n}\n\n/**\n * Converts to a two-complement value from a value where the sign bit is\n * placed in the least significant bit.  For example, as decimals:\n *   2 (10 binary) becomes 1, 3 (11 binary) becomes -1\n *   4 (100 binary) becomes 2, 5 (101 binary) becomes -2\n */\nfunction fromVLQSigned(aValue) {\n  var isNegative = (aValue & 1) === 1;\n  var shifted = aValue >> 1;\n  return isNegative\n    ? -shifted\n    : shifted;\n}\n\n/**\n * Returns the base 64 VLQ encoded value.\n */\nexports.encode = function base64VLQ_encode(aValue) {\n  var encoded = \"\";\n  var digit;\n\n  var vlq = toVLQSigned(aValue);\n\n  do {\n    digit = vlq & VLQ_BASE_MASK;\n    vlq >>>= VLQ_BASE_SHIFT;\n    if (vlq > 0) {\n      // There are still more digits in this value, so we must make sure the\n      // continuation bit is marked.\n      digit |= VLQ_CONTINUATION_BIT;\n    }\n    encoded += base64.encode(digit);\n  } while (vlq > 0);\n\n  return encoded;\n};\n\n/**\n * Decodes the next base 64 VLQ value from the given string and returns the\n * value and the rest of the string via the out parameter.\n */\nexports.decode = function base64VLQ_decode(aStr, aIndex, aOutParam) {\n  var strLen = aStr.length;\n  var result = 0;\n  var shift = 0;\n  var continuation, digit;\n\n  do {\n    if (aIndex >= strLen) {\n      throw new Error(\"Expected more digits in base 64 VLQ value.\");\n    }\n\n    digit = base64.decode(aStr.charCodeAt(aIndex++));\n    if (digit === -1) {\n      throw new Error(\"Invalid base64 digit: \" + aStr.charAt(aIndex - 1));\n    }\n\n    continuation = !!(digit & VLQ_CONTINUATION_BIT);\n    digit &= VLQ_BASE_MASK;\n    result = result + (digit << shift);\n    shift += VLQ_BASE_SHIFT;\n  } while (continuation);\n\n  aOutParam.value = fromVLQSigned(result);\n  aOutParam.rest = aIndex;\n};\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\n/**\n * This is a helper function for getting values from parameter/options\n * objects.\n *\n * @param args The object we are extracting values from\n * @param name The name of the property we are getting.\n * @param defaultValue An optional value to return if the property is missing\n * from the object. If this is not specified and the property is missing, an\n * error will be thrown.\n */\nfunction getArg(aArgs, aName, aDefaultValue) {\n  if (aName in aArgs) {\n    return aArgs[aName];\n  } else if (arguments.length === 3) {\n    return aDefaultValue;\n  } else {\n    throw new Error('\"' + aName + '\" is a required argument.');\n  }\n}\nexports.getArg = getArg;\n\nvar urlRegexp = /^(?:([\\w+\\-.]+):)?\\/\\/(?:(\\w+:\\w+)@)?([\\w.-]*)(?::(\\d+))?(.*)$/;\nvar dataUrlRegexp = /^data:.+\\,.+$/;\n\nfunction urlParse(aUrl) {\n  var match = aUrl.match(urlRegexp);\n  if (!match) {\n    return null;\n  }\n  return {\n    scheme: match[1],\n    auth: match[2],\n    host: match[3],\n    port: match[4],\n    path: match[5]\n  };\n}\nexports.urlParse = urlParse;\n\nfunction urlGenerate(aParsedUrl) {\n  var url = '';\n  if (aParsedUrl.scheme) {\n    url += aParsedUrl.scheme + ':';\n  }\n  url += '//';\n  if (aParsedUrl.auth) {\n    url += aParsedUrl.auth + '@';\n  }\n  if (aParsedUrl.host) {\n    url += aParsedUrl.host;\n  }\n  if (aParsedUrl.port) {\n    url += \":\" + aParsedUrl.port\n  }\n  if (aParsedUrl.path) {\n    url += aParsedUrl.path;\n  }\n  return url;\n}\nexports.urlGenerate = urlGenerate;\n\n/**\n * Normalizes a path, or the path portion of a URL:\n *\n * - Replaces consecutive slashes with one slash.\n * - Removes unnecessary '.' parts.\n * - Removes unnecessary '<dir>/..' parts.\n *\n * Based on code in the Node.js 'path' core module.\n *\n * @param aPath The path or url to normalize.\n */\nfunction normalize(aPath) {\n  var path = aPath;\n  var url = urlParse(aPath);\n  if (url) {\n    if (!url.path) {\n      return aPath;\n    }\n    path = url.path;\n  }\n  var isAbsolute = exports.isAbsolute(path);\n\n  var parts = path.split(/\\/+/);\n  for (var part, up = 0, i = parts.length - 1; i >= 0; i--) {\n    part = parts[i];\n    if (part === '.') {\n      parts.splice(i, 1);\n    } else if (part === '..') {\n      up++;\n    } else if (up > 0) {\n      if (part === '') {\n        // The first part is blank if the path is absolute. Trying to go\n        // above the root is a no-op. Therefore we can remove all '..' parts\n        // directly after the root.\n        parts.splice(i + 1, up);\n        up = 0;\n      } else {\n        parts.splice(i, 2);\n        up--;\n      }\n    }\n  }\n  path = parts.join('/');\n\n  if (path === '') {\n    path = isAbsolute ? '/' : '.';\n  }\n\n  if (url) {\n    url.path = path;\n    return urlGenerate(url);\n  }\n  return path;\n}\nexports.normalize = normalize;\n\n/**\n * Joins two paths/URLs.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be joined with the root.\n *\n * - If aPath is a URL or a data URI, aPath is returned, unless aPath is a\n *   scheme-relative URL: Then the scheme of aRoot, if any, is prepended\n *   first.\n * - Otherwise aPath is a path. If aRoot is a URL, then its path portion\n *   is updated with the result and aRoot is returned. Otherwise the result\n *   is returned.\n *   - If aPath is absolute, the result is aPath.\n *   - Otherwise the two paths are joined with a slash.\n * - Joining for example 'http://' and 'www.example.com' is also supported.\n */\nfunction join(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n  if (aPath === \"\") {\n    aPath = \".\";\n  }\n  var aPathUrl = urlParse(aPath);\n  var aRootUrl = urlParse(aRoot);\n  if (aRootUrl) {\n    aRoot = aRootUrl.path || '/';\n  }\n\n  // `join(foo, '//www.example.org')`\n  if (aPathUrl && !aPathUrl.scheme) {\n    if (aRootUrl) {\n      aPathUrl.scheme = aRootUrl.scheme;\n    }\n    return urlGenerate(aPathUrl);\n  }\n\n  if (aPathUrl || aPath.match(dataUrlRegexp)) {\n    return aPath;\n  }\n\n  // `join('http://', 'www.example.com')`\n  if (aRootUrl && !aRootUrl.host && !aRootUrl.path) {\n    aRootUrl.host = aPath;\n    return urlGenerate(aRootUrl);\n  }\n\n  var joined = aPath.charAt(0) === '/'\n    ? aPath\n    : normalize(aRoot.replace(/\\/+$/, '') + '/' + aPath);\n\n  if (aRootUrl) {\n    aRootUrl.path = joined;\n    return urlGenerate(aRootUrl);\n  }\n  return joined;\n}\nexports.join = join;\n\nexports.isAbsolute = function (aPath) {\n  return aPath.charAt(0) === '/' || urlRegexp.test(aPath);\n};\n\n/**\n * Make a path relative to a URL or another path.\n *\n * @param aRoot The root path or URL.\n * @param aPath The path or URL to be made relative to aRoot.\n */\nfunction relative(aRoot, aPath) {\n  if (aRoot === \"\") {\n    aRoot = \".\";\n  }\n\n  aRoot = aRoot.replace(/\\/$/, '');\n\n  // It is possible for the path to be above the root. In this case, simply\n  // checking whether the root is a prefix of the path won't work. Instead, we\n  // need to remove components from the root one by one, until either we find\n  // a prefix that fits, or we run out of components to remove.\n  var level = 0;\n  while (aPath.indexOf(aRoot + '/') !== 0) {\n    var index = aRoot.lastIndexOf(\"/\");\n    if (index < 0) {\n      return aPath;\n    }\n\n    // If the only part of the root that is left is the scheme (i.e. http://,\n    // file:///, etc.), one or more slashes (/), or simply nothing at all, we\n    // have exhausted all components, so the path is not relative to the root.\n    aRoot = aRoot.slice(0, index);\n    if (aRoot.match(/^([^\\/]+:\\/)?\\/*$/)) {\n      return aPath;\n    }\n\n    ++level;\n  }\n\n  // Make sure we add a \"../\" for each component we removed from the root.\n  return Array(level + 1).join(\"../\") + aPath.substr(aRoot.length + 1);\n}\nexports.relative = relative;\n\nvar supportsNullProto = (function () {\n  var obj = Object.create(null);\n  return !('__proto__' in obj);\n}());\n\nfunction identity (s) {\n  return s;\n}\n\n/**\n * Because behavior goes wacky when you set `__proto__` on objects, we\n * have to prefix all the strings in our set with an arbitrary character.\n *\n * See https://github.com/mozilla/source-map/pull/31 and\n * https://github.com/mozilla/source-map/issues/30\n *\n * @param String aStr\n */\nfunction toSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return '$' + aStr;\n  }\n\n  return aStr;\n}\nexports.toSetString = supportsNullProto ? identity : toSetString;\n\nfunction fromSetString(aStr) {\n  if (isProtoString(aStr)) {\n    return aStr.slice(1);\n  }\n\n  return aStr;\n}\nexports.fromSetString = supportsNullProto ? identity : fromSetString;\n\nfunction isProtoString(s) {\n  if (!s) {\n    return false;\n  }\n\n  var length = s.length;\n\n  if (length < 9 /* \"__proto__\".length */) {\n    return false;\n  }\n\n  if (s.charCodeAt(length - 1) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 2) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 3) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 4) !== 116 /* 't' */ ||\n      s.charCodeAt(length - 5) !== 111 /* 'o' */ ||\n      s.charCodeAt(length - 6) !== 114 /* 'r' */ ||\n      s.charCodeAt(length - 7) !== 112 /* 'p' */ ||\n      s.charCodeAt(length - 8) !== 95  /* '_' */ ||\n      s.charCodeAt(length - 9) !== 95  /* '_' */) {\n    return false;\n  }\n\n  for (var i = length - 10; i >= 0; i--) {\n    if (s.charCodeAt(i) !== 36 /* '$' */) {\n      return false;\n    }\n  }\n\n  return true;\n}\n\n/**\n * Comparator between two mappings where the original positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same original source/line/column, but different generated\n * line and column the same. Useful when searching for a mapping with a\n * stubbed out mapping.\n */\nfunction compareByOriginalPositions(mappingA, mappingB, onlyCompareOriginal) {\n  var cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0 || onlyCompareOriginal) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByOriginalPositions = compareByOriginalPositions;\n\n/**\n * Comparator between two mappings with deflated source and name indices where\n * the generated positions are compared.\n *\n * Optionally pass in `true` as `onlyCompareGenerated` to consider two\n * mappings with the same generated line and column, but different\n * source/name/original line and column the same. Useful when searching for a\n * mapping with a stubbed out mapping.\n */\nfunction compareByGeneratedPositionsDeflated(mappingA, mappingB, onlyCompareGenerated) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0 || onlyCompareGenerated) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsDeflated = compareByGeneratedPositionsDeflated;\n\nfunction strcmp(aStr1, aStr2) {\n  if (aStr1 === aStr2) {\n    return 0;\n  }\n\n  if (aStr1 === null) {\n    return 1; // aStr2 !== null\n  }\n\n  if (aStr2 === null) {\n    return -1; // aStr1 !== null\n  }\n\n  if (aStr1 > aStr2) {\n    return 1;\n  }\n\n  return -1;\n}\n\n/**\n * Comparator between two mappings with inflated source and name strings where\n * the generated positions are compared.\n */\nfunction compareByGeneratedPositionsInflated(mappingA, mappingB) {\n  var cmp = mappingA.generatedLine - mappingB.generatedLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.generatedColumn - mappingB.generatedColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = strcmp(mappingA.source, mappingB.source);\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalLine - mappingB.originalLine;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  cmp = mappingA.originalColumn - mappingB.originalColumn;\n  if (cmp !== 0) {\n    return cmp;\n  }\n\n  return strcmp(mappingA.name, mappingB.name);\n}\nexports.compareByGeneratedPositionsInflated = compareByGeneratedPositionsInflated;\n\n/**\n * Strip any JSON XSSI avoidance prefix from the string (as documented\n * in the source maps specification), and then parse the string as\n * JSON.\n */\nfunction parseSourceMapInput(str) {\n  return JSON.parse(str.replace(/^\\)]}'[^\\n]*\\n/, ''));\n}\nexports.parseSourceMapInput = parseSourceMapInput;\n\n/**\n * Compute the URL of a source given the the source root, the source's\n * URL, and the source map's URL.\n */\nfunction computeSourceURL(sourceRoot, sourceURL, sourceMapURL) {\n  sourceURL = sourceURL || '';\n\n  if (sourceRoot) {\n    // This follows what Chrome does.\n    if (sourceRoot[sourceRoot.length - 1] !== '/' && sourceURL[0] !== '/') {\n      sourceRoot += '/';\n    }\n    // The spec says:\n    //   Line 4: An optional source root, useful for relocating source\n    //   files on a server or removing repeated values in the\n    //   “sources” entry.  This value is prepended to the individual\n    //   entries in the “source” field.\n    sourceURL = sourceRoot + sourceURL;\n  }\n\n  // Historically, SourceMapConsumer did not take the sourceMapURL as\n  // a parameter.  This mode is still somewhat supported, which is why\n  // this code block is conditional.  However, it's preferable to pass\n  // the source map URL to SourceMapConsumer, so that this function\n  // can implement the source URL resolution algorithm as outlined in\n  // the spec.  This block is basically the equivalent of:\n  //    new URL(sourceURL, sourceMapURL).toString()\n  // ... except it avoids using URL, which wasn't available in the\n  // older releases of node still supported by this library.\n  //\n  // The spec says:\n  //   If the sources are not absolute URLs after prepending of the\n  //   “sourceRoot”, the sources are resolved relative to the\n  //   SourceMap (like resolving script src in a html document).\n  if (sourceMapURL) {\n    var parsed = urlParse(sourceMapURL);\n    if (!parsed) {\n      throw new Error(\"sourceMapURL could not be parsed\");\n    }\n    if (parsed.path) {\n      // Strip the last path component, but keep the \"/\".\n      var index = parsed.path.lastIndexOf('/');\n      if (index >= 0) {\n        parsed.path = parsed.path.substring(0, index + 1);\n      }\n    }\n    sourceURL = join(urlGenerate(parsed), sourceURL);\n  }\n\n  return normalize(sourceURL);\n}\nexports.computeSourceURL = computeSourceURL;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\nvar has = Object.prototype.hasOwnProperty;\nvar hasNativeMap = typeof Map !== \"undefined\";\n\n/**\n * A data structure which is a combination of an array and a set. Adding a new\n * member is O(1), testing for membership is O(1), and finding the index of an\n * element is O(1). Removing elements from the set is not supported. Only\n * strings are supported for membership.\n */\nfunction ArraySet() {\n  this._array = [];\n  this._set = hasNativeMap ? new Map() : Object.create(null);\n}\n\n/**\n * Static method for creating ArraySet instances from an existing array.\n */\nArraySet.fromArray = function ArraySet_fromArray(aArray, aAllowDuplicates) {\n  var set = new ArraySet();\n  for (var i = 0, len = aArray.length; i < len; i++) {\n    set.add(aArray[i], aAllowDuplicates);\n  }\n  return set;\n};\n\n/**\n * Return how many unique items are in this ArraySet. If duplicates have been\n * added, than those do not count towards the size.\n *\n * @returns Number\n */\nArraySet.prototype.size = function ArraySet_size() {\n  return hasNativeMap ? this._set.size : Object.getOwnPropertyNames(this._set).length;\n};\n\n/**\n * Add the given string to this set.\n *\n * @param String aStr\n */\nArraySet.prototype.add = function ArraySet_add(aStr, aAllowDuplicates) {\n  var sStr = hasNativeMap ? aStr : util.toSetString(aStr);\n  var isDuplicate = hasNativeMap ? this.has(aStr) : has.call(this._set, sStr);\n  var idx = this._array.length;\n  if (!isDuplicate || aAllowDuplicates) {\n    this._array.push(aStr);\n  }\n  if (!isDuplicate) {\n    if (hasNativeMap) {\n      this._set.set(aStr, idx);\n    } else {\n      this._set[sStr] = idx;\n    }\n  }\n};\n\n/**\n * Is the given string a member of this set?\n *\n * @param String aStr\n */\nArraySet.prototype.has = function ArraySet_has(aStr) {\n  if (hasNativeMap) {\n    return this._set.has(aStr);\n  } else {\n    var sStr = util.toSetString(aStr);\n    return has.call(this._set, sStr);\n  }\n};\n\n/**\n * What is the index of the given string in the array?\n *\n * @param String aStr\n */\nArraySet.prototype.indexOf = function ArraySet_indexOf(aStr) {\n  if (hasNativeMap) {\n    var idx = this._set.get(aStr);\n    if (idx >= 0) {\n        return idx;\n    }\n  } else {\n    var sStr = util.toSetString(aStr);\n    if (has.call(this._set, sStr)) {\n      return this._set[sStr];\n    }\n  }\n\n  throw new Error('\"' + aStr + '\" is not in the set.');\n};\n\n/**\n * What is the element at the given index?\n *\n * @param Number aIdx\n */\nArraySet.prototype.at = function ArraySet_at(aIdx) {\n  if (aIdx >= 0 && aIdx < this._array.length) {\n    return this._array[aIdx];\n  }\n  throw new Error('No element indexed by ' + aIdx);\n};\n\n/**\n * Returns the array representation of this set (which has the proper indices\n * indicated by indexOf). Note that this is a copy of the internal array used\n * for storing the members so that no one can mess with internal state.\n */\nArraySet.prototype.toArray = function ArraySet_toArray() {\n  return this._array.slice();\n};\n\nexports.ArraySet = ArraySet;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2014 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar util = require('./util');\n\n/**\n * Determine whether mappingB is after mappingA with respect to generated\n * position.\n */\nfunction generatedPositionAfter(mappingA, mappingB) {\n  // Optimized for most common case\n  var lineA = mappingA.generatedLine;\n  var lineB = mappingB.generatedLine;\n  var columnA = mappingA.generatedColumn;\n  var columnB = mappingB.generatedColumn;\n  return lineB > lineA || lineB == lineA && columnB >= columnA ||\n         util.compareByGeneratedPositionsInflated(mappingA, mappingB) <= 0;\n}\n\n/**\n * A data structure to provide a sorted view of accumulated mappings in a\n * performance conscious manner. It trades a neglibable overhead in general\n * case for a large speedup in case of mappings being added in order.\n */\nfunction MappingList() {\n  this._array = [];\n  this._sorted = true;\n  // Serves as infimum\n  this._last = {generatedLine: -1, generatedColumn: 0};\n}\n\n/**\n * Iterate through internal items. This method takes the same arguments that\n * `Array.prototype.forEach` takes.\n *\n * NOTE: The order of the mappings is NOT guaranteed.\n */\nMappingList.prototype.unsortedForEach =\n  function MappingList_forEach(aCallback, aThisArg) {\n    this._array.forEach(aCallback, aThisArg);\n  };\n\n/**\n * Add the given source mapping.\n *\n * @param Object aMapping\n */\nMappingList.prototype.add = function MappingList_add(aMapping) {\n  if (generatedPositionAfter(this._last, aMapping)) {\n    this._last = aMapping;\n    this._array.push(aMapping);\n  } else {\n    this._sorted = false;\n    this._array.push(aMapping);\n  }\n};\n\n/**\n * Returns the flat, sorted array of mappings. The mappings are sorted by\n * generated position.\n *\n * WARNING: This method returns internal data without copying, for\n * performance. The return value must NOT be mutated, and should be treated as\n * an immutable borrow. If you want to take ownership, you must make your own\n * copy.\n */\nMappingList.prototype.toArray = function MappingList_toArray() {\n  if (!this._sorted) {\n    this._array.sort(util.compareByGeneratedPositionsInflated);\n    this._sorted = true;\n  }\n  return this._array;\n};\n\nexports.MappingList = MappingList;\n","/* -*- Mode: js; js-indent-level: 2; -*- */\n/*\n * Copyright 2011 Mozilla Foundation and contributors\n * Licensed under the New BSD license. See LICENSE or:\n * http://opensource.org/licenses/BSD-3-Clause\n */\n\nvar base64VLQ = require('./base64-vlq');\nvar util = require('./util');\nvar ArraySet = require('./array-set').ArraySet;\nvar MappingList = require('./mapping-list').MappingList;\n\n/**\n * An instance of the SourceMapGenerator represents a source map which is\n * being built incrementally. You may pass an object with the following\n * properties:\n *\n *   - file: The filename of the generated source.\n *   - sourceRoot: A root for all relative URLs in this source map.\n */\nfunction SourceMapGenerator(aArgs) {\n  if (!aArgs) {\n    aArgs = {};\n  }\n  this._file = util.getArg(aArgs, 'file', null);\n  this._sourceRoot = util.getArg(aArgs, 'sourceRoot', null);\n  this._skipValidation = util.getArg(aArgs, 'skipValidation', false);\n  this._sources = new ArraySet();\n  this._names = new ArraySet();\n  this._mappings = new MappingList();\n  this._sourcesContents = null;\n}\n\nSourceMapGenerator.prototype._version = 3;\n\n/**\n * Creates a new SourceMapGenerator based on a SourceMapConsumer\n *\n * @param aSourceMapConsumer The SourceMap.\n */\nSourceMapGenerator.fromSourceMap =\n  function SourceMapGenerator_fromSourceMap(aSourceMapConsumer) {\n    var sourceRoot = aSourceMapConsumer.sourceRoot;\n    var generator = new SourceMapGenerator({\n      file: aSourceMapConsumer.file,\n      sourceRoot: sourceRoot\n    });\n    aSourceMapConsumer.eachMapping(function (mapping) {\n      var newMapping = {\n        generated: {\n          line: mapping.generatedLine,\n          column: mapping.generatedColumn\n        }\n      };\n\n      if (mapping.source != null) {\n        newMapping.source = mapping.source;\n        if (sourceRoot != null) {\n          newMapping.source = util.relative(sourceRoot, newMapping.source);\n        }\n\n        newMapping.original = {\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        };\n\n        if (mapping.name != null) {\n          newMapping.name = mapping.name;\n        }\n      }\n\n      generator.addMapping(newMapping);\n    });\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var sourceRelative = sourceFile;\n      if (sourceRoot !== null) {\n        sourceRelative = util.relative(sourceRoot, sourceFile);\n      }\n\n      if (!generator._sources.has(sourceRelative)) {\n        generator._sources.add(sourceRelative);\n      }\n\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        generator.setSourceContent(sourceFile, content);\n      }\n    });\n    return generator;\n  };\n\n/**\n * Add a single mapping from original source line and column to the generated\n * source's line and column for this source map being created. The mapping\n * object should have the following properties:\n *\n *   - generated: An object with the generated line and column positions.\n *   - original: An object with the original line and column positions.\n *   - source: The original source file (relative to the sourceRoot).\n *   - name: An optional original token name for this mapping.\n */\nSourceMapGenerator.prototype.addMapping =\n  function SourceMapGenerator_addMapping(aArgs) {\n    var generated = util.getArg(aArgs, 'generated');\n    var original = util.getArg(aArgs, 'original', null);\n    var source = util.getArg(aArgs, 'source', null);\n    var name = util.getArg(aArgs, 'name', null);\n\n    if (!this._skipValidation) {\n      this._validateMapping(generated, original, source, name);\n    }\n\n    if (source != null) {\n      source = String(source);\n      if (!this._sources.has(source)) {\n        this._sources.add(source);\n      }\n    }\n\n    if (name != null) {\n      name = String(name);\n      if (!this._names.has(name)) {\n        this._names.add(name);\n      }\n    }\n\n    this._mappings.add({\n      generatedLine: generated.line,\n      generatedColumn: generated.column,\n      originalLine: original != null && original.line,\n      originalColumn: original != null && original.column,\n      source: source,\n      name: name\n    });\n  };\n\n/**\n * Set the source content for a source file.\n */\nSourceMapGenerator.prototype.setSourceContent =\n  function SourceMapGenerator_setSourceContent(aSourceFile, aSourceContent) {\n    var source = aSourceFile;\n    if (this._sourceRoot != null) {\n      source = util.relative(this._sourceRoot, source);\n    }\n\n    if (aSourceContent != null) {\n      // Add the source content to the _sourcesContents map.\n      // Create a new _sourcesContents map if the property is null.\n      if (!this._sourcesContents) {\n        this._sourcesContents = Object.create(null);\n      }\n      this._sourcesContents[util.toSetString(source)] = aSourceContent;\n    } else if (this._sourcesContents) {\n      // Remove the source file from the _sourcesContents map.\n      // If the _sourcesContents map is empty, set the property to null.\n      delete this._sourcesContents[util.toSetString(source)];\n      if (Object.keys(this._sourcesContents).length === 0) {\n        this._sourcesContents = null;\n      }\n    }\n  };\n\n/**\n * Applies the mappings of a sub-source-map for a specific source file to the\n * source map being generated. Each mapping to the supplied source file is\n * rewritten using the supplied source map. Note: The resolution for the\n * resulting mappings is the minimium of this map and the supplied map.\n *\n * @param aSourceMapConsumer The source map to be applied.\n * @param aSourceFile Optional. The filename of the source file.\n *        If omitted, SourceMapConsumer's file property will be used.\n * @param aSourceMapPath Optional. The dirname of the path to the source map\n *        to be applied. If relative, it is relative to the SourceMapConsumer.\n *        This parameter is needed when the two source maps aren't in the same\n *        directory, and the source map to be applied contains relative source\n *        paths. If so, those relative source paths need to be rewritten\n *        relative to the SourceMapGenerator.\n */\nSourceMapGenerator.prototype.applySourceMap =\n  function SourceMapGenerator_applySourceMap(aSourceMapConsumer, aSourceFile, aSourceMapPath) {\n    var sourceFile = aSourceFile;\n    // If aSourceFile is omitted, we will use the file property of the SourceMap\n    if (aSourceFile == null) {\n      if (aSourceMapConsumer.file == null) {\n        throw new Error(\n          'SourceMapGenerator.prototype.applySourceMap requires either an explicit source file, ' +\n          'or the source map\\'s \"file\" property. Both were omitted.'\n        );\n      }\n      sourceFile = aSourceMapConsumer.file;\n    }\n    var sourceRoot = this._sourceRoot;\n    // Make \"sourceFile\" relative if an absolute Url is passed.\n    if (sourceRoot != null) {\n      sourceFile = util.relative(sourceRoot, sourceFile);\n    }\n    // Applying the SourceMap can add and remove items from the sources and\n    // the names array.\n    var newSources = new ArraySet();\n    var newNames = new ArraySet();\n\n    // Find mappings for the \"sourceFile\"\n    this._mappings.unsortedForEach(function (mapping) {\n      if (mapping.source === sourceFile && mapping.originalLine != null) {\n        // Check if it can be mapped by the source map, then update the mapping.\n        var original = aSourceMapConsumer.originalPositionFor({\n          line: mapping.originalLine,\n          column: mapping.originalColumn\n        });\n        if (original.source != null) {\n          // Copy mapping\n          mapping.source = original.source;\n          if (aSourceMapPath != null) {\n            mapping.source = util.join(aSourceMapPath, mapping.source)\n          }\n          if (sourceRoot != null) {\n            mapping.source = util.relative(sourceRoot, mapping.source);\n          }\n          mapping.originalLine = original.line;\n          mapping.originalColumn = original.column;\n          if (original.name != null) {\n            mapping.name = original.name;\n          }\n        }\n      }\n\n      var source = mapping.source;\n      if (source != null && !newSources.has(source)) {\n        newSources.add(source);\n      }\n\n      var name = mapping.name;\n      if (name != null && !newNames.has(name)) {\n        newNames.add(name);\n      }\n\n    }, this);\n    this._sources = newSources;\n    this._names = newNames;\n\n    // Copy sourcesContents of applied map.\n    aSourceMapConsumer.sources.forEach(function (sourceFile) {\n      var content = aSourceMapConsumer.sourceContentFor(sourceFile);\n      if (content != null) {\n        if (aSourceMapPath != null) {\n          sourceFile = util.join(aSourceMapPath, sourceFile);\n        }\n        if (sourceRoot != null) {\n          sourceFile = util.relative(sourceRoot, sourceFile);\n        }\n        this.setSourceContent(sourceFile, content);\n      }\n    }, this);\n  };\n\n/**\n * A mapping can have one of the three levels of data:\n *\n *   1. Just the generated position.\n *   2. The Generated position, original position, and original source.\n *   3. Generated and original position, original source, as well as a name\n *      token.\n *\n * To maintain consistency, we validate that any new mapping being added falls\n * in to one of these categories.\n */\nSourceMapGenerator.prototype._validateMapping =\n  function SourceMapGenerator_validateMapping(aGenerated, aOriginal, aSource,\n                                              aName) {\n    // When aOriginal is truthy but has empty values for .line and .column,\n    // it is most likely a programmer error. In this case we throw a very\n    // specific error message to try to guide them the right way.\n    // For example: https://github.com/Polymer/polymer-bundler/pull/519\n    if (aOriginal && typeof aOriginal.line !== 'number' && typeof aOriginal.column !== 'number') {\n        throw new Error(\n            'original.line and original.column are not numbers -- you probably meant to omit ' +\n            'the original mapping entirely and only map the generated position. If so, pass ' +\n            'null for the original mapping instead of an object with empty or null values.'\n        );\n    }\n\n    if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n        && aGenerated.line > 0 && aGenerated.column >= 0\n        && !aOriginal && !aSource && !aName) {\n      // Case 1.\n      return;\n    }\n    else if (aGenerated && 'line' in aGenerated && 'column' in aGenerated\n             && aOriginal && 'line' in aOriginal && 'column' in aOriginal\n             && aGenerated.line > 0 && aGenerated.column >= 0\n             && aOriginal.line > 0 && aOriginal.column >= 0\n             && aSource) {\n      // Cases 2 and 3.\n      return;\n    }\n    else {\n      throw new Error('Invalid mapping: ' + JSON.stringify({\n        generated: aGenerated,\n        source: aSource,\n        original: aOriginal,\n        name: aName\n      }));\n    }\n  };\n\n/**\n * Serialize the accumulated mappings in to the stream of base 64 VLQs\n * specified by the source map format.\n */\nSourceMapGenerator.prototype._serializeMappings =\n  function SourceMapGenerator_serializeMappings() {\n    var previousGeneratedColumn = 0;\n    var previousGeneratedLine = 1;\n    var previousOriginalColumn = 0;\n    var previousOriginalLine = 0;\n    var previousName = 0;\n    var previousSource = 0;\n    var result = '';\n    var next;\n    var mapping;\n    var nameIdx;\n    var sourceIdx;\n\n    var mappings = this._mappings.toArray();\n    for (var i = 0, len = mappings.length; i < len; i++) {\n      mapping = mappings[i];\n      next = ''\n\n      if (mapping.generatedLine !== previousGeneratedLine) {\n        previousGeneratedColumn = 0;\n        while (mapping.generatedLine !== previousGeneratedLine) {\n          next += ';';\n          previousGeneratedLine++;\n        }\n      }\n      else {\n        if (i > 0) {\n          if (!util.compareByGeneratedPositionsInflated(mapping, mappings[i - 1])) {\n            continue;\n          }\n          next += ',';\n        }\n      }\n\n      next += base64VLQ.encode(mapping.generatedColumn\n                                 - previousGeneratedColumn);\n      previousGeneratedColumn = mapping.generatedColumn;\n\n      if (mapping.source != null) {\n        sourceIdx = this._sources.indexOf(mapping.source);\n        next += base64VLQ.encode(sourceIdx - previousSource);\n        previousSource = sourceIdx;\n\n        // lines are stored 0-based in SourceMap spec version 3\n        next += base64VLQ.encode(mapping.originalLine - 1\n                                   - previousOriginalLine);\n        previousOriginalLine = mapping.originalLine - 1;\n\n        next += base64VLQ.encode(mapping.originalColumn\n                                   - previousOriginalColumn);\n        previousOriginalColumn = mapping.originalColumn;\n\n        if (mapping.name != null) {\n          nameIdx = this._names.indexOf(mapping.name);\n          next += base64VLQ.encode(nameIdx - previousName);\n          previousName = nameIdx;\n        }\n      }\n\n      result += next;\n    }\n\n    return result;\n  };\n\nSourceMapGenerator.prototype._generateSourcesContent =\n  function SourceMapGenerator_generateSourcesContent(aSources, aSourceRoot) {\n    return aSources.map(function (source) {\n      if (!this._sourcesContents) {\n        return null;\n      }\n      if (aSourceRoot != null) {\n        source = util.relative(aSourceRoot, source);\n      }\n      var key = util.toSetString(source);\n      return Object.prototype.hasOwnProperty.call(this._sourcesContents, key)\n        ? this._sourcesContents[key]\n        : null;\n    }, this);\n  };\n\n/**\n * Externalize the source map.\n */\nSourceMapGenerator.prototype.toJSON =\n  function SourceMapGenerator_toJSON() {\n    var map = {\n      version: this._version,\n      sources: this._sources.toArray(),\n      names: this._names.toArray(),\n      mappings: this._serializeMappings()\n    };\n    if (this._file != null) {\n      map.file = this._file;\n    }\n    if (this._sourceRoot != null) {\n      map.sourceRoot = this._sourceRoot;\n    }\n    if (this._sourcesContents) {\n      map.sourcesContent = this._generateSourcesContent(map.sources, map.sourceRoot);\n    }\n\n    return map;\n  };\n\n/**\n * Render the source map being generated to a string.\n */\nSourceMapGenerator.prototype.toString =\n  function SourceMapGenerator_toString() {\n    return JSON.stringify(this.toJSON());\n  };\n\nexports.SourceMapGenerator = SourceMapGenerator;\n","var SourceMapGenerator = require('source-map/lib/source-map-generator').SourceMapGenerator;\nvar trackNodes = {\n    Atrule: true,\n    Selector: true,\n    Declaration: true\n};\n\nmodule.exports = function generateSourceMap(handlers) {\n    var map = new SourceMapGenerator();\n    var line = 1;\n    var column = 0;\n    var generated = {\n        line: 1,\n        column: 0\n    };\n    var original = {\n        line: 0, // should be zero to add first mapping\n        column: 0\n    };\n    var sourceMappingActive = false;\n    var activatedGenerated = {\n        line: 1,\n        column: 0\n    };\n    var activatedMapping = {\n        generated: activatedGenerated\n    };\n\n    var handlersNode = handlers.node;\n    handlers.node = function(node) {\n        if (node.loc && node.loc.start && trackNodes.hasOwnProperty(node.type)) {\n            var nodeLine = node.loc.start.line;\n            var nodeColumn = node.loc.start.column - 1;\n\n            if (original.line !== nodeLine ||\n                original.column !== nodeColumn) {\n                original.line = nodeLine;\n                original.column = nodeColumn;\n\n                generated.line = line;\n                generated.column = column;\n\n                if (sourceMappingActive) {\n                    sourceMappingActive = false;\n                    if (generated.line !== activatedGenerated.line ||\n                        generated.column !== activatedGenerated.column) {\n                        map.addMapping(activatedMapping);\n                    }\n                }\n\n                sourceMappingActive = true;\n                map.addMapping({\n                    source: node.loc.source,\n                    original: original,\n                    generated: generated\n                });\n            }\n        }\n\n        handlersNode.call(this, node);\n\n        if (sourceMappingActive && trackNodes.hasOwnProperty(node.type)) {\n            activatedGenerated.line = line;\n            activatedGenerated.column = column;\n        }\n    };\n\n    var handlersChunk = handlers.chunk;\n    handlers.chunk = function(chunk) {\n        for (var i = 0; i < chunk.length; i++) {\n            if (chunk.charCodeAt(i) === 10) { // \\n\n                line++;\n                column = 0;\n            } else {\n                column++;\n            }\n        }\n\n        handlersChunk(chunk);\n    };\n\n    var handlersResult = handlers.result;\n    handlers.result = function() {\n        if (sourceMappingActive) {\n            map.addMapping(activatedMapping);\n        }\n\n        return {\n            css: handlersResult(),\n            map: map\n        };\n    };\n\n    return handlers;\n};\n","var sourceMap = require('./sourceMap');\nvar hasOwnProperty = Object.prototype.hasOwnProperty;\n\nfunction processChildren(node, delimeter) {\n    var list = node.children;\n    var prev = null;\n\n    if (typeof delimeter !== 'function') {\n        list.forEach(this.node, this);\n    } else {\n        list.forEach(function(node) {\n            if (prev !== null) {\n                delimeter.call(this, prev);\n            }\n\n            this.node(node);\n            prev = node;\n        }, this);\n    }\n}\n\nmodule.exports = function createGenerator(config) {\n    function processNode(node) {\n        if (hasOwnProperty.call(types, node.type)) {\n            types[node.type].call(this, node);\n        } else {\n            throw new Error('Unknown node type: ' + node.type);\n        }\n    }\n\n    var types = {};\n\n    if (config.node) {\n        for (var name in config.node) {\n            types[name] = config.node[name].generate;\n        }\n    }\n\n    return function(node, options) {\n        var buffer = '';\n        var handlers = {\n            children: processChildren,\n            node: processNode,\n            chunk: function(chunk) {\n                buffer += chunk;\n            },\n            result: function() {\n                return buffer;\n            }\n        };\n\n        if (options) {\n            if (typeof options.decorator === 'function') {\n                handlers = options.decorator(handlers);\n            }\n\n            if (options.sourceMap) {\n                handlers = sourceMap(handlers);\n            }\n        }\n\n        handlers.node(node);\n\n        return handlers.result();\n    };\n};\n","var List = require('../common/List');\n\nmodule.exports = function createConvertors(walk) {\n    return {\n        fromPlainObject: function(ast) {\n            walk(ast, {\n                enter: function(node) {\n                    if (node.children && node.children instanceof List === false) {\n                        node.children = new List().fromArray(node.children);\n                    }\n                }\n            });\n\n            return ast;\n        },\n        toPlainObject: function(ast) {\n            walk(ast, {\n                leave: function(node) {\n                    if (node.children && node.children instanceof List) {\n                        node.children = node.children.toArray();\n                    }\n                }\n            });\n\n            return ast;\n        }\n    };\n};\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\nvar noop = function() {};\n\nfunction ensureFunction(value) {\n    return typeof value === 'function' ? value : noop;\n}\n\nfunction invokeForType(fn, type) {\n    return function(node, item, list) {\n        if (node.type === type) {\n            fn.call(this, node, item, list);\n        }\n    };\n}\n\nfunction getWalkersFromStructure(name, nodeType) {\n    var structure = nodeType.structure;\n    var walkers = [];\n\n    for (var key in structure) {\n        if (hasOwnProperty.call(structure, key) === false) {\n            continue;\n        }\n\n        var fieldTypes = structure[key];\n        var walker = {\n            name: key,\n            type: false,\n            nullable: false\n        };\n\n        if (!Array.isArray(structure[key])) {\n            fieldTypes = [structure[key]];\n        }\n\n        for (var i = 0; i < fieldTypes.length; i++) {\n            var fieldType = fieldTypes[i];\n            if (fieldType === null) {\n                walker.nullable = true;\n            } else if (typeof fieldType === 'string') {\n                walker.type = 'node';\n            } else if (Array.isArray(fieldType)) {\n                walker.type = 'list';\n            }\n        }\n\n        if (walker.type) {\n            walkers.push(walker);\n        }\n    }\n\n    if (walkers.length) {\n        return {\n            context: nodeType.walkContext,\n            fields: walkers\n        };\n    }\n\n    return null;\n}\n\nfunction getTypesFromConfig(config) {\n    var types = {};\n\n    for (var name in config.node) {\n        if (hasOwnProperty.call(config.node, name)) {\n            var nodeType = config.node[name];\n\n            if (!nodeType.structure) {\n                throw new Error('Missed `structure` field in `' + name + '` node type definition');\n            }\n\n            types[name] = getWalkersFromStructure(name, nodeType);\n        }\n    }\n\n    return types;\n}\n\nfunction createTypeIterator(config, reverse) {\n    var fields = config.fields.slice();\n    var contextName = config.context;\n    var useContext = typeof contextName === 'string';\n\n    if (reverse) {\n        fields.reverse();\n    }\n\n    return function(node, context, walk) {\n        var prevContextValue;\n\n        if (useContext) {\n            prevContextValue = context[contextName];\n            context[contextName] = node;\n        }\n\n        for (var i = 0; i < fields.length; i++) {\n            var field = fields[i];\n            var ref = node[field.name];\n\n            if (!field.nullable || ref) {\n                if (field.type === 'list') {\n                    if (reverse) {\n                        ref.forEachRight(walk);\n                    } else {\n                        ref.forEach(walk);\n                    }\n                } else {\n                    walk(ref);\n                }\n            }\n        }\n\n        if (useContext) {\n            context[contextName] = prevContextValue;\n        }\n    };\n}\n\nfunction createFastTraveralMap(iterators) {\n    return {\n        Atrule: {\n            StyleSheet: iterators.StyleSheet,\n            Atrule: iterators.Atrule,\n            Rule: iterators.Rule,\n            Block: iterators.Block\n        },\n        Rule: {\n            StyleSheet: iterators.StyleSheet,\n            Atrule: iterators.Atrule,\n            Rule: iterators.Rule,\n            Block: iterators.Block\n        },\n        Declaration: {\n            StyleSheet: iterators.StyleSheet,\n            Atrule: iterators.Atrule,\n            Rule: iterators.Rule,\n            Block: iterators.Block,\n            DeclarationList: iterators.DeclarationList\n        }\n    };\n}\n\nmodule.exports = function createWalker(config) {\n    var types = getTypesFromConfig(config);\n    var iteratorsNatural = {};\n    var iteratorsReverse = {};\n\n    for (var name in types) {\n        if (hasOwnProperty.call(types, name) && types[name] !== null) {\n            iteratorsNatural[name] = createTypeIterator(types[name], false);\n            iteratorsReverse[name] = createTypeIterator(types[name], true);\n        }\n    }\n\n    var fastTraversalIteratorsNatural = createFastTraveralMap(iteratorsNatural);\n    var fastTraversalIteratorsReverse = createFastTraveralMap(iteratorsReverse);\n\n    var walk = function(root, options) {\n        function walkNode(node, item, list) {\n            enter.call(context, node, item, list);\n\n            if (iterators.hasOwnProperty(node.type)) {\n                iterators[node.type](node, context, walkNode);\n            }\n\n            leave.call(context, node, item, list);\n        }\n\n        var enter = noop;\n        var leave = noop;\n        var iterators = iteratorsNatural;\n        var context = {\n            root: root,\n            stylesheet: null,\n            atrule: null,\n            atrulePrelude: null,\n            rule: null,\n            selector: null,\n            block: null,\n            declaration: null,\n            function: null\n        };\n\n        if (typeof options === 'function') {\n            enter = options;\n        } else if (options) {\n            enter = ensureFunction(options.enter);\n            leave = ensureFunction(options.leave);\n\n            if (options.reverse) {\n                iterators = iteratorsReverse;\n            }\n\n            if (options.visit) {\n                if (fastTraversalIteratorsNatural.hasOwnProperty(options.visit)) {\n                    iterators = options.reverse\n                        ? fastTraversalIteratorsReverse[options.visit]\n                        : fastTraversalIteratorsNatural[options.visit];\n                } else if (!types.hasOwnProperty(options.visit)) {\n                    throw new Error('Bad value `' + options.visit + '` for `visit` option (should be: ' + Object.keys(types).join(', ') + ')');\n                }\n\n                enter = invokeForType(enter, options.visit);\n                leave = invokeForType(leave, options.visit);\n            }\n        }\n\n        if (enter === noop && leave === noop) {\n            throw new Error('Neither `enter` nor `leave` walker handler is set or both aren\\'t a function');\n        }\n\n        // swap handlers in reverse mode to invert visit order\n        if (options.reverse) {\n            var tmp = enter;\n            enter = leave;\n            leave = tmp;\n        }\n\n        walkNode(root);\n    };\n\n    walk.find = function(ast, fn) {\n        var found = null;\n\n        walk(ast, function(node, item, list) {\n            if (found === null && fn.call(this, node, item, list)) {\n                found = node;\n            }\n        });\n\n        return found;\n    };\n\n    walk.findLast = function(ast, fn) {\n        var found = null;\n\n        walk(ast, {\n            reverse: true,\n            enter: function(node, item, list) {\n                if (found === null && fn.call(this, node, item, list)) {\n                    found = node;\n                }\n            }\n        });\n\n        return found;\n    };\n\n    walk.findAll = function(ast, fn) {\n        var found = [];\n\n        walk(ast, function(node, item, list) {\n            if (fn.call(this, node, item, list)) {\n                found.push(node);\n            }\n        });\n\n        return found;\n    };\n\n    return walk;\n};\n","var List = require('../common/List');\n\nmodule.exports = function clone(node) {\n    var result = {};\n\n    for (var key in node) {\n        var value = node[key];\n\n        if (value) {\n            if (Array.isArray(value) || value instanceof List) {\n                value = value.map(clone);\n            } else if (value.constructor === Object) {\n                value = clone(value);\n            }\n        }\n\n        result[key] = value;\n    }\n\n    return result;\n};\n","var hasOwnProperty = Object.prototype.hasOwnProperty;\nvar shape = {\n    generic: true,\n    types: {},\n    atrules: {},\n    properties: {},\n    parseContext: {},\n    scope: {},\n    atrule: ['parse'],\n    pseudo: ['parse'],\n    node: ['name', 'structure', 'parse', 'generate', 'walkContext']\n};\n\nfunction isObject(value) {\n    return value && value.constructor === Object;\n}\n\nfunction copy(value) {\n    if (isObject(value)) {\n        return Object.assign({}, value);\n    } else {\n        return value;\n    }\n}\nfunction extend(dest, src) {\n    for (var key in src) {\n        if (hasOwnProperty.call(src, key)) {\n            if (isObject(dest[key])) {\n                extend(dest[key], copy(src[key]));\n            } else {\n                dest[key] = copy(src[key]);\n            }\n        }\n    }\n}\n\nfunction mix(dest, src, shape) {\n    for (var key in shape) {\n        if (hasOwnProperty.call(shape, key) === false) {\n            continue;\n        }\n\n        if (shape[key] === true) {\n            if (key in src) {\n                if (hasOwnProperty.call(src, key)) {\n                    dest[key] = copy(src[key]);\n                }\n            }\n        } else if (shape[key]) {\n            if (isObject(shape[key])) {\n                var res = {};\n                extend(res, dest[key]);\n                extend(res, src[key]);\n                dest[key] = res;\n            } else if (Array.isArray(shape[key])) {\n                var res = {};\n                var innerShape = shape[key].reduce(function(s, k) {\n                    s[k] = true;\n                    return s;\n                }, {});\n                for (var name in dest[key]) {\n                    if (hasOwnProperty.call(dest[key], name)) {\n                        res[name] = {};\n                        if (dest[key] && dest[key][name]) {\n                            mix(res[name], dest[key][name], innerShape);\n                        }\n                    }\n                }\n                for (var name in src[key]) {\n                    if (hasOwnProperty.call(src[key], name)) {\n                        if (!res[name]) {\n                            res[name] = {};\n                        }\n                        if (src[key] && src[key][name]) {\n                            mix(res[name], src[key][name], innerShape);\n                        }\n                    }\n                }\n                dest[key] = res;\n            }\n        }\n    }\n    return dest;\n}\n\nmodule.exports = function(dest, src) {\n    return mix(dest, src, shape);\n};\n","var List = require('../common/List');\nvar SyntaxError = require('../common/SyntaxError');\nvar TokenStream = require('../common/TokenStream');\nvar Lexer = require('../lexer/Lexer');\nvar definitionSyntax = require('../definition-syntax');\nvar tokenize = require('../tokenizer');\nvar createParser = require('../parser/create');\nvar createGenerator = require('../generator/create');\nvar createConvertor = require('../convertor/create');\nvar createWalker = require('../walker/create');\nvar clone = require('../utils/clone');\nvar names = require('../utils/names');\nvar mix = require('./config/mix');\n\nfunction createSyntax(config) {\n    var parse = createParser(config);\n    var walk = createWalker(config);\n    var generate = createGenerator(config);\n    var convert = createConvertor(walk);\n\n    var syntax = {\n        List: List,\n        SyntaxError: SyntaxError,\n        TokenStream: TokenStream,\n        Lexer: Lexer,\n\n        vendorPrefix: names.vendorPrefix,\n        keyword: names.keyword,\n        property: names.property,\n        isCustomProperty: names.isCustomProperty,\n\n        definitionSyntax: definitionSyntax,\n        lexer: null,\n        createLexer: function(config) {\n            return new Lexer(config, syntax, syntax.lexer.structure);\n        },\n\n        tokenize: tokenize,\n        parse: parse,\n        walk: walk,\n        generate: generate,\n\n        find: walk.find,\n        findLast: walk.findLast,\n        findAll: walk.findAll,\n\n        clone: clone,\n        fromPlainObject: convert.fromPlainObject,\n        toPlainObject: convert.toPlainObject,\n\n        createSyntax: function(config) {\n            return createSyntax(mix({}, config));\n        },\n        fork: function(extension) {\n            var base = mix({}, config); // copy of config\n            return createSyntax(\n                typeof extension === 'function'\n                    ? extension(base, Object.assign)\n                    : mix(base, extension)\n            );\n        }\n    };\n\n    syntax.lexer = new Lexer({\n        generic: true,\n        types: config.types,\n        atrules: config.atrules,\n        properties: config.properties,\n        node: config.node\n    }, syntax);\n\n    return syntax;\n};\n\nexports.create = function(config) {\n    return createSyntax(mix({}, config));\n};\n","var cmpChar = require('../../tokenizer').cmpChar;\nvar isDigit = require('../../tokenizer').isDigit;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar IDENT = TYPE.Ident;\nvar NUMBER = TYPE.Number;\nvar DIMENSION = TYPE.Dimension;\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nvar N = 0x006E;           // U+006E LATIN SMALL LETTER N (n)\nvar DISALLOW_SIGN = true;\nvar ALLOW_SIGN = false;\n\nfunction checkInteger(offset, disallowSign) {\n    var pos = this.scanner.tokenStart + offset;\n    var code = this.scanner.source.charCodeAt(pos);\n\n    if (code === PLUSSIGN || code === HYPHENMINUS) {\n        if (disallowSign) {\n            this.error('Number sign is not allowed');\n        }\n        pos++;\n    }\n\n    for (; pos < this.scanner.tokenEnd; pos++) {\n        if (!isDigit(this.scanner.source.charCodeAt(pos))) {\n            this.error('Integer is expected', pos);\n        }\n    }\n}\n\nfunction checkTokenIsInteger(disallowSign) {\n    return checkInteger.call(this, 0, disallowSign);\n}\n\nfunction expectCharCode(offset, code) {\n    if (!cmpChar(this.scanner.source, this.scanner.tokenStart + offset, code)) {\n        var msg = '';\n\n        switch (code) {\n            case N:\n                msg = 'N is expected';\n                break;\n            case HYPHENMINUS:\n                msg = 'HyphenMinus is expected';\n                break;\n        }\n\n        this.error(msg, this.scanner.tokenStart + offset);\n    }\n}\n\n// ... <signed-integer>\n// ... ['+' | '-'] <signless-integer>\nfunction consumeB() {\n    var offset = 0;\n    var sign = 0;\n    var type = this.scanner.tokenType;\n\n    while (type === WHITESPACE || type === COMMENT) {\n        type = this.scanner.lookupType(++offset);\n    }\n\n    if (type !== NUMBER) {\n        if (this.scanner.isDelim(PLUSSIGN, offset) ||\n            this.scanner.isDelim(HYPHENMINUS, offset)) {\n            sign = this.scanner.isDelim(PLUSSIGN, offset) ? PLUSSIGN : HYPHENMINUS;\n\n            do {\n                type = this.scanner.lookupType(++offset);\n            } while (type === WHITESPACE || type === COMMENT);\n\n            if (type !== NUMBER) {\n                this.scanner.skip(offset);\n                checkTokenIsInteger.call(this, DISALLOW_SIGN);\n            }\n        } else {\n            return null;\n        }\n    }\n\n    if (offset > 0) {\n        this.scanner.skip(offset);\n    }\n\n    if (sign === 0) {\n        type = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n        if (type !== PLUSSIGN && type !== HYPHENMINUS) {\n            this.error('Number sign is expected');\n        }\n    }\n\n    checkTokenIsInteger.call(this, sign !== 0);\n    return sign === HYPHENMINUS ? '-' + this.consume(NUMBER) : this.consume(NUMBER);\n}\n\n// An+B microsyntax https://www.w3.org/TR/css-syntax-3/#anb\nmodule.exports = {\n    name: 'AnPlusB',\n    structure: {\n        a: [String, null],\n        b: [String, null]\n    },\n    parse: function() {\n        /* eslint-disable brace-style*/\n        var start = this.scanner.tokenStart;\n        var a = null;\n        var b = null;\n\n        // <integer>\n        if (this.scanner.tokenType === NUMBER) {\n            checkTokenIsInteger.call(this, ALLOW_SIGN);\n            b = this.consume(NUMBER);\n        }\n\n        // -n\n        // -n <signed-integer>\n        // -n ['+' | '-'] <signless-integer>\n        // -n- <signless-integer>\n        // <dashndashdigit-ident>\n        else if (this.scanner.tokenType === IDENT && cmpChar(this.scanner.source, this.scanner.tokenStart, HYPHENMINUS)) {\n            a = '-1';\n\n            expectCharCode.call(this, 1, N);\n\n            switch (this.scanner.getTokenLength()) {\n                // -n\n                // -n <signed-integer>\n                // -n ['+' | '-'] <signless-integer>\n                case 2:\n                    this.scanner.next();\n                    b = consumeB.call(this);\n                    break;\n\n                // -n- <signless-integer>\n                case 3:\n                    expectCharCode.call(this, 2, HYPHENMINUS);\n\n                    this.scanner.next();\n                    this.scanner.skipSC();\n\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                    b = '-' + this.consume(NUMBER);\n                    break;\n\n                // <dashndashdigit-ident>\n                default:\n                    expectCharCode.call(this, 2, HYPHENMINUS);\n                    checkInteger.call(this, 3, DISALLOW_SIGN);\n                    this.scanner.next();\n\n                    b = this.scanner.substrToCursor(start + 2);\n            }\n        }\n\n        // '+'? n\n        // '+'? n <signed-integer>\n        // '+'? n ['+' | '-'] <signless-integer>\n        // '+'? n- <signless-integer>\n        // '+'? <ndashdigit-ident>\n        else if (this.scanner.tokenType === IDENT || (this.scanner.isDelim(PLUSSIGN) && this.scanner.lookupType(1) === IDENT)) {\n            var sign = 0;\n            a = '1';\n\n            // just ignore a plus\n            if (this.scanner.isDelim(PLUSSIGN)) {\n                sign = 1;\n                this.scanner.next();\n            }\n\n            expectCharCode.call(this, 0, N);\n\n            switch (this.scanner.getTokenLength()) {\n                // '+'? n\n                // '+'? n <signed-integer>\n                // '+'? n ['+' | '-'] <signless-integer>\n                case 1:\n                    this.scanner.next();\n                    b = consumeB.call(this);\n                    break;\n\n                // '+'? n- <signless-integer>\n                case 2:\n                    expectCharCode.call(this, 1, HYPHENMINUS);\n\n                    this.scanner.next();\n                    this.scanner.skipSC();\n\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\n\n                    b = '-' + this.consume(NUMBER);\n                    break;\n\n                // '+'? <ndashdigit-ident>\n                default:\n                    expectCharCode.call(this, 1, HYPHENMINUS);\n                    checkInteger.call(this, 2, DISALLOW_SIGN);\n                    this.scanner.next();\n\n                    b = this.scanner.substrToCursor(start + sign + 1);\n            }\n        }\n\n        // <ndashdigit-dimension>\n        // <ndash-dimension> <signless-integer>\n        // <n-dimension>\n        // <n-dimension> <signed-integer>\n        // <n-dimension> ['+' | '-'] <signless-integer>\n        else if (this.scanner.tokenType === DIMENSION) {\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n            var sign = code === PLUSSIGN || code === HYPHENMINUS;\n\n            for (var i = this.scanner.tokenStart + sign; i < this.scanner.tokenEnd; i++) {\n                if (!isDigit(this.scanner.source.charCodeAt(i))) {\n                    break;\n                }\n            }\n\n            if (i === this.scanner.tokenStart + sign) {\n                this.error('Integer is expected', this.scanner.tokenStart + sign);\n            }\n\n            expectCharCode.call(this, i - this.scanner.tokenStart, N);\n            a = this.scanner.source.substring(start, i);\n\n            // <n-dimension>\n            // <n-dimension> <signed-integer>\n            // <n-dimension> ['+' | '-'] <signless-integer>\n            if (i + 1 === this.scanner.tokenEnd) {\n                this.scanner.next();\n                b = consumeB.call(this);\n            } else {\n                expectCharCode.call(this, i - this.scanner.tokenStart + 1, HYPHENMINUS);\n\n                // <ndash-dimension> <signless-integer>\n                if (i + 2 === this.scanner.tokenEnd) {\n                    this.scanner.next();\n                    this.scanner.skipSC();\n                    checkTokenIsInteger.call(this, DISALLOW_SIGN);\n                    b = '-' + this.consume(NUMBER);\n                }\n                // <ndashdigit-dimension>\n                else {\n                    checkInteger.call(this, i - this.scanner.tokenStart + 2, DISALLOW_SIGN);\n                    this.scanner.next();\n                    b = this.scanner.substrToCursor(i + 1);\n                }\n            }\n        } else {\n            this.error();\n        }\n\n        if (a !== null && a.charCodeAt(0) === PLUSSIGN) {\n            a = a.substr(1);\n        }\n\n        if (b !== null && b.charCodeAt(0) === PLUSSIGN) {\n            b = b.substr(1);\n        }\n\n        return {\n            type: 'AnPlusB',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            a: a,\n            b: b\n        };\n    },\n    generate: function(node) {\n        var a = node.a !== null && node.a !== undefined;\n        var b = node.b !== null && node.b !== undefined;\n\n        if (a) {\n            this.chunk(\n                node.a === '+1' ? '+n' : // eslint-disable-line operator-linebreak, indent\n                node.a ===  '1' ?  'n' : // eslint-disable-line operator-linebreak, indent\n                node.a === '-1' ? '-n' : // eslint-disable-line operator-linebreak, indent\n                node.a + 'n'             // eslint-disable-line operator-linebreak, indent\n            );\n\n            if (b) {\n                b = String(node.b);\n                if (b.charAt(0) === '-' || b.charAt(0) === '+') {\n                    this.chunk(b.charAt(0));\n                    this.chunk(b.substr(1));\n                } else {\n                    this.chunk('+');\n                    this.chunk(b);\n                }\n            }\n        } else {\n            this.chunk(String(node.b));\n        }\n    }\n};\n","var tokenizer = require('../../tokenizer');\nvar TYPE = tokenizer.TYPE;\n\nvar WhiteSpace = TYPE.WhiteSpace;\nvar Semicolon = TYPE.Semicolon;\nvar LeftCurlyBracket = TYPE.LeftCurlyBracket;\nvar Delim = TYPE.Delim;\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nfunction getOffsetExcludeWS() {\n    if (this.scanner.tokenIndex > 0) {\n        if (this.scanner.lookupType(-1) === WhiteSpace) {\n            return this.scanner.tokenIndex > 1\n                ? this.scanner.getTokenStart(this.scanner.tokenIndex - 1)\n                : this.scanner.firstCharOffset;\n        }\n    }\n\n    return this.scanner.tokenStart;\n}\n\n// 0, 0, false\nfunction balanceEnd() {\n    return 0;\n}\n\n// LEFTCURLYBRACKET, 0, false\nfunction leftCurlyBracket(tokenType) {\n    return tokenType === LeftCurlyBracket ? 1 : 0;\n}\n\n// LEFTCURLYBRACKET, SEMICOLON, false\nfunction leftCurlyBracketOrSemicolon(tokenType) {\n    return tokenType === LeftCurlyBracket || tokenType === Semicolon ? 1 : 0;\n}\n\n// EXCLAMATIONMARK, SEMICOLON, false\nfunction exclamationMarkOrSemicolon(tokenType, source, offset) {\n    if (tokenType === Delim && source.charCodeAt(offset) === EXCLAMATIONMARK) {\n        return 1;\n    }\n\n    return tokenType === Semicolon ? 1 : 0;\n}\n\n// 0, SEMICOLON, true\nfunction semicolonIncluded(tokenType) {\n    return tokenType === Semicolon ? 2 : 0;\n}\n\nmodule.exports = {\n    name: 'Raw',\n    structure: {\n        value: String\n    },\n    parse: function(startToken, mode, excludeWhiteSpace) {\n        var startOffset = this.scanner.getTokenStart(startToken);\n        var endOffset;\n\n        this.scanner.skip(\n            this.scanner.getRawLength(startToken, mode || balanceEnd)\n        );\n\n        if (excludeWhiteSpace && this.scanner.tokenStart > startOffset) {\n            endOffset = getOffsetExcludeWS.call(this);\n        } else {\n            endOffset = this.scanner.tokenStart;\n        }\n\n        return {\n            type: 'Raw',\n            loc: this.getLocation(startOffset, endOffset),\n            value: this.scanner.source.substring(startOffset, endOffset)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.value);\n    },\n\n    mode: {\n        default: balanceEnd,\n        leftCurlyBracket: leftCurlyBracket,\n        leftCurlyBracketOrSemicolon: leftCurlyBracketOrSemicolon,\n        exclamationMarkOrSemicolon: exclamationMarkOrSemicolon,\n        semicolonIncluded: semicolonIncluded\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar ATKEYWORD = TYPE.AtKeyword;\nvar SEMICOLON = TYPE.Semicolon;\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, rawMode.leftCurlyBracketOrSemicolon, true);\n}\n\nfunction isDeclarationBlockAtrule() {\n    for (var offset = 1, type; type = this.scanner.lookupType(offset); offset++) {\n        if (type === RIGHTCURLYBRACKET) {\n            return true;\n        }\n\n        if (type === LEFTCURLYBRACKET ||\n            type === ATKEYWORD) {\n            return false;\n        }\n    }\n\n    return false;\n}\n\nmodule.exports = {\n    name: 'Atrule',\n    structure: {\n        name: String,\n        prelude: ['AtrulePrelude', 'Raw', null],\n        block: ['Block', null]\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var name;\n        var nameLowerCase;\n        var prelude = null;\n        var block = null;\n\n        this.eat(ATKEYWORD);\n\n        name = this.scanner.substrToCursor(start + 1);\n        nameLowerCase = name.toLowerCase();\n        this.scanner.skipSC();\n\n        // parse prelude\n        if (this.scanner.eof === false &&\n            this.scanner.tokenType !== LEFTCURLYBRACKET &&\n            this.scanner.tokenType !== SEMICOLON) {\n            if (this.parseAtrulePrelude) {\n                prelude = this.parseWithFallback(this.AtrulePrelude.bind(this, name), consumeRaw);\n\n                // turn empty AtrulePrelude into null\n                if (prelude.type === 'AtrulePrelude' && prelude.children.head === null) {\n                    prelude = null;\n                }\n            } else {\n                prelude = consumeRaw.call(this, this.scanner.tokenIndex);\n            }\n\n            this.scanner.skipSC();\n        }\n\n        switch (this.scanner.tokenType) {\n            case SEMICOLON:\n                this.scanner.next();\n                break;\n\n            case LEFTCURLYBRACKET:\n                if (this.atrule.hasOwnProperty(nameLowerCase) &&\n                    typeof this.atrule[nameLowerCase].block === 'function') {\n                    block = this.atrule[nameLowerCase].block.call(this);\n                } else {\n                    // TODO: should consume block content as Raw?\n                    block = this.Block(isDeclarationBlockAtrule.call(this));\n                }\n\n                break;\n        }\n\n        return {\n            type: 'Atrule',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            name: name,\n            prelude: prelude,\n            block: block\n        };\n    },\n    generate: function(node) {\n        this.chunk('@');\n        this.chunk(node.name);\n\n        if (node.prelude !== null) {\n            this.chunk(' ');\n            this.node(node.prelude);\n        }\n\n        if (node.block) {\n            this.node(node.block);\n        } else {\n            this.chunk(';');\n        }\n    },\n    walkContext: 'atrule'\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar SEMICOLON = TYPE.Semicolon;\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\n\nmodule.exports = {\n    name: 'AtrulePrelude',\n    structure: {\n        children: [[]]\n    },\n    parse: function(name) {\n        var children = null;\n\n        if (name !== null) {\n            name = name.toLowerCase();\n        }\n\n        this.scanner.skipSC();\n\n        if (this.atrule.hasOwnProperty(name) &&\n            typeof this.atrule[name].prelude === 'function') {\n            // custom consumer\n            children = this.atrule[name].prelude.call(this);\n        } else {\n            // default consumer\n            children = this.readSequence(this.scope.AtrulePrelude);\n        }\n\n        this.scanner.skipSC();\n\n        if (this.scanner.eof !== true &&\n            this.scanner.tokenType !== LEFTCURLYBRACKET &&\n            this.scanner.tokenType !== SEMICOLON) {\n            this.error('Semicolon or block is expected');\n        }\n\n        if (children === null) {\n            children = this.createList();\n        }\n\n        return {\n            type: 'AtrulePrelude',\n            loc: this.getLocationFromList(children),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node);\n    },\n    walkContext: 'atrulePrelude'\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar STRING = TYPE.String;\nvar COLON = TYPE.Colon;\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar RIGHTSQUAREBRACKET = TYPE.RightSquareBracket;\nvar DOLLARSIGN = 0x0024;       // U+0024 DOLLAR SIGN ($)\nvar ASTERISK = 0x002A;         // U+002A ASTERISK (*)\nvar EQUALSSIGN = 0x003D;       // U+003D EQUALS SIGN (=)\nvar CIRCUMFLEXACCENT = 0x005E; // U+005E (^)\nvar VERTICALLINE = 0x007C;     // U+007C VERTICAL LINE (|)\nvar TILDE = 0x007E;            // U+007E TILDE (~)\n\nfunction getAttributeName() {\n    if (this.scanner.eof) {\n        this.error('Unexpected end of input');\n    }\n\n    var start = this.scanner.tokenStart;\n    var expectIdent = false;\n    var checkColon = true;\n\n    if (this.scanner.isDelim(ASTERISK)) {\n        expectIdent = true;\n        checkColon = false;\n        this.scanner.next();\n    } else if (!this.scanner.isDelim(VERTICALLINE)) {\n        this.eat(IDENT);\n    }\n\n    if (this.scanner.isDelim(VERTICALLINE)) {\n        if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 1) !== EQUALSSIGN) {\n            this.scanner.next();\n            this.eat(IDENT);\n        } else if (expectIdent) {\n            this.error('Identifier is expected', this.scanner.tokenEnd);\n        }\n    } else if (expectIdent) {\n        this.error('Vertical line is expected');\n    }\n\n    if (checkColon && this.scanner.tokenType === COLON) {\n        this.scanner.next();\n        this.eat(IDENT);\n    }\n\n    return {\n        type: 'Identifier',\n        loc: this.getLocation(start, this.scanner.tokenStart),\n        name: this.scanner.substrToCursor(start)\n    };\n}\n\nfunction getOperator() {\n    var start = this.scanner.tokenStart;\n    var code = this.scanner.source.charCodeAt(start);\n\n    if (code !== EQUALSSIGN &&        // =\n        code !== TILDE &&             // ~=\n        code !== CIRCUMFLEXACCENT &&  // ^=\n        code !== DOLLARSIGN &&        // $=\n        code !== ASTERISK &&          // *=\n        code !== VERTICALLINE         // |=\n    ) {\n        this.error('Attribute selector (=, ~=, ^=, $=, *=, |=) is expected');\n    }\n\n    this.scanner.next();\n\n    if (code !== EQUALSSIGN) {\n        if (!this.scanner.isDelim(EQUALSSIGN)) {\n            this.error('Equal sign is expected');\n        }\n\n        this.scanner.next();\n    }\n\n    return this.scanner.substrToCursor(start);\n}\n\n// '[' <wq-name> ']'\n// '[' <wq-name> <attr-matcher> [ <string-token> | <ident-token> ] <attr-modifier>? ']'\nmodule.exports = {\n    name: 'AttributeSelector',\n    structure: {\n        name: 'Identifier',\n        matcher: [String, null],\n        value: ['String', 'Identifier', null],\n        flags: [String, null]\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var name;\n        var matcher = null;\n        var value = null;\n        var flags = null;\n\n        this.eat(LEFTSQUAREBRACKET);\n        this.scanner.skipSC();\n\n        name = getAttributeName.call(this);\n        this.scanner.skipSC();\n\n        if (this.scanner.tokenType !== RIGHTSQUAREBRACKET) {\n            // avoid case `[name i]`\n            if (this.scanner.tokenType !== IDENT) {\n                matcher = getOperator.call(this);\n\n                this.scanner.skipSC();\n\n                value = this.scanner.tokenType === STRING\n                    ? this.String()\n                    : this.Identifier();\n\n                this.scanner.skipSC();\n            }\n\n            // attribute flags\n            if (this.scanner.tokenType === IDENT) {\n                flags = this.scanner.getTokenValue();\n                this.scanner.next();\n\n                this.scanner.skipSC();\n            }\n        }\n\n        this.eat(RIGHTSQUAREBRACKET);\n\n        return {\n            type: 'AttributeSelector',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            name: name,\n            matcher: matcher,\n            value: value,\n            flags: flags\n        };\n    },\n    generate: function(node) {\n        var flagsPrefix = ' ';\n\n        this.chunk('[');\n        this.node(node.name);\n\n        if (node.matcher !== null) {\n            this.chunk(node.matcher);\n\n            if (node.value !== null) {\n                this.node(node.value);\n\n                // space between string and flags is not required\n                if (node.value.type === 'String') {\n                    flagsPrefix = '';\n                }\n            }\n        }\n\n        if (node.flags !== null) {\n            this.chunk(flagsPrefix);\n            this.chunk(node.flags);\n        }\n\n        this.chunk(']');\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar SEMICOLON = TYPE.Semicolon;\nvar ATKEYWORD = TYPE.AtKeyword;\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\nvar RIGHTCURLYBRACKET = TYPE.RightCurlyBracket;\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, true);\n}\nfunction consumeRule() {\n    return this.parseWithFallback(this.Rule, consumeRaw);\n}\nfunction consumeRawDeclaration(startToken) {\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\n}\nfunction consumeDeclaration() {\n    if (this.scanner.tokenType === SEMICOLON) {\n        return consumeRawDeclaration.call(this, this.scanner.tokenIndex);\n    }\n\n    var node = this.parseWithFallback(this.Declaration, consumeRawDeclaration);\n\n    if (this.scanner.tokenType === SEMICOLON) {\n        this.scanner.next();\n    }\n\n    return node;\n}\n\nmodule.exports = {\n    name: 'Block',\n    structure: {\n        children: [[\n            'Atrule',\n            'Rule',\n            'Declaration'\n        ]]\n    },\n    parse: function(isDeclaration) {\n        var consumer = isDeclaration ? consumeDeclaration : consumeRule;\n\n        var start = this.scanner.tokenStart;\n        var children = this.createList();\n\n        this.eat(LEFTCURLYBRACKET);\n\n        scan:\n        while (!this.scanner.eof) {\n            switch (this.scanner.tokenType) {\n                case RIGHTCURLYBRACKET:\n                    break scan;\n\n                case WHITESPACE:\n                case COMMENT:\n                    this.scanner.next();\n                    break;\n\n                case ATKEYWORD:\n                    children.push(this.parseWithFallback(this.Atrule, consumeRaw));\n                    break;\n\n                default:\n                    children.push(consumer.call(this));\n            }\n        }\n\n        if (!this.scanner.eof) {\n            this.eat(RIGHTCURLYBRACKET);\n        }\n\n        return {\n            type: 'Block',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.chunk('{');\n        this.children(node, function(prev) {\n            if (prev.type === 'Declaration') {\n                this.chunk(';');\n            }\n        });\n        this.chunk('}');\n    },\n    walkContext: 'block'\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar RIGHTSQUAREBRACKET = TYPE.RightSquareBracket;\n\nmodule.exports = {\n    name: 'Brackets',\n    structure: {\n        children: [[]]\n    },\n    parse: function(readSequence, recognizer) {\n        var start = this.scanner.tokenStart;\n        var children = null;\n\n        this.eat(LEFTSQUAREBRACKET);\n\n        children = readSequence.call(this, recognizer);\n\n        if (!this.scanner.eof) {\n            this.eat(RIGHTSQUAREBRACKET);\n        }\n\n        return {\n            type: 'Brackets',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.chunk('[');\n        this.children(node);\n        this.chunk(']');\n    }\n};\n","var CDC = require('../../tokenizer').TYPE.CDC;\n\nmodule.exports = {\n    name: 'CDC',\n    structure: [],\n    parse: function() {\n        var start = this.scanner.tokenStart;\n\n        this.eat(CDC); // -->\n\n        return {\n            type: 'CDC',\n            loc: this.getLocation(start, this.scanner.tokenStart)\n        };\n    },\n    generate: function() {\n        this.chunk('-->');\n    }\n};\n","var CDO = require('../../tokenizer').TYPE.CDO;\n\nmodule.exports = {\n    name: 'CDO',\n    structure: [],\n    parse: function() {\n        var start = this.scanner.tokenStart;\n\n        this.eat(CDO); // <!--\n\n        return {\n            type: 'CDO',\n            loc: this.getLocation(start, this.scanner.tokenStart)\n        };\n    },\n    generate: function() {\n        this.chunk('<!--');\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// '.' ident\nmodule.exports = {\n    name: 'ClassSelector',\n    structure: {\n        name: String\n    },\n    parse: function() {\n        if (!this.scanner.isDelim(FULLSTOP)) {\n            this.error('Full stop is expected');\n        }\n\n        this.scanner.next();\n\n        return {\n            type: 'ClassSelector',\n            loc: this.getLocation(this.scanner.tokenStart - 1, this.scanner.tokenEnd),\n            name: this.consume(IDENT)\n        };\n    },\n    generate: function(node) {\n        this.chunk('.');\n        this.chunk(node.name);\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nvar TILDE = 0x007E;           // U+007E TILDE (~)\n\n// + | > | ~ | /deep/\nmodule.exports = {\n    name: 'Combinator',\n    structure: {\n        name: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n\n        switch (code) {\n            case GREATERTHANSIGN:\n            case PLUSSIGN:\n            case TILDE:\n                this.scanner.next();\n                break;\n\n            case SOLIDUS:\n                this.scanner.next();\n\n                if (this.scanner.tokenType !== IDENT || this.scanner.lookupValue(0, 'deep') === false) {\n                    this.error('Identifier `deep` is expected');\n                }\n\n                this.scanner.next();\n\n                if (!this.scanner.isDelim(SOLIDUS)) {\n                    this.error('Solidus is expected');\n                }\n\n                this.scanner.next();\n                break;\n\n            default:\n                this.error('Combinator is expected');\n        }\n\n        return {\n            type: 'Combinator',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            name: this.scanner.substrToCursor(start)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.name);\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar COMMENT = TYPE.Comment;\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\n// '/*' .* '*/'\nmodule.exports = {\n    name: 'Comment',\n    structure: {\n        value: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var end = this.scanner.tokenEnd;\n\n        this.eat(COMMENT);\n\n        if ((end - start + 2) >= 2 &&\n            this.scanner.source.charCodeAt(end - 2) === ASTERISK &&\n            this.scanner.source.charCodeAt(end - 1) === SOLIDUS) {\n            end -= 2;\n        }\n\n        return {\n            type: 'Comment',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            value: this.scanner.source.substring(start + 2, end)\n        };\n    },\n    generate: function(node) {\n        this.chunk('/*');\n        this.chunk(node.value);\n        this.chunk('*/');\n    }\n};\n","var isCustomProperty = require('../../utils/names').isCustomProperty;\nvar TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar IDENT = TYPE.Ident;\nvar HASH = TYPE.Hash;\nvar COLON = TYPE.Colon;\nvar SEMICOLON = TYPE.Semicolon;\nvar DELIM = TYPE.Delim;\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nvar DOLLARSIGN = 0x0024;      // U+0024 DOLLAR SIGN ($)\nvar AMPERSAND = 0x0026;       // U+0026 ANPERSAND (&)\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\n\nfunction consumeValueRaw(startToken) {\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, true);\n}\n\nfunction consumeCustomPropertyRaw(startToken) {\n    return this.Raw(startToken, rawMode.exclamationMarkOrSemicolon, false);\n}\n\nfunction consumeValue() {\n    var startValueToken = this.scanner.tokenIndex;\n    var value = this.Value();\n\n    if (value.type !== 'Raw' &&\n        this.scanner.eof === false &&\n        this.scanner.tokenType !== SEMICOLON &&\n        this.scanner.isDelim(EXCLAMATIONMARK) === false &&\n        this.scanner.isBalanceEdge(startValueToken) === false) {\n        this.error();\n    }\n\n    return value;\n}\n\nmodule.exports = {\n    name: 'Declaration',\n    structure: {\n        important: [Boolean, String],\n        property: String,\n        value: ['Value', 'Raw']\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var startToken = this.scanner.tokenIndex;\n        var property = readProperty.call(this);\n        var customProperty = isCustomProperty(property);\n        var parseValue = customProperty ? this.parseCustomProperty : this.parseValue;\n        var consumeRaw = customProperty ? consumeCustomPropertyRaw : consumeValueRaw;\n        var important = false;\n        var value;\n\n        this.scanner.skipSC();\n        this.eat(COLON);\n\n        if (!customProperty) {\n            this.scanner.skipSC();\n        }\n\n        if (parseValue) {\n            value = this.parseWithFallback(consumeValue, consumeRaw);\n        } else {\n            value = consumeRaw.call(this, this.scanner.tokenIndex);\n        }\n\n        if (this.scanner.isDelim(EXCLAMATIONMARK)) {\n            important = getImportant.call(this);\n            this.scanner.skipSC();\n        }\n\n        // Do not include semicolon to range per spec\n        // https://drafts.csswg.org/css-syntax/#declaration-diagram\n\n        if (this.scanner.eof === false &&\n            this.scanner.tokenType !== SEMICOLON &&\n            this.scanner.isBalanceEdge(startToken) === false) {\n            this.error();\n        }\n\n        return {\n            type: 'Declaration',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            important: important,\n            property: property,\n            value: value\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.property);\n        this.chunk(':');\n        this.node(node.value);\n\n        if (node.important) {\n            this.chunk(node.important === true ? '!important' : '!' + node.important);\n        }\n    },\n    walkContext: 'declaration'\n};\n\nfunction readProperty() {\n    var start = this.scanner.tokenStart;\n    var prefix = 0;\n\n    // hacks\n    if (this.scanner.tokenType === DELIM) {\n        switch (this.scanner.source.charCodeAt(this.scanner.tokenStart)) {\n            case ASTERISK:\n            case DOLLARSIGN:\n            case PLUSSIGN:\n            case NUMBERSIGN:\n            case AMPERSAND:\n                this.scanner.next();\n                break;\n\n            // TODO: not sure we should support this hack\n            case SOLIDUS:\n                this.scanner.next();\n                if (this.scanner.isDelim(SOLIDUS)) {\n                    this.scanner.next();\n                }\n                break;\n        }\n    }\n\n    if (prefix) {\n        this.scanner.skip(prefix);\n    }\n\n    if (this.scanner.tokenType === HASH) {\n        this.eat(HASH);\n    } else {\n        this.eat(IDENT);\n    }\n\n    return this.scanner.substrToCursor(start);\n}\n\n// ! ws* important\nfunction getImportant() {\n    this.eat(DELIM);\n    this.scanner.skipSC();\n\n    var important = this.consume(IDENT);\n\n    // store original value in case it differ from `important`\n    // for better original source restoring and hacks like `!ie` support\n    return important === 'important' ? true : important;\n}\n","var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar SEMICOLON = TYPE.Semicolon;\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, rawMode.semicolonIncluded, true);\n}\n\nmodule.exports = {\n    name: 'DeclarationList',\n    structure: {\n        children: [[\n            'Declaration'\n        ]]\n    },\n    parse: function() {\n        var children = this.createList();\n\n        scan:\n        while (!this.scanner.eof) {\n            switch (this.scanner.tokenType) {\n                case WHITESPACE:\n                case COMMENT:\n                case SEMICOLON:\n                    this.scanner.next();\n                    break;\n\n                default:\n                    children.push(this.parseWithFallback(this.Declaration, consumeRaw));\n            }\n        }\n\n        return {\n            type: 'DeclarationList',\n            loc: this.getLocationFromList(children),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node, function(prev) {\n            if (prev.type === 'Declaration') {\n                this.chunk(';');\n            }\n        });\n    }\n};\n","var consumeNumber = require('../../tokenizer/utils').consumeNumber;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar DIMENSION = TYPE.Dimension;\n\nmodule.exports = {\n    name: 'Dimension',\n    structure: {\n        value: String,\n        unit: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var numberEnd = consumeNumber(this.scanner.source, start);\n\n        this.eat(DIMENSION);\n\n        return {\n            type: 'Dimension',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            value: this.scanner.source.substring(start, numberEnd),\n            unit: this.scanner.source.substring(numberEnd, this.scanner.tokenStart)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.value);\n        this.chunk(node.unit);\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\n\n// <function-token> <sequence> )\nmodule.exports = {\n    name: 'Function',\n    structure: {\n        name: String,\n        children: [[]]\n    },\n    parse: function(readSequence, recognizer) {\n        var start = this.scanner.tokenStart;\n        var name = this.consumeFunctionName();\n        var nameLowerCase = name.toLowerCase();\n        var children;\n\n        children = recognizer.hasOwnProperty(nameLowerCase)\n            ? recognizer[nameLowerCase].call(this, recognizer)\n            : readSequence.call(this, recognizer);\n\n        if (!this.scanner.eof) {\n            this.eat(RIGHTPARENTHESIS);\n        }\n\n        return {\n            type: 'Function',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            name: name,\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.name);\n        this.chunk('(');\n        this.children(node);\n        this.chunk(')');\n    },\n    walkContext: 'function'\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar HASH = TYPE.Hash;\n\n// '#' ident\nmodule.exports = {\n    name: 'HexColor',\n    structure: {\n        value: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n\n        this.eat(HASH);\n\n        return {\n            type: 'HexColor',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            value: this.scanner.substrToCursor(start + 1)\n        };\n    },\n    generate: function(node) {\n        this.chunk('#');\n        this.chunk(node.value);\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\n\nmodule.exports = {\n    name: 'Identifier',\n    structure: {\n        name: String\n    },\n    parse: function() {\n        return {\n            type: 'Identifier',\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\n            name: this.consume(IDENT)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.name);\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar HASH = TYPE.Hash;\n\n// <hash-token>\nmodule.exports = {\n    name: 'IdSelector',\n    structure: {\n        name: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n\n        // TODO: check value is an ident\n        this.eat(HASH);\n\n        return {\n            type: 'IdSelector',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            name: this.scanner.substrToCursor(start + 1)\n        };\n    },\n    generate: function(node) {\n        this.chunk('#');\n        this.chunk(node.name);\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar NUMBER = TYPE.Number;\nvar DIMENSION = TYPE.Dimension;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\nvar COLON = TYPE.Colon;\nvar DELIM = TYPE.Delim;\n\nmodule.exports = {\n    name: 'MediaFeature',\n    structure: {\n        name: String,\n        value: ['Identifier', 'Number', 'Dimension', 'Ratio', null]\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var name;\n        var value = null;\n\n        this.eat(LEFTPARENTHESIS);\n        this.scanner.skipSC();\n\n        name = this.consume(IDENT);\n        this.scanner.skipSC();\n\n        if (this.scanner.tokenType !== RIGHTPARENTHESIS) {\n            this.eat(COLON);\n            this.scanner.skipSC();\n\n            switch (this.scanner.tokenType) {\n                case NUMBER:\n                    if (this.lookupNonWSType(1) === DELIM) {\n                        value = this.Ratio();\n                    } else {\n                        value = this.Number();\n                    }\n\n                    break;\n\n                case DIMENSION:\n                    value = this.Dimension();\n                    break;\n\n                case IDENT:\n                    value = this.Identifier();\n\n                    break;\n\n                default:\n                    this.error('Number, dimension, ratio or identifier is expected');\n            }\n\n            this.scanner.skipSC();\n        }\n\n        this.eat(RIGHTPARENTHESIS);\n\n        return {\n            type: 'MediaFeature',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            name: name,\n            value: value\n        };\n    },\n    generate: function(node) {\n        this.chunk('(');\n        this.chunk(node.name);\n        if (node.value !== null) {\n            this.chunk(':');\n            this.node(node.value);\n        }\n        this.chunk(')');\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar IDENT = TYPE.Ident;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\n\nmodule.exports = {\n    name: 'MediaQuery',\n    structure: {\n        children: [[\n            'Identifier',\n            'MediaFeature',\n            'WhiteSpace'\n        ]]\n    },\n    parse: function() {\n        this.scanner.skipSC();\n\n        var children = this.createList();\n        var child = null;\n        var space = null;\n\n        scan:\n        while (!this.scanner.eof) {\n            switch (this.scanner.tokenType) {\n                case COMMENT:\n                    this.scanner.next();\n                    continue;\n\n                case WHITESPACE:\n                    space = this.WhiteSpace();\n                    continue;\n\n                case IDENT:\n                    child = this.Identifier();\n                    break;\n\n                case LEFTPARENTHESIS:\n                    child = this.MediaFeature();\n                    break;\n\n                default:\n                    break scan;\n            }\n\n            if (space !== null) {\n                children.push(space);\n                space = null;\n            }\n\n            children.push(child);\n        }\n\n        if (child === null) {\n            this.error('Identifier or parenthesis is expected');\n        }\n\n        return {\n            type: 'MediaQuery',\n            loc: this.getLocationFromList(children),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node);\n    }\n};\n","var COMMA = require('../../tokenizer').TYPE.Comma;\n\nmodule.exports = {\n    name: 'MediaQueryList',\n    structure: {\n        children: [[\n            'MediaQuery'\n        ]]\n    },\n    parse: function(relative) {\n        var children = this.createList();\n\n        this.scanner.skipSC();\n\n        while (!this.scanner.eof) {\n            children.push(this.MediaQuery(relative));\n\n            if (this.scanner.tokenType !== COMMA) {\n                break;\n            }\n\n            this.scanner.next();\n        }\n\n        return {\n            type: 'MediaQueryList',\n            loc: this.getLocationFromList(children),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node, function() {\n            this.chunk(',');\n        });\n    }\n};\n","module.exports = {\n    name: 'Nth',\n    structure: {\n        nth: ['AnPlusB', 'Identifier'],\n        selector: ['SelectorList', null]\n    },\n    parse: function(allowOfClause) {\n        this.scanner.skipSC();\n\n        var start = this.scanner.tokenStart;\n        var end = start;\n        var selector = null;\n        var query;\n\n        if (this.scanner.lookupValue(0, 'odd') || this.scanner.lookupValue(0, 'even')) {\n            query = this.Identifier();\n        } else {\n            query = this.AnPlusB();\n        }\n\n        this.scanner.skipSC();\n\n        if (allowOfClause && this.scanner.lookupValue(0, 'of')) {\n            this.scanner.next();\n\n            selector = this.SelectorList();\n\n            if (this.needPositions) {\n                end = this.getLastListNode(selector.children).loc.end.offset;\n            }\n        } else {\n            if (this.needPositions) {\n                end = query.loc.end.offset;\n            }\n        }\n\n        return {\n            type: 'Nth',\n            loc: this.getLocation(start, end),\n            nth: query,\n            selector: selector\n        };\n    },\n    generate: function(node) {\n        this.node(node.nth);\n        if (node.selector !== null) {\n            this.chunk(' of ');\n            this.node(node.selector);\n        }\n    }\n};\n","var NUMBER = require('../../tokenizer').TYPE.Number;\n\nmodule.exports = {\n    name: 'Number',\n    structure: {\n        value: String\n    },\n    parse: function() {\n        return {\n            type: 'Number',\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\n            value: this.consume(NUMBER)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.value);\n    }\n};\n","// '/' | '*' | ',' | ':' | '+' | '-'\nmodule.exports = {\n    name: 'Operator',\n    structure: {\n        value: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n\n        this.scanner.next();\n\n        return {\n            type: 'Operator',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            value: this.scanner.substrToCursor(start)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.value);\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\n\nmodule.exports = {\n    name: 'Parentheses',\n    structure: {\n        children: [[]]\n    },\n    parse: function(readSequence, recognizer) {\n        var start = this.scanner.tokenStart;\n        var children = null;\n\n        this.eat(LEFTPARENTHESIS);\n\n        children = readSequence.call(this, recognizer);\n\n        if (!this.scanner.eof) {\n            this.eat(RIGHTPARENTHESIS);\n        }\n\n        return {\n            type: 'Parentheses',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.chunk('(');\n        this.children(node);\n        this.chunk(')');\n    }\n};\n","var consumeNumber = require('../../tokenizer/utils').consumeNumber;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar PERCENTAGE = TYPE.Percentage;\n\nmodule.exports = {\n    name: 'Percentage',\n    structure: {\n        value: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var numberEnd = consumeNumber(this.scanner.source, start);\n\n        this.eat(PERCENTAGE);\n\n        return {\n            type: 'Percentage',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            value: this.scanner.source.substring(start, numberEnd)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.value);\n        this.chunk('%');\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar FUNCTION = TYPE.Function;\nvar COLON = TYPE.Colon;\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\n\n// : [ <ident> | <function-token> <any-value>? ) ]\nmodule.exports = {\n    name: 'PseudoClassSelector',\n    structure: {\n        name: String,\n        children: [['Raw'], null]\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var children = null;\n        var name;\n        var nameLowerCase;\n\n        this.eat(COLON);\n\n        if (this.scanner.tokenType === FUNCTION) {\n            name = this.consumeFunctionName();\n            nameLowerCase = name.toLowerCase();\n\n            if (this.pseudo.hasOwnProperty(nameLowerCase)) {\n                this.scanner.skipSC();\n                children = this.pseudo[nameLowerCase].call(this);\n                this.scanner.skipSC();\n            } else {\n                children = this.createList();\n                children.push(\n                    this.Raw(this.scanner.tokenIndex, null, false)\n                );\n            }\n\n            this.eat(RIGHTPARENTHESIS);\n        } else {\n            name = this.consume(IDENT);\n        }\n\n        return {\n            type: 'PseudoClassSelector',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            name: name,\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.chunk(':');\n        this.chunk(node.name);\n\n        if (node.children !== null) {\n            this.chunk('(');\n            this.children(node);\n            this.chunk(')');\n        }\n    },\n    walkContext: 'function'\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar FUNCTION = TYPE.Function;\nvar COLON = TYPE.Colon;\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\n\n// :: [ <ident> | <function-token> <any-value>? ) ]\nmodule.exports = {\n    name: 'PseudoElementSelector',\n    structure: {\n        name: String,\n        children: [['Raw'], null]\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var children = null;\n        var name;\n        var nameLowerCase;\n\n        this.eat(COLON);\n        this.eat(COLON);\n\n        if (this.scanner.tokenType === FUNCTION) {\n            name = this.consumeFunctionName();\n            nameLowerCase = name.toLowerCase();\n\n            if (this.pseudo.hasOwnProperty(nameLowerCase)) {\n                this.scanner.skipSC();\n                children = this.pseudo[nameLowerCase].call(this);\n                this.scanner.skipSC();\n            } else {\n                children = this.createList();\n                children.push(\n                    this.Raw(this.scanner.tokenIndex, null, false)\n                );\n            }\n\n            this.eat(RIGHTPARENTHESIS);\n        } else {\n            name = this.consume(IDENT);\n        }\n\n        return {\n            type: 'PseudoElementSelector',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            name: name,\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.chunk('::');\n        this.chunk(node.name);\n\n        if (node.children !== null) {\n            this.chunk('(');\n            this.children(node);\n            this.chunk(')');\n        }\n    },\n    walkContext: 'function'\n};\n","var isDigit = require('../../tokenizer').isDigit;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar NUMBER = TYPE.Number;\nvar DELIM = TYPE.Delim;\nvar SOLIDUS = 0x002F;  // U+002F SOLIDUS (/)\nvar FULLSTOP = 0x002E; // U+002E FULL STOP (.)\n\n// Terms of <ratio> should be a positive numbers (not zero or negative)\n// (see https://drafts.csswg.org/mediaqueries-3/#values)\n// However, -o-min-device-pixel-ratio takes fractional values as a ratio's term\n// and this is using by various sites. Therefore we relax checking on parse\n// to test a term is unsigned number without an exponent part.\n// Additional checking may be applied on lexer validation.\nfunction consumeNumber() {\n    this.scanner.skipWS();\n\n    var value = this.consume(NUMBER);\n\n    for (var i = 0; i < value.length; i++) {\n        var code = value.charCodeAt(i);\n        if (!isDigit(code) && code !== FULLSTOP) {\n            this.error('Unsigned number is expected', this.scanner.tokenStart - value.length + i);\n        }\n    }\n\n    if (Number(value) === 0) {\n        this.error('Zero number is not allowed', this.scanner.tokenStart - value.length);\n    }\n\n    return value;\n}\n\n// <positive-integer> S* '/' S* <positive-integer>\nmodule.exports = {\n    name: 'Ratio',\n    structure: {\n        left: String,\n        right: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var left = consumeNumber.call(this);\n        var right;\n\n        this.scanner.skipWS();\n\n        if (!this.scanner.isDelim(SOLIDUS)) {\n            this.error('Solidus is expected');\n        }\n        this.eat(DELIM);\n        right = consumeNumber.call(this);\n\n        return {\n            type: 'Ratio',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            left: left,\n            right: right\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.left);\n        this.chunk('/');\n        this.chunk(node.right);\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('./Raw').mode;\n\nvar LEFTCURLYBRACKET = TYPE.LeftCurlyBracket;\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, rawMode.leftCurlyBracket, true);\n}\n\nfunction consumePrelude() {\n    var prelude = this.SelectorList();\n\n    if (prelude.type !== 'Raw' &&\n        this.scanner.eof === false &&\n        this.scanner.tokenType !== LEFTCURLYBRACKET) {\n        this.error();\n    }\n\n    return prelude;\n}\n\nmodule.exports = {\n    name: 'Rule',\n    structure: {\n        prelude: ['SelectorList', 'Raw'],\n        block: ['Block']\n    },\n    parse: function() {\n        var startToken = this.scanner.tokenIndex;\n        var startOffset = this.scanner.tokenStart;\n        var prelude;\n        var block;\n\n        if (this.parseRulePrelude) {\n            prelude = this.parseWithFallback(consumePrelude, consumeRaw);\n        } else {\n            prelude = consumeRaw.call(this, startToken);\n        }\n\n        block = this.Block(true);\n\n        return {\n            type: 'Rule',\n            loc: this.getLocation(startOffset, this.scanner.tokenStart),\n            prelude: prelude,\n            block: block\n        };\n    },\n    generate: function(node) {\n        this.node(node.prelude);\n        this.node(node.block);\n    },\n    walkContext: 'rule'\n};\n","module.exports = {\n    name: 'Selector',\n    structure: {\n        children: [[\n            'TypeSelector',\n            'IdSelector',\n            'ClassSelector',\n            'AttributeSelector',\n            'PseudoClassSelector',\n            'PseudoElementSelector',\n            'Combinator',\n            'WhiteSpace'\n        ]]\n    },\n    parse: function() {\n        var children = this.readSequence(this.scope.Selector);\n\n        // nothing were consumed\n        if (this.getFirstListNode(children) === null) {\n            this.error('Selector is expected');\n        }\n\n        return {\n            type: 'Selector',\n            loc: this.getLocationFromList(children),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node);\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar COMMA = TYPE.Comma;\n\nmodule.exports = {\n    name: 'SelectorList',\n    structure: {\n        children: [[\n            'Selector',\n            'Raw'\n        ]]\n    },\n    parse: function() {\n        var children = this.createList();\n\n        while (!this.scanner.eof) {\n            children.push(this.Selector());\n\n            if (this.scanner.tokenType === COMMA) {\n                this.scanner.next();\n                continue;\n            }\n\n            break;\n        }\n\n        return {\n            type: 'SelectorList',\n            loc: this.getLocationFromList(children),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node, function() {\n            this.chunk(',');\n        });\n    },\n    walkContext: 'selector'\n};\n","var STRING = require('../../tokenizer').TYPE.String;\n\nmodule.exports = {\n    name: 'String',\n    structure: {\n        value: String\n    },\n    parse: function() {\n        return {\n            type: 'String',\n            loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\n            value: this.consume(STRING)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.value);\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar ATKEYWORD = TYPE.AtKeyword;\nvar CDO = TYPE.CDO;\nvar CDC = TYPE.CDC;\nvar EXCLAMATIONMARK = 0x0021; // U+0021 EXCLAMATION MARK (!)\n\nfunction consumeRaw(startToken) {\n    return this.Raw(startToken, null, false);\n}\n\nmodule.exports = {\n    name: 'StyleSheet',\n    structure: {\n        children: [[\n            'Comment',\n            'CDO',\n            'CDC',\n            'Atrule',\n            'Rule',\n            'Raw'\n        ]]\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var children = this.createList();\n        var child;\n\n        scan:\n        while (!this.scanner.eof) {\n            switch (this.scanner.tokenType) {\n                case WHITESPACE:\n                    this.scanner.next();\n                    continue;\n\n                case COMMENT:\n                    // ignore comments except exclamation comments (i.e. /*! .. */) on top level\n                    if (this.scanner.source.charCodeAt(this.scanner.tokenStart + 2) !== EXCLAMATIONMARK) {\n                        this.scanner.next();\n                        continue;\n                    }\n\n                    child = this.Comment();\n                    break;\n\n                case CDO: // <!--\n                    child = this.CDO();\n                    break;\n\n                case CDC: // -->\n                    child = this.CDC();\n                    break;\n\n                // CSS Syntax Module Level 3\n                // §2.2 Error handling\n                // At the \"top level\" of a stylesheet, an <at-keyword-token> starts an at-rule.\n                case ATKEYWORD:\n                    child = this.parseWithFallback(this.Atrule, consumeRaw);\n                    break;\n\n                // Anything else starts a qualified rule ...\n                default:\n                    child = this.parseWithFallback(this.Rule, consumeRaw);\n            }\n\n            children.push(child);\n        }\n\n        return {\n            type: 'StyleSheet',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node);\n    },\n    walkContext: 'stylesheet'\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar ASTERISK = 0x002A;     // U+002A ASTERISK (*)\nvar VERTICALLINE = 0x007C; // U+007C VERTICAL LINE (|)\n\nfunction eatIdentifierOrAsterisk() {\n    if (this.scanner.tokenType !== IDENT &&\n        this.scanner.isDelim(ASTERISK) === false) {\n        this.error('Identifier or asterisk is expected');\n    }\n\n    this.scanner.next();\n}\n\n// ident\n// ident|ident\n// ident|*\n// *\n// *|ident\n// *|*\n// |ident\n// |*\nmodule.exports = {\n    name: 'TypeSelector',\n    structure: {\n        name: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n\n        if (this.scanner.isDelim(VERTICALLINE)) {\n            this.scanner.next();\n            eatIdentifierOrAsterisk.call(this);\n        } else {\n            eatIdentifierOrAsterisk.call(this);\n\n            if (this.scanner.isDelim(VERTICALLINE)) {\n                this.scanner.next();\n                eatIdentifierOrAsterisk.call(this);\n            }\n        }\n\n        return {\n            type: 'TypeSelector',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            name: this.scanner.substrToCursor(start)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.name);\n    }\n};\n","var isHexDigit = require('../../tokenizer').isHexDigit;\nvar cmpChar = require('../../tokenizer').cmpChar;\nvar TYPE = require('../../tokenizer').TYPE;\nvar NAME = require('../../tokenizer').NAME;\n\nvar IDENT = TYPE.Ident;\nvar NUMBER = TYPE.Number;\nvar DIMENSION = TYPE.Dimension;\nvar PLUSSIGN = 0x002B;     // U+002B PLUS SIGN (+)\nvar HYPHENMINUS = 0x002D;  // U+002D HYPHEN-MINUS (-)\nvar QUESTIONMARK = 0x003F; // U+003F QUESTION MARK (?)\nvar U = 0x0075;            // U+0075 LATIN SMALL LETTER U (u)\n\nfunction eatHexSequence(offset, allowDash) {\n    for (var pos = this.scanner.tokenStart + offset, len = 0; pos < this.scanner.tokenEnd; pos++) {\n        var code = this.scanner.source.charCodeAt(pos);\n\n        if (code === HYPHENMINUS && allowDash && len !== 0) {\n            if (eatHexSequence.call(this, offset + len + 1, false) === 0) {\n                this.error();\n            }\n\n            return -1;\n        }\n\n        if (!isHexDigit(code)) {\n            this.error(\n                allowDash && len !== 0\n                    ? 'HyphenMinus' + (len < 6 ? ' or hex digit' : '') + ' is expected'\n                    : (len < 6 ? 'Hex digit is expected' : 'Unexpected input'),\n                pos\n            );\n        }\n\n        if (++len > 6) {\n            this.error('Too many hex digits', pos);\n        };\n    }\n\n    this.scanner.next();\n    return len;\n}\n\nfunction eatQuestionMarkSequence(max) {\n    var count = 0;\n\n    while (this.scanner.isDelim(QUESTIONMARK)) {\n        if (++count > max) {\n            this.error('Too many question marks');\n        }\n\n        this.scanner.next();\n    }\n}\n\nfunction startsWith(code) {\n    if (this.scanner.source.charCodeAt(this.scanner.tokenStart) !== code) {\n        this.error(NAME[code] + ' is expected');\n    }\n}\n\n// https://drafts.csswg.org/css-syntax/#urange\n// Informally, the <urange> production has three forms:\n// U+0001\n//      Defines a range consisting of a single code point, in this case the code point \"1\".\n// U+0001-00ff\n//      Defines a range of codepoints between the first and the second value, in this case\n//      the range between \"1\" and \"ff\" (255 in decimal) inclusive.\n// U+00??\n//      Defines a range of codepoints where the \"?\" characters range over all hex digits,\n//      in this case defining the same as the value U+0000-00ff.\n// In each form, a maximum of 6 digits is allowed for each hexadecimal number (if you treat \"?\" as a hexadecimal digit).\n//\n// <urange> =\n//   u '+' <ident-token> '?'* |\n//   u <dimension-token> '?'* |\n//   u <number-token> '?'* |\n//   u <number-token> <dimension-token> |\n//   u <number-token> <number-token> |\n//   u '+' '?'+\nfunction scanUnicodeRange() {\n    var hexLength = 0;\n\n    // u '+' <ident-token> '?'*\n    // u '+' '?'+\n    if (this.scanner.isDelim(PLUSSIGN)) {\n        this.scanner.next();\n\n        if (this.scanner.tokenType === IDENT) {\n            hexLength = eatHexSequence.call(this, 0, true);\n            if (hexLength > 0) {\n                eatQuestionMarkSequence.call(this, 6 - hexLength);\n            }\n            return;\n        }\n\n        if (this.scanner.isDelim(QUESTIONMARK)) {\n            this.scanner.next();\n            eatQuestionMarkSequence.call(this, 5);\n            return;\n        }\n\n        this.error('Hex digit or question mark is expected');\n        return;\n    }\n\n    // u <number-token> '?'*\n    // u <number-token> <dimension-token>\n    // u <number-token> <number-token>\n    if (this.scanner.tokenType === NUMBER) {\n        startsWith.call(this, PLUSSIGN);\n        hexLength = eatHexSequence.call(this, 1, true);\n\n        if (this.scanner.isDelim(QUESTIONMARK)) {\n            eatQuestionMarkSequence.call(this, 6 - hexLength);\n            return;\n        }\n\n        if (this.scanner.tokenType === DIMENSION ||\n            this.scanner.tokenType === NUMBER) {\n            startsWith.call(this, HYPHENMINUS);\n            eatHexSequence.call(this, 1, false);\n            return;\n        }\n\n        return;\n    }\n\n    // u <dimension-token> '?'*\n    if (this.scanner.tokenType === DIMENSION) {\n        startsWith.call(this, PLUSSIGN);\n        hexLength = eatHexSequence.call(this, 1, true);\n\n        if (hexLength > 0) {\n            eatQuestionMarkSequence.call(this, 6 - hexLength);\n        }\n\n        return;\n    }\n\n    this.error();\n}\n\nmodule.exports = {\n    name: 'UnicodeRange',\n    structure: {\n        value: String\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n\n        // U or u\n        if (!cmpChar(this.scanner.source, start, U)) {\n            this.error('U is expected');\n        }\n\n        if (!cmpChar(this.scanner.source, start + 1, PLUSSIGN)) {\n            this.error('Plus sign is expected');\n        }\n\n        this.scanner.next();\n        scanUnicodeRange.call(this);\n\n        return {\n            type: 'UnicodeRange',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            value: this.scanner.substrToCursor(start)\n        };\n    },\n    generate: function(node) {\n        this.chunk(node.value);\n    }\n};\n","var isWhiteSpace = require('../../tokenizer').isWhiteSpace;\nvar cmpStr = require('../../tokenizer').cmpStr;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar RIGHTPARENTHESIS = TYPE.RightParenthesis;\n\n// <url-token> | <function-token> <string> )\nmodule.exports = {\n    name: 'Url',\n    structure: {\n        value: ['String', 'Raw']\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var value;\n\n        switch (this.scanner.tokenType) {\n            case URL:\n                var rawStart = start + 4;\n                var rawEnd = this.scanner.tokenEnd - 1;\n\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawStart))) {\n                    rawStart++;\n                }\n\n                while (rawStart < rawEnd && isWhiteSpace(this.scanner.source.charCodeAt(rawEnd - 1))) {\n                    rawEnd--;\n                }\n\n                value = {\n                    type: 'Raw',\n                    loc: this.getLocation(rawStart, rawEnd),\n                    value: this.scanner.source.substring(rawStart, rawEnd)\n                };\n\n                this.eat(URL);\n                break;\n\n            case FUNCTION:\n                if (!cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')) {\n                    this.error('Function name must be `url`');\n                }\n\n                this.eat(FUNCTION);\n                this.scanner.skipSC();\n                value = this.String();\n                this.scanner.skipSC();\n                this.eat(RIGHTPARENTHESIS);\n                break;\n\n            default:\n                this.error('Url or Function is expected');\n        }\n\n        return {\n            type: 'Url',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            value: value\n        };\n    },\n    generate: function(node) {\n        this.chunk('url');\n        this.chunk('(');\n        this.node(node.value);\n        this.chunk(')');\n    }\n};\n","module.exports = {\n    name: 'Value',\n    structure: {\n        children: [[]]\n    },\n    parse: function() {\n        var start = this.scanner.tokenStart;\n        var children = this.readSequence(this.scope.Value);\n\n        return {\n            type: 'Value',\n            loc: this.getLocation(start, this.scanner.tokenStart),\n            children: children\n        };\n    },\n    generate: function(node) {\n        this.children(node);\n    }\n};\n","var WHITESPACE = require('../../tokenizer').TYPE.WhiteSpace;\nvar SPACE = Object.freeze({\n    type: 'WhiteSpace',\n    loc: null,\n    value: ' '\n});\n\nmodule.exports = {\n    name: 'WhiteSpace',\n    structure: {\n        value: String\n    },\n    parse: function() {\n        this.eat(WHITESPACE);\n        return SPACE;\n\n        // return {\n        //     type: 'WhiteSpace',\n        //     loc: this.getLocation(this.scanner.tokenStart, this.scanner.tokenEnd),\n        //     value: this.consume(WHITESPACE)\n        // };\n    },\n    generate: function(node) {\n        this.chunk(node.value);\n    }\n};\n","module.exports = {\n    AnPlusB: require('./AnPlusB'),\n    Atrule: require('./Atrule'),\n    AtrulePrelude: require('./AtrulePrelude'),\n    AttributeSelector: require('./AttributeSelector'),\n    Block: require('./Block'),\n    Brackets: require('./Brackets'),\n    CDC: require('./CDC'),\n    CDO: require('./CDO'),\n    ClassSelector: require('./ClassSelector'),\n    Combinator: require('./Combinator'),\n    Comment: require('./Comment'),\n    Declaration: require('./Declaration'),\n    DeclarationList: require('./DeclarationList'),\n    Dimension: require('./Dimension'),\n    Function: require('./Function'),\n    HexColor: require('./HexColor'),\n    Identifier: require('./Identifier'),\n    IdSelector: require('./IdSelector'),\n    MediaFeature: require('./MediaFeature'),\n    MediaQuery: require('./MediaQuery'),\n    MediaQueryList: require('./MediaQueryList'),\n    Nth: require('./Nth'),\n    Number: require('./Number'),\n    Operator: require('./Operator'),\n    Parentheses: require('./Parentheses'),\n    Percentage: require('./Percentage'),\n    PseudoClassSelector: require('./PseudoClassSelector'),\n    PseudoElementSelector: require('./PseudoElementSelector'),\n    Ratio: require('./Ratio'),\n    Raw: require('./Raw'),\n    Rule: require('./Rule'),\n    Selector: require('./Selector'),\n    SelectorList: require('./SelectorList'),\n    String: require('./String'),\n    StyleSheet: require('./StyleSheet'),\n    TypeSelector: require('./TypeSelector'),\n    UnicodeRange: require('./UnicodeRange'),\n    Url: require('./Url'),\n    Value: require('./Value'),\n    WhiteSpace: require('./WhiteSpace')\n};\n","var data = require('../../../data');\n\nmodule.exports = {\n    generic: true,\n    types: data.types,\n    atrules: data.atrules,\n    properties: data.properties,\n    node: require('../node')\n};\n","var cmpChar = require('../../tokenizer').cmpChar;\nvar cmpStr = require('../../tokenizer').cmpStr;\nvar TYPE = require('../../tokenizer').TYPE;\n\nvar IDENT = TYPE.Ident;\nvar STRING = TYPE.String;\nvar NUMBER = TYPE.Number;\nvar FUNCTION = TYPE.Function;\nvar URL = TYPE.Url;\nvar HASH = TYPE.Hash;\nvar DIMENSION = TYPE.Dimension;\nvar PERCENTAGE = TYPE.Percentage;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar COMMA = TYPE.Comma;\nvar DELIM = TYPE.Delim;\nvar NUMBERSIGN = 0x0023;  // U+0023 NUMBER SIGN (#)\nvar ASTERISK = 0x002A;    // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B;    // U+002B PLUS SIGN (+)\nvar HYPHENMINUS = 0x002D; // U+002D HYPHEN-MINUS (-)\nvar SOLIDUS = 0x002F;     // U+002F SOLIDUS (/)\nvar U = 0x0075;           // U+0075 LATIN SMALL LETTER U (u)\n\nmodule.exports = function defaultRecognizer(context) {\n    switch (this.scanner.tokenType) {\n        case HASH:\n            return this.HexColor();\n\n        case COMMA:\n            context.space = null;\n            context.ignoreWSAfter = true;\n            return this.Operator();\n\n        case LEFTPARENTHESIS:\n            return this.Parentheses(this.readSequence, context.recognizer);\n\n        case LEFTSQUAREBRACKET:\n            return this.Brackets(this.readSequence, context.recognizer);\n\n        case STRING:\n            return this.String();\n\n        case DIMENSION:\n            return this.Dimension();\n\n        case PERCENTAGE:\n            return this.Percentage();\n\n        case NUMBER:\n            return this.Number();\n\n        case FUNCTION:\n            return cmpStr(this.scanner.source, this.scanner.tokenStart, this.scanner.tokenEnd, 'url(')\n                ? this.Url()\n                : this.Function(this.readSequence, context.recognizer);\n\n        case URL:\n            return this.Url();\n\n        case IDENT:\n            // check for unicode range, it should start with u+ or U+\n            if (cmpChar(this.scanner.source, this.scanner.tokenStart, U) &&\n                cmpChar(this.scanner.source, this.scanner.tokenStart + 1, PLUSSIGN)) {\n                return this.UnicodeRange();\n            } else {\n                return this.Identifier();\n            }\n\n        case DELIM:\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n\n            if (code === SOLIDUS ||\n                code === ASTERISK ||\n                code === PLUSSIGN ||\n                code === HYPHENMINUS) {\n                return this.Operator(); // TODO: replace with Delim\n            }\n\n            // TODO: produce a node with Delim node type\n\n            if (code === NUMBERSIGN) {\n                this.error('Hex or identifier is expected', this.scanner.tokenStart + 1);\n            }\n\n            break;\n    }\n};\n","module.exports = {\n    getNode: require('./default')\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar DELIM = TYPE.Delim;\nvar IDENT = TYPE.Ident;\nvar DIMENSION = TYPE.Dimension;\nvar PERCENTAGE = TYPE.Percentage;\nvar NUMBER = TYPE.Number;\nvar HASH = TYPE.Hash;\nvar COLON = TYPE.Colon;\nvar LEFTSQUAREBRACKET = TYPE.LeftSquareBracket;\nvar NUMBERSIGN = 0x0023;      // U+0023 NUMBER SIGN (#)\nvar ASTERISK = 0x002A;        // U+002A ASTERISK (*)\nvar PLUSSIGN = 0x002B;        // U+002B PLUS SIGN (+)\nvar SOLIDUS = 0x002F;         // U+002F SOLIDUS (/)\nvar FULLSTOP = 0x002E;        // U+002E FULL STOP (.)\nvar GREATERTHANSIGN = 0x003E; // U+003E GREATER-THAN SIGN (>)\nvar VERTICALLINE = 0x007C;    // U+007C VERTICAL LINE (|)\nvar TILDE = 0x007E;           // U+007E TILDE (~)\n\nfunction getNode(context) {\n    switch (this.scanner.tokenType) {\n        case LEFTSQUAREBRACKET:\n            return this.AttributeSelector();\n\n        case HASH:\n            return this.IdSelector();\n\n        case COLON:\n            if (this.scanner.lookupType(1) === COLON) {\n                return this.PseudoElementSelector();\n            } else {\n                return this.PseudoClassSelector();\n            }\n\n        case IDENT:\n            return this.TypeSelector();\n\n        case NUMBER:\n        case PERCENTAGE:\n            return this.Percentage();\n\n        case DIMENSION:\n            // throws when .123ident\n            if (this.scanner.source.charCodeAt(this.scanner.tokenStart) === FULLSTOP) {\n                this.error('Identifier is expected', this.scanner.tokenStart + 1);\n            }\n            break;\n\n        case DELIM:\n            var code = this.scanner.source.charCodeAt(this.scanner.tokenStart);\n\n            switch (code) {\n                case PLUSSIGN:\n                case GREATERTHANSIGN:\n                case TILDE:\n                    context.space = null;\n                    context.ignoreWSAfter = true;\n                    return this.Combinator();\n\n                case SOLIDUS:  // /deep/\n                    return this.Combinator();\n\n                case FULLSTOP:\n                    return this.ClassSelector();\n\n                case ASTERISK:\n                case VERTICALLINE:\n                    return this.TypeSelector();\n\n                case NUMBERSIGN:\n                    return this.IdSelector();\n            }\n\n            break;\n    }\n};\n\nmodule.exports = {\n    getNode: getNode\n};\n","// https://drafts.csswg.org/css-images-4/#element-notation\n// https://developer.mozilla.org/en-US/docs/Web/CSS/element\nmodule.exports = function() {\n    this.scanner.skipSC();\n\n    var children = this.createSingleNodeList(\n        this.IdSelector()\n    );\n\n    this.scanner.skipSC();\n\n    return children;\n};\n","// legacy IE function\n// expression( <any-value> )\nmodule.exports = function() {\n    return this.createSingleNodeList(\n        this.Raw(this.scanner.tokenIndex, null, false)\n    );\n};\n","var TYPE = require('../../tokenizer').TYPE;\nvar rawMode = require('../node/Raw').mode;\n\nvar COMMA = TYPE.Comma;\n\n// var( <ident> , <value>? )\nmodule.exports = function() {\n    var children = this.createList();\n\n    this.scanner.skipSC();\n\n    // NOTE: Don't check more than a first argument is an ident, rest checks are for lexer\n    children.push(this.Identifier());\n\n    this.scanner.skipSC();\n\n    if (this.scanner.tokenType === COMMA) {\n        children.push(this.Operator());\n        children.push(this.parseCustomProperty\n            ? this.Value(null)\n            : this.Raw(this.scanner.tokenIndex, rawMode.exclamationMarkOrSemicolon, false)\n        );\n    }\n\n    return children;\n};\n","module.exports = {\n    getNode: require('./default'),\n    '-moz-element': require('../function/element'),\n    'element': require('../function/element'),\n    'expression': require('../function/expression'),\n    'var': require('../function/var')\n};\n","module.exports = {\n    AtrulePrelude: require('./atrulePrelude'),\n    Selector: require('./selector'),\n    Value: require('./value')\n};\n","module.exports = {\n    parse: {\n        prelude: null,\n        block: function() {\n            return this.Block(true);\n        }\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar STRING = TYPE.String;\nvar IDENT = TYPE.Ident;\nvar URL = TYPE.Url;\nvar FUNCTION = TYPE.Function;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\n\nmodule.exports = {\n    parse: {\n        prelude: function() {\n            var children = this.createList();\n\n            this.scanner.skipSC();\n\n            switch (this.scanner.tokenType) {\n                case STRING:\n                    children.push(this.String());\n                    break;\n\n                case URL:\n                case FUNCTION:\n                    children.push(this.Url());\n                    break;\n\n                default:\n                    this.error('String or url() is expected');\n            }\n\n            if (this.lookupNonWSType(0) === IDENT ||\n                this.lookupNonWSType(0) === LEFTPARENTHESIS) {\n                children.push(this.WhiteSpace());\n                children.push(this.MediaQueryList());\n            }\n\n            return children;\n        },\n        block: null\n    }\n};\n","module.exports = {\n    parse: {\n        prelude: function() {\n            return this.createSingleNodeList(\n                this.MediaQueryList()\n            );\n        },\n        block: function() {\n            return this.Block(false);\n        }\n    }\n};\n","module.exports = {\n    parse: {\n        prelude: function() {\n            return this.createSingleNodeList(\n                this.SelectorList()\n            );\n        },\n        block: function() {\n            return this.Block(true);\n        }\n    }\n};\n","var TYPE = require('../../tokenizer').TYPE;\n\nvar WHITESPACE = TYPE.WhiteSpace;\nvar COMMENT = TYPE.Comment;\nvar IDENT = TYPE.Ident;\nvar FUNCTION = TYPE.Function;\nvar COLON = TYPE.Colon;\nvar LEFTPARENTHESIS = TYPE.LeftParenthesis;\n\nfunction consumeRaw() {\n    return this.createSingleNodeList(\n        this.Raw(this.scanner.tokenIndex, null, false)\n    );\n}\n\nfunction parentheses() {\n    this.scanner.skipSC();\n\n    if (this.scanner.tokenType === IDENT &&\n        this.lookupNonWSType(1) === COLON) {\n        return this.createSingleNodeList(\n            this.Declaration()\n        );\n    }\n\n    return readSequence.call(this);\n}\n\nfunction readSequence() {\n    var children = this.createList();\n    var space = null;\n    var child;\n\n    this.scanner.skipSC();\n\n    scan:\n    while (!this.scanner.eof) {\n        switch (this.scanner.tokenType) {\n            case WHITESPACE:\n                space = this.WhiteSpace();\n                continue;\n\n            case COMMENT:\n                this.scanner.next();\n                continue;\n\n            case FUNCTION:\n                child = this.Function(consumeRaw, this.scope.AtrulePrelude);\n                break;\n\n            case IDENT:\n                child = this.Identifier();\n                break;\n\n            case LEFTPARENTHESIS:\n                child = this.Parentheses(parentheses, this.scope.AtrulePrelude);\n                break;\n\n            default:\n                break scan;\n        }\n\n        if (space !== null) {\n            children.push(space);\n            space = null;\n        }\n\n        children.push(child);\n    }\n\n    return children;\n}\n\nmodule.exports = {\n    parse: {\n        prelude: function() {\n            var children = readSequence.call(this);\n\n            if (this.getFirstListNode(children) === null) {\n                this.error('Condition is expected');\n            }\n\n            return children;\n        },\n        block: function() {\n            return this.Block(false);\n        }\n    }\n};\n","module.exports = {\n    'font-face': require('./font-face'),\n    'import': require('./import'),\n    'media': require('./media'),\n    'page': require('./page'),\n    'supports': require('./supports')\n};\n","module.exports = {\n    parse: function() {\n        return this.createSingleNodeList(\n            this.Identifier()\n        );\n    }\n};\n","module.exports = {\n    parse: function() {\n        return this.createSingleNodeList(\n            this.SelectorList()\n        );\n    }\n};\n","module.exports = {\n    parse: function() {\n        return this.createSingleNodeList(\n            this.Identifier()\n        );\n    }\n};\n","module.exports = {\n    parse: function selectorList() {\n        return this.createSingleNodeList(\n            this.SelectorList()\n        );\n    }\n};\n","module.exports = require('./common/selectorList');\n","module.exports = require('./common/selectorList');\n","var ALLOW_OF_CLAUSE = true;\n\nmodule.exports = {\n    parse: function nthWithOfClause() {\n        return this.createSingleNodeList(\n            this.Nth(ALLOW_OF_CLAUSE)\n        );\n    }\n};\n","module.exports = require('./common/nthWithOfClause');\n","module.exports = require('./common/nthWithOfClause');\n","var DISALLOW_OF_CLAUSE = false;\n\nmodule.exports = {\n    parse: function nth() {\n        return this.createSingleNodeList(\n            this.Nth(DISALLOW_OF_CLAUSE)\n        );\n    }\n};\n","module.exports = require('./common/nth');\n","module.exports = require('./common/nth');\n","module.exports = {\n    parse: function compoundSelector() {\n        return this.createSingleNodeList(\n            this.Selector()\n        );\n    }\n};\n","module.exports = {\n    'dir': require('./dir'),\n    'has': require('./has'),\n    'lang': require('./lang'),\n    'matches': require('./matches'),\n    'not': require('./not'),\n    'nth-child': require('./nth-child'),\n    'nth-last-child': require('./nth-last-child'),\n    'nth-last-of-type': require('./nth-last-of-type'),\n    'nth-of-type': require('./nth-of-type'),\n    'slotted': require('./slotted')\n};\n","module.exports = {\n    parseContext: {\n        default: 'StyleSheet',\n        stylesheet: 'StyleSheet',\n        atrule: 'Atrule',\n        atrulePrelude: function(options) {\n            return this.AtrulePrelude(options.atrule ? String(options.atrule) : null);\n        },\n        mediaQueryList: 'MediaQueryList',\n        mediaQuery: 'MediaQuery',\n        rule: 'Rule',\n        selectorList: 'SelectorList',\n        selector: 'Selector',\n        block: function() {\n            return this.Block(true);\n        },\n        declarationList: 'DeclarationList',\n        declaration: 'Declaration',\n        value: 'Value'\n    },\n    scope: require('../scope'),\n    atrule: require('../atrule'),\n    pseudo: require('../pseudo'),\n    node: require('../node')\n};\n","module.exports = {\n    node: require('../node')\n};\n","function merge() {\n    var dest = {};\n\n    for (var i = 0; i < arguments.length; i++) {\n        var src = arguments[i];\n        for (var key in src) {\n            dest[key] = src[key];\n        }\n    }\n\n    return dest;\n}\n\nmodule.exports = require('./create').create(\n    merge(\n        require('./config/lexer'),\n        require('./config/parser'),\n        require('./config/walker')\n    )\n);\n","module.exports = require('./syntax');\n","module.exports = {\n    type: 'assignmentExpression',\n    transform(node, ctx) {\n        // member expression\n        let left;\n        let right;\n\n        if(node.left.type == 'TypeSelector') {\n            left = this.Identifier(node.left);\n        } else if(node.left) {\n            left = this.MemberExpression({ object: ctx.param, property: node.left }); // `${ctx.param}.${node.left}`;\n        } else {\n            this.error(node.left);\n        }\n\n        if(node.right.type == 'IdSelector') {\n            right = this.CallExpression(node.right, ctx);\n        } else if(node.right.type == 'Block') {\n            right = this.ObjectExpression(node.right, ctx);\n        } else if(node.right.type == 'Value') {\n            right = this.ValueExpression(node.right, ctx);\n        } else {\n            this.error(node.right);\n        }\n\n        return {\n            type: 'assignmentExpression',\n            operator: '=',\n            left,\n            right\n        };\n    },\n    transpile(node, ctx) {\n        this.Node(node.left);\n        this.emit(` ${node.operator} `);\n        this.Node(node.right);\n    }\n}","module.exports = {\n    type: 'binaryExpression',\n    transform(left, right, operator) {\n        return {\n            type: 'binaryExpression',\n            left,\n            operator,\n            right\n        };\n    },\n    transpile(node) {\n        this.Node(node.left);\n        this.emit(` ${node.operator} `);\n        this.Node(node.right);\n    }\n}","module.exports = {\n    type: 'blockStatement',\n    transform(node, ctx) {\n        const body = [];\n        \n        node.children.forEach(child => {\n            const statement = this.AssignmentExpression({ left: child.property, right: child.value }, ctx);\n            body.push(statement);\n        });\n\n        const returnStatement = this.ReturnStatement(null, ctx);\n        body.push(returnStatement);\n\n        return {\n            type: 'blockStatement',\n            body\n        };\n    },\n    transpile(node, ctx) {\n        node.body.forEach(child => {\n            switch(child.type) {\n                case 'assignmentExpression':\n                    this.AssignmentExpression(child, ctx);\n                    break;\n                case 'returnStatement':\n                    this.ReturnStatement(child, ctx);\n                    break;\n                default:\n                    this.error(child);\n            }\n            this.emit(';');\n            this.newline();\n        });\n    }\n}","module.exports = {\n    type: 'callExpression',\n    transform(node, ctx) {\n        // IdSelector, Rule\n        const callee = this.Identifier(node.callee);\n        let argument;\n\n        const context = {\n            type: 'callExpression',\n            callee,\n            param: 'ctx'\n        };\n\n        if(node.argument.type == 'block') {\n            argument = this.ObjectExpression(ctx.block, context);\n        } else if(node.argument) {\n            argument = this.Identifier(node.argument);\n        }\n        \n        return {\n            type: 'callExpression',\n            callee,\n            argument\n        };\n    },\n    transpile(node) {\n        this.Node(node.callee);\n        this.emit('(');\n        this.Node(node.argument);\n        this.emit(')');\n    }\n}","module.exports = {\n    type: 'expressionStatement',\n    transform(node) {\n        const expression = this.CallExpression(node);\n        return {\n            type: 'expressionStatement',\n            expression\n        };\n    },\n    transpile(node) {\n        this.Node(node.expression);\n        if(node.expression.type != 'functionDeclaration')\n            this.emit(';');\n    }\n}","module.exports = {\n    type: 'functionDeclaration',\n    transform(node, ctx) {\n        const identifier = this.Identifier(node);\n\n        const context = {\n            type: 'functionDeclaration',\n            identifier,\n            param: 'ctx'\n        };\n\n        const body = this.BlockStatement(ctx.block, context);\n\n        return {\n            type: 'functionDeclaration',\n            identifier,\n            body\n        };\n    },\n    transpile(node) {\n        this.emit('function ');\n        this.Identifier(node.identifier);\n        const context = {\n            type: 'functionDeclaration',\n            identifier: node.identifier,\n            param: 'ctx'\n        };\n        this.emit(`(${context.param}) {`);\n        this.newline();\n        this.indent();\n        this.BlockStatement(node.body, context);\n        this.unindent();\n        this.emit('}');\n    }\n}","function sanitize(value = '') {\n    return value.replace(/-/g, '');\n}\n\nmodule.exports = {\n    sanitize\n}","const { sanitize } = require('../utils');\n\nmodule.exports = {\n    type: 'identifier',\n    transform(node, ctx = '') {\n        let name;\n\n        if (typeof node == 'string') {\n            name = sanitize(node);\n        } else {\n            switch (node.type) {\n                case 'ClassSelector':\n                case 'TypeSelector':\n                case 'IdSelector':\n                case 'Identifier':\n                case 'identifier':\n                    name = ctx + sanitize(node.name);\n                    break;\n                default:\n                    throw new Error(`Identifier: no case for ${node.type}`);\n            }\n        }\n\n        return {\n            type: 'identifier',\n            name\n        };\n    },\n    transpile(node) {\n        this.emit(node.name);\n    }\n}","module.exports = {\n    type: 'ifStatement',\n    transform(node, ctx) {\n    },\n    transpile(node, ctx) {\n        this.emit('if(!');\n        this.Node(node.test);\n        this.emit('){');\n        this.newline();\n        this.indent();\n        this.Node(node.consequent);\n        this.newline();\n        this.unindent();\n        this.emit('}');\n    }\n}","module.exports = {\n    type: 'literal',\n    transform(node) {\n        let value;\n\n        if(node.type == 'Number') {\n            value = node.value;\n        } else if (node.type == 'Identifier') {\n            value = `'${node.name}'`;\n        } else if (node.type == 'String') {\n            value = `${node.value}`;\n        }\n\n        return {\n            type: 'literal',\n            value\n        };\n    },\n    transpile(node) {\n        this.emit(node.value);\n    }\n}","module.exports = {\n    type: 'memberExpression',\n    transform(node, ctx) {\n        let object;\n        let property;\n\n        if(node.object.type == 'TypeSelector') {\n            object = this.Identifier(node.object);\n        } else if(node.object) {\n            object = this.Identifier(node.object);\n        } else {\n            this.error(node);\n        }\n\n        if(node.property.type == 'IdSelector') {\n            property = this.CallExpression(node.property, ctx);\n        } else if(node.property) {\n            property = this.Identifier(node.property);\n        } else {\n            this.error(node);\n        }\n\n        return {\n            type: 'memberExpression',\n            object,\n            property\n        };\n    },\n    transpile(node, ctx) {\n        this.Node(node.object);\n        this.emit('.');\n        this.Node(node.property);\n    }\n}","module.exports = {\n    type: 'objectExpression',\n    transform(node, ctx) {\n        const properties = [];\n        \n        node.children.forEach(child => {\n            const property = this.Property(child, ctx);\n            properties.push(property);\n        });\n\n        return {\n            type: 'objectExpression',\n            properties\n        };\n    },\n    transpile(node, ctx) {\n        this.emit('{');\n        if(node.properties.length > 1) {\n            this.newline();\n            this.indent();\n            node.properties.forEach((child, i) => {\n                this.Property(child, ctx);\n                if(i !== node.properties.length - 1) this.emit(',');\n                this.newline();\n            });\n            this.unindent();\n        } else {\n            node.properties.forEach((child, i) => {\n                this.Property(child, ctx);\n                if(i !== node.properties.length - 1) this.emit(',');\n            });\n        }\n        this.emit('}');\n    }\n}","module.exports = {\n    type: 'pipeExpression',\n    transform(node, ctx) {\n        let param, target, argument = '$1';\n\n        return {\n            type: 'pipeExpression',\n            param,\n            target,\n            argument\n        };\n    },\n    /* \n    (function(<arg>) {\n        <target>\n    })(<param>)\n    */\n    transpile(node) {\n        this.emit('(function(');\n        this.Node(node.argument);\n        this.emit('){');\n        this.newline();\n        this.indent();\n        this.Node(node.target);\n        this.newline();\n        this.unindent();\n        this.emit('})(');\n        this.Node(node.param);\n        this.emit(')');\n    }\n}","module.exports = {\n    type: 'property',\n    transform(node, ctx) {\n        const key = this.Identifier(node.property);\n        // identifier, literal or expression\n        const value = this.ValueExpression(node.value, ctx);\n\n        return {\n            type: 'property',\n            key,\n            value\n        };\n    },\n    transpile(node, ctx) {\n        this.Node(node.key);\n        this.emit(': ');\n        this.Node(node.value);\n    }\n}","module.exports = {\n    type: 'returnStatement',\n    transform(node, ctx) {\n        return {\n            type: 'returnStatement',\n            argument: ctx.param\n        };\n    },\n    transpile(node, ctx) {\n        this.emit(`return ${node.argument}`);\n    }\n}","class Context {\n    constructor(options) {\n        this.current = options.head;\n        this.block = options.block;\n        this.argId = 0;\n    }\n    next() {\n        this.current = this.current.next;\n        return this.current && this.current.data;\n    }\n    node() {\n        return this.current && this.current.data;\n    }\n    getArg() {\n        return `$${this.argId++}`\n    }\n}\n\nfunction getStatementNodes(node) {\n    const statements = [];\n\n    node.prelude.children.forEach(child => {\n        switch (child.type) {\n            case 'Selector':\n                const expression = getExpression.call(this, child, node.block);\n                statements.push(expression);\n                break;\n            default:\n                this.error(child);\n        }\n    });\n\n    return statements;\n}\n\nfunction getExpression(node, block) {\n    const ctx = new Context({ head: node.children.head, block });\n    let next = ctx.node();\n\n    switch (next.type) {\n        case 'IdSelector':\n        case 'TypeSelector':\n            const arg = ctx.getArg();\n            const target = pipeExpr.call(this, ctx, arg);\n            const param = this.ObjectExpression(block, ctx);\n            const argument = this.Identifier(arg);\n            return {\n                type: 'expressionStatement',\n                expression: buildPipeExpr(param, target, argument)\n            }\n            break;\n        case 'ClassSelector':\n            const functionDecl = this.FunctionDeclaration(next, ctx);\n            return functionDecl;\n            break;\n        default:\n            this.error(child);\n    }\n}\n\nfunction buildPipeExpr(param, target, argument) {\n    return {\n        type: 'pipeExpression',\n        argument,\n        target: {\n            type: 'expressionStatement',\n            expression: target\n        },\n        param\n    };\n}\n\nfunction pipeExpr(ctx, arg) {\n    let left = memberExp.call(this, ctx, arg);\n\n    if (left.type != 'callExpression') {\n        left = {\n            type: 'assignmentExpression',\n            operator: '=',\n            left,\n            right: this.Identifier(arg)\n        }\n    }\n\n    left = ifExpr.call(this, ctx, arg, left);\n    return left;\n}\n\nfunction memberExp(ctx, arg) {\n    let curr = ctx.node();\n    let left = identifierExpr.call(this, ctx, arg);\n    if (curr.type == 'IdSelector') {\n        left = {\n            type: 'callExpression',\n            callee: left,\n            argument: this.Identifier(arg)\n        }\n    }\n    let right = memberExp$.call(this, ctx, arg, left);\n    return right;\n}\n\nfunction memberExp$(ctx, arg, child) {\n    let curr = ctx.node();\n    if (curr && curr.type == 'WhiteSpace') {\n        curr = ctx.next();\n        const right = identifierExpr.call(this, ctx, arg);\n\n        let left = {\n            type: 'memberExpression',\n            object: child,\n            property: right\n        };\n        if (curr.type == 'IdSelector') {\n            left = {\n                type: 'callExpression',\n                callee: left,\n                argument: this.Identifier(arg)\n            }\n        } else if (curr.type != 'TypeSelector') {\n            throw new Error();\n        }\n\n        return memberExp$.call(this, ctx, arg, left);\n    } else {\n        return child;\n    }\n}\n\nfunction ifExpr(ctx, arg, child) {\n    let curr = ctx.node();\n    if (curr && curr.type == 'PseudoClassSelector' && curr.name == 'not') {\n        const childCtx = new Context({ head: curr.children.head.data.children.head.data.children.head });\n        const test = memberExp.call(this, childCtx, arg);\n\n        ctx.next();\n        const ch = ifExpr.call(this, ctx, arg, child);\n        return {\n            type: 'ifStatement',\n            test,\n            consequent: ch,\n        };\n    }\n    else if (curr && curr.type == 'PseudoClassSelector' && curr.name == 'matches') {\n        const childCtx = new Context({ head: curr.children.head.data.children.head.data.children.head });\n        const test = memberExp.call(this, childCtx, arg);\n\n        ctx.next();\n        const ch = ifExpr.call(this, ctx, arg, child);\n        return {\n            type: 'whileStatement',\n            test,\n            body: ch,\n        };\n    } else if (curr && curr.name == '>') {\n        ctx.next();\n        const argument = this.Identifier(ctx.getArg());\n        const right = pipeExpr.call(this, ctx, argument);\n        return buildPipeExpr(child, right, argument);\n    }\n    return child;\n}\n\nfunction identifierExpr(ctx) {\n    const next = ctx.node();\n    ctx.next();\n    switch (next.type) {\n        case 'IdSelector':\n        case 'TypeSelector':\n            return this.Identifier(next);\n        default:\n            this.error(next);\n    }\n}\n\n/*\npipeExpr -> callExpr (\">\" pipeExpr)     \ncallExpr -> (memberExpr) <IdSelector>\nmemberExpr -> memberExpr \" \" <Identifier> | <Identifier>\n\nmemberExpr -> <Identifier> memberExpr'\nmemberExpr' -> \" \" <Identifier> memberExpr' | <empty>\n\n*/\n\n\n/*\npipeExpr -> callExpr | memberExpr (\">\" pipeExpr)    \n\nmemberExpr -> <Identifier> memberExpr'\nmemberExpr' -> \" \" <Identifier> memberExpr' | <empty>\n\n*/\nmodule.exports = {\n    type: 'root',\n    transform(node) {\n        const statements = [];\n\n        node.children.forEach(child => {\n            switch (child.type) {\n                case 'Rule':\n                    // function declaration \n                    // or statement\n                    const statement = getStatementNodes.call(this, child);\n                    statements.push(...statement);\n                    break;\n                default:\n                    this.error(child);\n                    break;\n            }\n        });\n\n        return {\n            type: 'root',\n            statements\n        };\n    },\n    transpile(node) {\n        node.statements.forEach(child => {\n            this.Node(child);\n            this.newline(false);\n        });\n    }\n}","module.exports = {\n    type: 'valueExpression',\n    transform(node, ctx) {\n        let left;\n        let right;\n        let operator;\n\n        node.children.forEach(child => {\n            switch(child.type) {\n                case 'Identifier':\n                case 'String':\n                case 'Number':\n                    if(!left) {\n                        left = this.Literal(child);\n                    } else {\n                        right = this.Literal(child);\n                        left = this.BinaryExpression(left, right, operator);\n                    }\n                    break;\n                case 'Operator':\n                    operator = child.value;\n                    break;\n                case 'Function':\n                    // var or calc\n                    if(child.name == 'calc')\n                        left = this.ValueExpression(child);\n                    if(child.name == 'var') {\n                        if(!left) {\n                            left = this.Identifier(child.children.head.data, 'ctx.');\n                        } else {\n                            right = this.Identifier(child.children.head.data, 'ctx.');\n                            left = this.BinaryExpression(left, right, operator);\n                        }\n                    }\n                    break;\n                case 'WhiteSpace':\n                default:\n                    break;\n            }\n        });\n        \n        const child = node.children.head; //Number, Operator, WhiteSpace, Function\n\n        return left;\n    },\n    transpile(node, ctx) {\n        this.Node(node);\n    }\n}","module.exports = {\n    type: 'whileStatement',\n    transform(node, ctx) {\n    },\n    transpile(node, ctx) {\n        if(this.guardLoops) {\n            this.includeLoopGuard();\n            this.emit('const $g = loop_guard(100);');\n            this.newline();\n        }\n        this.emit('while(');\n        this.Node(node.test);\n        this.emit('){');\n        this.newline();\n        this.indent();\n        if(this.guardLoops) {\n            this.emit('$g();');\n            this.newline();\n        }\n        this.Node(node.body);\n        this.newline();\n        this.unindent();\n        this.emit('}');\n    }\n}","module.exports = {\n    AssignmentExpression: require('./assignmentExpression'),\n    BinaryExpression: require('./binaryExpression'),\n    BlockStatement: require('./blockStatement'),\n    CallExpression: require('./callExpression'),\n    ExpressionStatement: require('./expressionStatement'),\n    FunctionDeclaration: require('./functionDeclaration'),\n    Identifier: require('./identifier'),\n    IfStatement: require('./ifStatement'),\n    Literal: require('./literal'),\n    MemberExpression: require('./memberExpression'),\n    ObjectExpression: require('./objectExpression'),\n    PipeExpression: require('./pipeExpression'),\n    Property: require('./property'),\n    ReturnStatement: require('./returnStatement'),\n    Root: require('./root'),\n    ValueExpression: require('./valueExpression'),\n    WhileStatement: require('./whileStatement')\n}","const csstree = require('css-tree');\nconst nodeSettings = require('./nodes');\n\nconst transformer = {\n    parse(source) {\n        const root = this.source_ast = csstree.parse(source, { parseValue: true, parseCustomProperty: true });\n\n        switch (root.type) {\n            case 'StyleSheet':\n                return this.Root(root);\n                break;\n            default:\n                this.error(root);\n                break;\n        }\n    },\n    error(node) {\n        throw new Error(`This.error transforming ${node.type} node`, node);\n    }\n}\n\nfor(const key in nodeSettings) {\n    transformer[key] = nodeSettings[key].transform;\n}\n\nmodule.exports = transformer;","function Color(value) {\n    // validate valid color\n    this.val = value;\n}\n\nColor.prototype.toString = function() {\n    return this.val;\n}\n\nfunction loop_guard(timeout) {\n\tconst start = Date.now();\n\treturn () => {\n\t\tif (Date.now() - start > timeout) {\n\t\t\tthrow new Error(`Infinite loop detected`);\n\t\t}\n\t};\n}\n\nmodule.exports = {\n    loop_guard\n}","const nodeSettings = require('./nodes');\nconst { loop_guard } = require('./runtime/types');\n\nconst transpiler = {\n    parse(ast, options = {}) {\n        this.guardLoops = options.guardLoops !== undefined ? options.guardLoops : true;\n        this.buffer = '';\n        this.whitespace = '';\n        this.runtimeBuffer = '';\n        this.hasLoopGuard = false;\n\n        switch (ast.type) {\n            case 'root':\n                this.Root(ast);\n                break;\n            default:\n                this.error(ast);\n                break;\n        }\n\n        if(this.runtimeBuffer) {\n            this.newline();\n            this.emit(this.runtimeBuffer);\n        }\n        return this.buffer;\n    },\n    emit(token) {\n        this.buffer += token;\n    },\n    newline(tab = true) {\n        this.buffer += '\\n'\n        if(tab)\n            this.buffer += this.whitespace;\n    },\n    indent() {\n        this.whitespace += '  ';\n        this.buffer += '  ';\n    },\n    unindent() {\n        this.whitespace = this.whitespace.substring(0, this.whitespace.length - 2);\n        this.buffer = this.buffer.substring(0, this.buffer.length - 2);\n    },\n    error(node) {\n        throw new Error(`This.error transpiling ${node.type} node`, node);\n    },\n    Node(node) {\n        if(node && this.nodes.has(node.type)) {\n            this.nodes.get(node.type).call(this, node);\n        } else {\n            this.error(node);\n        }\n    },\n    includeLoopGuard() {\n        if(!this.hasLoopGuard) {\n            this.hasLoopGuard = true;\n            this.runtimeBuffer += loop_guard.toString();\n        }\n    }\n}\n\ntranspiler.nodes = new Map();\nfor(const key in nodeSettings) {\n    const node = nodeSettings[key];\n    transpiler.nodes.set(node.type, node.transpile);\n    transpiler[key] = node.transpile;\n}\n\nmodule.exports = transpiler;","const transformer = require('./transform');\nconst transpiler = require('./transpile');\n\nfunction parse(source) {\n    const ast = transformer.parse(source);\n    const target = transpiler.parse(ast);\n    return target;\n}\n\nmodule.exports = {\n    transform: (src) => transformer.parse(src),\n    transpile: (ast) => transpiler.parse(ast),\n    parse\n}","import CSSp from './index';\n\nconst examples = {\n    call: `.sum {\\n\\theight: calc(10 + 20);\\n}\\n\\n#sum > console #log {\\n\\theight: 10;\\n}`,\n    if: `.is-not-5 {\\n\\t--result: calc(var(--a) - 5);\\n}\\nconsole #log:not(#is-not-5 result) {\\n\\t--a: 5;\\n\\t--logged: 'A is 5';\\n}`,\n    loop: `.is-not-0 {\\n\\t--a: calc(var(--a) - 1);\\n\\t--result: calc(var(--a));\\n}\\n\\nconsole #log:matches(#is-not-0 result) {\\n\\t--a: 10;\\n}`,\n    fibonacci: `.fib {\\n\\t--prevPrev: calc(var(--prev));\\n\\t--prev: calc(var(--curr));\\n\\t--curr: calc(var(--prevPrev) + var(--prev));\\n}\\n\\n.fib-init {\\n\\t--prev: 0;\\n\\t--curr: 1;\\n}\\n\\n.loop {\\n\\t--n: calc(var(--n) - 1);\\n}\\n\\n#fib-init > #fib:matches(#loop n) > console #log {\\n\\t--n: 10;\\n}`\n}\n\nconst cm = CodeMirror(document.getElementById('code'), {\n    value: loadValue(),\n    mode: 'css',\n    lineNumbers: true,\n    styleActiveLine: true,\n    matchBrackets: true,\n});\nconsole.log(document.getElementById('code'), cm);\n\nfunction loadValue() {\n    if(window.location.hash) {\n        const key = window.location.hash.substr(1);\n        if(examples[key])\n            return examples[key];\n    }\n    if(localStorage.getItem('last_value'))\n        return localStorage.getItem('last_value');\n\n    return examples['call'];\n}\n\nconst resultElement = document.getElementById('result');\n\nconst cm_js = CodeMirror(document.getElementById('js-code'), {\n    value: ``,\n    mode: 'javascript',\n    lineNumbers: true,\n    styleActiveLine: true,\n    readOnly: true\n});\n\nfunction onChange(cm) {\n    const value = cm.getValue();\n    localStorage.setItem('last_value', value);\n\n    try {\n        let js = '';\n\n        console.log(js);\n        try {\n            //js = CSSp.parse(value);\n            window.ast = CSSp.transform(value);\n            js = CSSp.transpile(window.ast);\n            cm_js.setValue(js);\n        } catch(e) {\n            console.error(e);\n            cm_js.setValue(e.stack);\n        }\n\n        const result = eval(js);\n        console.log('result:', result);\n        resultElement.textContent = JSON.stringify(result, null, '\\t');\n    } catch (e) {\n        console.error(e);\n        resultElement.textContent = e.toString();\n    }\n}\ncm.on('change', onChange);\nonChange(cm);"],"names":["node","result","createCustomError","error","require$$0","line","SyntaxError","_SyntaxError","utils","require$$1","value","syntax","properties","adoptBuffer","require$$2","charCodeDefinitions","require$$3","require$$4","offset","code","tokenizer","index","terms","combinator","parse","walk","match","matchGraph","trace","lexer","structure","names","generic","require$$5","require$$6","require$$7","require$$8","require$$9","search","require$$10","require$$11","name","atrule","child","sequence","pseudo","create","parser","base64","util","has","sourceFile","sourceMap","types","walker","clone","shape","definitionSyntax","require$$12","config","WhiteSpace","selector","require$$13","require$$14","require$$15","require$$16","require$$17","require$$18","require$$19","require$$20","require$$21","require$$22","require$$23","require$$24","require$$25","require$$26","require$$27","require$$28","require$$29","require$$30","require$$31","require$$32","require$$33","require$$34","require$$35","require$$36","require$$37","require$$38","require$$39","selectorList","nthWithOfClause","nth","module","expression","sanitize","__CJS__import__0__.default","__CJS__import__0__","__CJS__import__1__.default","__CJS__import__1__","__CJS__import__2__.default","__CJS__import__3__.default","__CJS__import__4__.default","__CJS__import__5__.default","__CJS__import__6__.default","__CJS__import__7__.default","__CJS__import__8__.default","__CJS__import__9__.default","__CJS__import__10__.default","__CJS__import__11__.default","__CJS__import__12__.default","__CJS__import__13__.default","__CJS__import__14__.default","__CJS__import__15__.default","__CJS__import__16__.default","nodeSettings","transformer","loop_guard","transpiler","CSSp"],"mappings":"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","x_google_ignoreList":[0,1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20,21,22,23,24,25,26,27,28,29,30,31,32,33,34,35,36,37,38,39,40,41,42,43,44,45,46,47,48,49,50,51,52,53,54,55,56,57,58,59,60,61,62,63,64,65,66,67,68,69,70,71,72,73,74,75,76,77,78,79,80,81,82,83,84,85,86,87,88,89,90,91,92,93,94,95,96,97,98,99,100,101,102,103,104,105,106,107,108,109,110,111,112,113,114,115,116]}